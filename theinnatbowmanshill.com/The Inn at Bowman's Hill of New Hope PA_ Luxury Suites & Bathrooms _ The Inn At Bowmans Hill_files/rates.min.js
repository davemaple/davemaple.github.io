var module$jquery = {};
(function (window, undefined) {
    function createFlags(flags) {
        var object = flagsCache[flags] = {};
        var i;
        var length;
        flags = flags.split(/\s+/);
        for (i = 0, length = flags.length; i < length; i++)object[flags[i]] = true;
        return object
    }

    function dataAttr(elem, key, data) {
        if (data === undefined && elem.nodeType === 1) {
            var name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
                try {
                    data = data === "true" ? true : data === "false" ? false : data === "null" ? null : jQuery$$0.isNumeric(data) ? +data : rbrace.test(data) ?
                        jQuery$$0.parseJSON(data) : data
                } catch (e) {
                }
                jQuery$$0.data(elem, key, data)
            } else data = undefined
        }
        return data
    }

    function isEmptyDataObject(obj) {
        for (var name in obj) {
            if (name === "data" && jQuery$$0.isEmptyObject(obj[name]))continue;
            if (name !== "toJSON")return false
        }
        return true
    }

    function handleQueueMarkDefer(elem, type, src) {
        var deferDataKey = type + "defer";
        var queueDataKey = type + "queue";
        var markDataKey = type + "mark";
        var defer = jQuery$$0._data(elem, deferDataKey);
        if (defer && (src === "queue" || !jQuery$$0._data(elem, queueDataKey)) &&
            (src === "mark" || !jQuery$$0._data(elem, markDataKey)))setTimeout(function () {
            if (!jQuery$$0._data(elem, queueDataKey) && !jQuery$$0._data(elem, markDataKey)) {
                jQuery$$0.removeData(elem, deferDataKey, true);
                defer.fire()
            }
        }, 0)
    }

    function returnFalse() {
        return false
    }

    function returnTrue() {
        return true
    }

    function isDisconnected(node) {
        return !node || !node.parentNode || node.parentNode.nodeType === 11
    }

    function winnow(elements, qualifier, keep) {
        qualifier = qualifier || 0;
        if (jQuery$$0.isFunction(qualifier))return jQuery$$0.grep(elements,
            function (elem, i) {
                var retVal = !!qualifier.call(elem, i, elem);
                return retVal === keep
            }); else if (qualifier.nodeType)return jQuery$$0.grep(elements, function (elem, i) {
            return elem === qualifier === keep
        }); else if (typeof qualifier === "string") {
            var filtered = jQuery$$0.grep(elements, function (elem) {
                return elem.nodeType === 1
            });
            if (isSimple.test(qualifier))return jQuery$$0.filter(qualifier, filtered, !keep); else qualifier = jQuery$$0.filter(qualifier, filtered)
        }
        return jQuery$$0.grep(elements, function (elem, i) {
            return jQuery$$0.inArray(elem,
                    qualifier) >= 0 === keep
        })
    }

    function createSafeFragment(document) {
        var list = nodeNames.split("|");
        var safeFrag = document.createDocumentFragment();
        if (safeFrag.createElement)for (; list.length;)safeFrag.createElement(list.pop());
        return safeFrag
    }

    function root(elem, cur) {
        return jQuery$$0.nodeName(elem, "table") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem
    }

    function cloneCopyEvent(src, dest) {
        if (dest.nodeType !== 1 || !jQuery$$0.hasData(src))return;
        var type;
        var i;
        var l;
        var oldData = jQuery$$0._data(src);
        var curData = jQuery$$0._data(dest, oldData);
        var events = oldData.events;
        if (events) {
            delete curData.handle;
            curData.events = {};
            for (type in events)for (i = 0, l = events[type].length; i < l; i++)jQuery$$0.event.add(dest, type, events[type][i])
        }
        if (curData.data)curData.data = jQuery$$0.extend({}, curData.data)
    }

    function cloneFixAttributes(src, dest) {
        var nodeName;
        if (dest.nodeType !== 1)return;
        if (dest.clearAttributes)dest.clearAttributes();
        if (dest.mergeAttributes)dest.mergeAttributes(src);
        nodeName = dest.nodeName.toLowerCase();
        if (nodeName === "object")dest.outerHTML = src.outerHTML; else if (nodeName === "input" && (src.type === "checkbox" || src.type === "radio")) {
            if (src.checked)dest.defaultChecked = dest.checked = src.checked;
            if (dest.value !== src.value)dest.value = src.value
        } else if (nodeName === "option")dest.selected = src.defaultSelected; else if (nodeName === "input" || nodeName === "textarea")dest.defaultValue = src.defaultValue; else if (nodeName === "script" && dest.text !== src.text)dest.text = src.text;
        dest.removeAttribute(jQuery$$0.expando);
        dest.removeAttribute("_submit_attached");
        dest.removeAttribute("_change_attached")
    }

    function getAll(elem) {
        if (typeof elem.getElementsByTagName !== "undefined")return elem.getElementsByTagName("*"); else if (typeof elem.querySelectorAll !== "undefined")return elem.querySelectorAll("*"); else return []
    }

    function fixDefaultChecked(elem) {
        if (elem.type === "checkbox" || elem.type === "radio")elem.defaultChecked = elem.checked
    }

    function findInputs(elem) {
        var nodeName = (elem.nodeName || "").toLowerCase();
        if (nodeName === "input")fixDefaultChecked(elem);
        else if (nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined")jQuery$$0.grep(elem.getElementsByTagName("input"), fixDefaultChecked)
    }

    function shimCloneNode(elem) {
        var div = document$$0.createElement("div");
        safeFragment.appendChild(div);
        div.innerHTML = elem.outerHTML;
        return div.firstChild
    }

    function getWidthOrHeight(elem, name, extra) {
        var val = name === "width" ? elem.offsetWidth : elem.offsetHeight;
        var i = name === "width" ? 1 : 0;
        var len = 4;
        if (val > 0) {
            if (extra !== "border")for (; i < len; i += 2) {
                if (!extra)val -= parseFloat(jQuery$$0.css(elem,
                    "padding" + cssExpand[i])) || 0;
                if (extra === "margin")val += parseFloat(jQuery$$0.css(elem, extra + cssExpand[i])) || 0; else val -= parseFloat(jQuery$$0.css(elem, "border" + cssExpand[i] + "Width")) || 0
            }
            return val + "px"
        }
        val = curCSS(elem, name);
        if (val < 0 || val == null)val = elem.style[name];
        if (rnumnonpx.test(val))return val;
        val = parseFloat(val) || 0;
        if (extra)for (; i < len; i += 2) {
            val += parseFloat(jQuery$$0.css(elem, "padding" + cssExpand[i])) || 0;
            if (extra !== "padding")val += parseFloat(jQuery$$0.css(elem, "border" + cssExpand[i] + "Width")) || 0;
            if (extra ===
                "margin")val += parseFloat(jQuery$$0.css(elem, extra + cssExpand[i])) || 0
        }
        return val + "px"
    }

    function addToPrefiltersOrTransports(structure) {
        return function (dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
                func = dataTypeExpression;
                dataTypeExpression = "*"
            }
            if (jQuery$$0.isFunction(func)) {
                var dataTypes = dataTypeExpression.toLowerCase().split(rspacesAjax);
                var i = 0;
                var length = dataTypes.length;
                var dataType;
                var list;
                for (var placeBefore; i < length; i++) {
                    dataType = dataTypes[i];
                    placeBefore = /^\+/.test(dataType);
                    if (placeBefore)dataType = dataType.substr(1) || "*";
                    list = structure[dataType] = structure[dataType] || [];
                    list[placeBefore ? "unshift" : "push"](func)
                }
            }
        }
    }

    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, dataType, inspected) {
        dataType = dataType || options.dataTypes[0];
        inspected = inspected || {};
        inspected[dataType] = true;
        var list = structure[dataType];
        var i = 0;
        var length = list ? list.length : 0;
        var executeOnly = structure === prefilters;
        for (var selection; i < length && (executeOnly || !selection); i++) {
            selection =
                list[i](options, originalOptions, jqXHR);
            if (typeof selection === "string")if (!executeOnly || inspected[selection])selection = undefined; else {
                options.dataTypes.unshift(selection);
                selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, selection, inspected)
            }
        }
        if ((executeOnly || !selection) && !inspected["*"])selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, "*", inspected);
        return selection
    }

    function ajaxExtend(target, src) {
        var key;
        var deep;
        var flatOptions = jQuery$$0.ajaxSettings.flatOptions ||
            {};
        for (key in src)if (src[key] !== undefined)(flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
        if (deep)jQuery$$0.extend(true, target, deep)
    }

    function buildParams(prefix, obj, traditional, add) {
        if (jQuery$$0.isArray(obj))jQuery$$0.each(obj, function (i, v) {
            if (traditional || rbracket.test(prefix))add(prefix, v); else buildParams(prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add)
        }); else if (!traditional && jQuery$$0.type(obj) === "object")for (var name in obj)buildParams(prefix + "[" + name + "]", obj[name], traditional,
            add); else add(prefix, obj)
    }

    function ajaxHandleResponses(s, jqXHR, responses) {
        var contents = s.contents;
        var dataTypes = s.dataTypes;
        var responseFields = s.responseFields;
        var ct;
        var type;
        var finalDataType;
        var firstDataType;
        for (type in responseFields)if (type in responses)jqXHR[responseFields[type]] = responses[type];
        for (; dataTypes[0] === "*";) {
            dataTypes.shift();
            if (ct === undefined)ct = s.mimeType || jqXHR.getResponseHeader("content-type")
        }
        if (ct)for (type in contents)if (contents[type] && contents[type].test(ct)) {
            dataTypes.unshift(type);
            break
        }
        if (dataTypes[0]in responses)finalDataType = dataTypes[0]; else {
            for (type in responses) {
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break
                }
                if (!firstDataType)firstDataType = type
            }
            finalDataType = finalDataType || firstDataType
        }
        if (finalDataType) {
            if (finalDataType !== dataTypes[0])dataTypes.unshift(finalDataType);
            return responses[finalDataType]
        }
    }

    function ajaxConvert(s, response) {
        if (s.dataFilter)response = s.dataFilter(response, s.dataType);
        var dataTypes = s.dataTypes;
        var converters = {};
        var i;
        var key;
        var length = dataTypes.length;
        var tmp;
        var current = dataTypes[0];
        var prev;
        var conversion;
        var conv;
        var conv1;
        var conv2;
        for (i = 1; i < length; i++) {
            if (i === 1)for (key in s.converters)if (typeof key === "string")converters[key.toLowerCase()] = s.converters[key];
            prev = current;
            current = dataTypes[i];
            if (current === "*")current = prev; else if (prev !== "*" && prev !== current) {
                conversion = prev + " " + current;
                conv = converters[conversion] || converters["* " + current];
                if (!conv) {
                    conv2 = undefined;
                    for (conv1 in converters) {
                        tmp = conv1.split(" ");
                        if (tmp[0] === prev || tmp[0] === "*") {
                            conv2 = converters[tmp[1] + " " + current];
                            if (conv2) {
                                conv1 = converters[conv1];
                                if (conv1 === true)conv = conv2; else if (conv2 === true)conv = conv1;
                                break
                            }
                        }
                    }
                }
                if (!(conv || conv2))jQuery$$0.error("No conversion from " + conversion.replace(" ", " to "));
                if (conv !== true)response = conv ? conv(response) : conv2(conv1(response))
            }
        }
        return response
    }

    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest
        } catch (e) {
        }
    }

    function createActiveXHR() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {
        }
    }

    function createFxNow() {
        setTimeout(clearFxNow, 0);
        return fxNow = jQuery$$0.now()
    }

    function clearFxNow() {
        fxNow = undefined
    }

    function genFx(type, num) {
        var obj = {};
        jQuery$$0.each(fxAttrs.concat.apply([], fxAttrs.slice(0, num)), function () {
            obj[this] = type
        });
        return obj
    }

    function defaultDisplay(nodeName) {
        if (!elemdisplay[nodeName]) {
            var body = document$$0.body;
            var elem = jQuery$$0("\x3c" + nodeName + "\x3e").appendTo(body);
            var display = elem.css("display");
            elem.remove();
            if (display === "none" || display === "") {
                if (!iframe) {
                    iframe = document$$0.createElement("iframe");
                    iframe.frameBorder = iframe.width = iframe.height = 0
                }
                body.appendChild(iframe);
                if (!iframeDoc || !iframe.createElement) {
                    iframeDoc = (iframe.contentWindow || iframe.contentDocument).document;
                    iframeDoc.write((jQuery$$0.support.boxModel ? "\x3c!doctype html\x3e" : "") + "\x3chtml\x3e\x3cbody\x3e");
                    iframeDoc.close()
                }
                elem = iframeDoc.createElement(nodeName);
                iframeDoc.body.appendChild(elem);
                display = jQuery$$0.css(elem, "display");
                body.removeChild(iframe)
            }
            elemdisplay[nodeName] = display
        }
        return elemdisplay[nodeName]
    }

    function getWindow(elem) {
        return jQuery$$0.isWindow(elem) ?
            elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false
    }

    var document$$0 = window.document;
    var navigator = window.navigator;
    var location = window.location;
    var jQuery$$0 = function () {
        function doScrollCheck() {
            if (jQuery.isReady)return;
            try {
                document$$0.documentElement.doScroll("left")
            } catch (e) {
                setTimeout(doScrollCheck, 1);
                return
            }
            jQuery.ready()
        }

        var jQuery = function (selector, context) {
            return new jQuery.fn.init(selector, context, rootjQuery)
        };
        var _jQuery = window.jQuery;
        var _$ = window.$;
        var rootjQuery;
        var quickExpr =
            /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;
        var rnotwhite = /\S/;
        var trimLeft = /^\s+/;
        var trimRight = /\s+$/;
        var rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/;
        var rvalidchars = /^[\],:{}\s]*$/;
        var rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
        var rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
        var rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g;
        var rwebkit = /(webkit)[ \/]([\w.]+)/;
        var ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/;
        var rmsie = /(msie) ([\w.]+)/;
        var rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/;
        var rdashAlpha = /-([a-z]|[0-9])/ig;
        var rmsPrefix = /^-ms-/;
        var fcamelCase = function (all, letter) {
            return (letter + "").toUpperCase()
        };
        var userAgent = navigator.userAgent;
        var browserMatch;
        var readyList;
        var DOMContentLoaded;
        var toString = Object.prototype.toString;
        var hasOwn = Object.prototype.hasOwnProperty;
        var push = Array.prototype.push;
        var slice = Array.prototype.slice;
        var trim = String.prototype.trim;
        var indexOf = Array.prototype.indexOf;
        var class2type = {};
        jQuery.fn = jQuery.prototype = {
            constructor: jQuery, init: function (selector,
                                                 context, rootjQuery) {
                var match;
                var elem;
                var ret;
                var doc;
                if (!selector)return this;
                if (selector.nodeType) {
                    this.context = this[0] = selector;
                    this.length = 1;
                    return this
                }
                if (selector === "body" && !context && document$$0.body) {
                    this.context = document$$0;
                    this[0] = document$$0.body;
                    this.selector = selector;
                    this.length = 1;
                    return this
                }
                if (typeof selector === "string") {
                    if (selector.charAt(0) === "\x3c" && selector.charAt(selector.length - 1) === "\x3e" && selector.length >= 3)match = [null, selector, null]; else match = quickExpr.exec(selector);
                    if (match &&
                        (match[1] || !context))if (match[1]) {
                        context = context instanceof jQuery ? context[0] : context;
                        doc = context ? context.ownerDocument || context : document$$0;
                        ret = rsingleTag.exec(selector);
                        if (ret)if (jQuery.isPlainObject(context)) {
                            selector = [document$$0.createElement(ret[1])];
                            jQuery.fn.attr.call(selector, context, true)
                        } else selector = [doc.createElement(ret[1])]; else {
                            ret = jQuery.buildFragment([match[1]], [doc]);
                            selector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes
                        }
                        return jQuery.merge(this, selector)
                    } else {
                        elem =
                            document$$0.getElementById(match[2]);
                        if (elem && elem.parentNode) {
                            if (elem.id !== match[2])return rootjQuery.find(selector);
                            this.length = 1;
                            this[0] = elem
                        }
                        this.context = document$$0;
                        this.selector = selector;
                        return this
                    } else if (!context || context.jquery)return (context || rootjQuery).find(selector); else return this.constructor(context).find(selector)
                } else if (jQuery.isFunction(selector))return rootjQuery.ready(selector);
                if (selector.selector !== undefined) {
                    this.selector = selector.selector;
                    this.context = selector.context
                }
                return jQuery.makeArray(selector,
                    this)
            }, selector: "", jquery: "1.7.2", length: 0, size: function () {
                return this.length
            }, toArray: function () {
                return slice.call(this, 0)
            }, get: function (num) {
                return num == null ? this.toArray() : num < 0 ? this[this.length + num] : this[num]
            }, pushStack: function (elems, name, selector) {
                var ret = this.constructor();
                if (jQuery.isArray(elems))push.apply(ret, elems); else jQuery.merge(ret, elems);
                ret.prevObject = this;
                ret.context = this.context;
                if (name === "find")ret.selector = this.selector + (this.selector ? " " : "") + selector; else if (name)ret.selector =
                    this.selector + "." + name + "(" + selector + ")";
                return ret
            }, each: function (callback, args) {
                return jQuery.each(this, callback, args)
            }, ready: function (fn) {
                jQuery.bindReady();
                readyList.add(fn);
                return this
            }, eq: function (i) {
                i = +i;
                return i === -1 ? this.slice(i) : this.slice(i, i + 1)
            }, first: function () {
                return this.eq(0)
            }, last: function () {
                return this.eq(-1)
            }, slice: function () {
                return this.pushStack(slice.apply(this, arguments), "slice", slice.call(arguments).join(","))
            }, map: function (callback) {
                return this.pushStack(jQuery.map(this, function (elem,
                                                                 i) {
                    return callback.call(elem, i, elem)
                }))
            }, end: function () {
                return this.prevObject || this.constructor(null)
            }, push: push, sort: [].sort, splice: [].splice
        };
        jQuery.fn.init.prototype = jQuery.fn;
        jQuery.extend = jQuery.fn.extend = function () {
            var options;
            var name;
            var src;
            var copy;
            var copyIsArray;
            var clone;
            var target = arguments[0] || {};
            var i = 1;
            var length = arguments.length;
            var deep = false;
            if (typeof target === "boolean") {
                deep = target;
                target = arguments[1] || {};
                i = 2
            }
            if (typeof target !== "object" && !jQuery.isFunction(target))target = {};
            if (length === i) {
                target = this;
                --i
            }
            for (; i < length; i++)if ((options = arguments[i]) != null)for (name in options) {
                src = target[name];
                copy = options[name];
                if (target === copy)continue;
                if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
                    if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && jQuery.isArray(src) ? src : []
                    } else clone = src && jQuery.isPlainObject(src) ? src : {};
                    target[name] = jQuery.extend(deep, clone, copy)
                } else if (copy !== undefined)target[name] = copy
            }
            return target
        };
        jQuery.extend({
            noConflict: function (deep) {
                if (window.$ ===
                    jQuery)window.$ = _$;
                if (deep && window.jQuery === jQuery)window.jQuery = _jQuery;
                return jQuery
            }, isReady: false, readyWait: 1, holdReady: function (hold) {
                if (hold)jQuery.readyWait++; else jQuery.ready(true)
            }, ready: function (wait) {
                if (wait === true && !--jQuery.readyWait || wait !== true && !jQuery.isReady) {
                    if (!document$$0.body)return setTimeout(jQuery.ready, 1);
                    jQuery.isReady = true;
                    if (wait !== true && --jQuery.readyWait > 0)return;
                    readyList.fireWith(document$$0, [jQuery]);
                    if (jQuery.fn.trigger)jQuery(document$$0).trigger("ready").off("ready")
                }
            },
            bindReady: function () {
                if (readyList)return;
                readyList = jQuery.Callbacks("once memory");
                if (document$$0.readyState === "complete")return setTimeout(jQuery.ready, 1);
                if (document$$0.addEventListener) {
                    document$$0.addEventListener("DOMContentLoaded", DOMContentLoaded, false);
                    window.addEventListener("load", jQuery.ready, false)
                } else if (document$$0.attachEvent) {
                    document$$0.attachEvent("onreadystatechange", DOMContentLoaded);
                    window.attachEvent("onload", jQuery.ready);
                    var toplevel = false;
                    try {
                        toplevel = window.frameElement ==
                        null
                    } catch (e) {
                    }
                    if (document$$0.documentElement.doScroll && toplevel)doScrollCheck()
                }
            }, isFunction: function (obj) {
                return jQuery.type(obj) === "function"
            }, isArray: Array.isArray || function (obj) {
                return jQuery.type(obj) === "array"
            }, isWindow: function (obj) {
                return obj != null && obj == obj.window
            }, isNumeric: function (obj) {
                return !isNaN(parseFloat(obj)) && isFinite(obj)
            }, type: function (obj) {
                return obj == null ? String(obj) : class2type[toString.call(obj)] || "object"
            }, isPlainObject: function (obj) {
                if (!obj || jQuery.type(obj) !== "object" ||
                    obj.nodeType || jQuery.isWindow(obj))return false;
                try {
                    if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf"))return false
                } catch (e) {
                    return false
                }
                for (var key in obj);
                return key === undefined || hasOwn.call(obj, key)
            }, isEmptyObject: function (obj) {
                for (var name in obj)return false;
                return true
            }, error: function (msg) {
                throw new Error(msg);
            }, parseJSON: function (data) {
                if (typeof data !== "string" || !data)return null;
                data = jQuery.trim(data);
                if (window.JSON && window.JSON.parse)return window.JSON.parse(data);
                if (rvalidchars.test(data.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, "")))return (new Function("return " + data))();
                jQuery.error("Invalid JSON: " + data)
            }, parseXML: function (data) {
                if (typeof data !== "string" || !data)return null;
                var xml;
                var tmp;
                try {
                    if (window.DOMParser) {
                        tmp = new DOMParser;
                        xml = tmp.parseFromString(data, "text/xml")
                    } else {
                        xml = new ActiveXObject("Microsoft.XMLDOM");
                        xml.async = "false";
                        xml.loadXML(data)
                    }
                } catch (e) {
                    xml = undefined
                }
                if (!xml || !xml.documentElement || xml.getElementsByTagName("parsererror").length)jQuery.error("Invalid XML: " +
                data);
                return xml
            }, noop: function () {
            }, globalEval: function (data$$0) {
                if (data$$0 && rnotwhite.test(data$$0))(window.execScript || function (data) {
                    window["eval"].call(window, data)
                })(data$$0)
            }, camelCase: function (string) {
                return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
            }, nodeName: function (elem, name) {
                return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase()
            }, each: function (object, callback, args) {
                var name;
                var i = 0;
                var length = object.length;
                var isObj = length === undefined || jQuery.isFunction(object);
                if (args)if (isObj)for (name in object) {
                    if (callback.apply(object[name], args) === false)break
                } else for (; i < length;) {
                    if (callback.apply(object[i++], args) === false)break
                } else if (isObj)for (name in object) {
                    if (callback.call(object[name], name, object[name]) === false)break
                } else for (; i < length;)if (callback.call(object[i], i, object[i++]) === false)break;
                return object
            }, trim: trim ? function (text) {
                return text == null ? "" : trim.call(text)
            } : function (text) {
                return text == null ? "" : text.toString().replace(trimLeft, "").replace(trimRight,
                    "")
            }, makeArray: function (array, results) {
                var ret = results || [];
                if (array != null) {
                    var type = jQuery.type(array);
                    if (array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow(array))push.call(ret, array); else jQuery.merge(ret, array)
                }
                return ret
            }, inArray: function (elem, array, i) {
                var len;
                if (array) {
                    if (indexOf)return indexOf.call(array, elem, i);
                    len = array.length;
                    for (i = i ? i < 0 ? Math.max(0, len + i) : i : 0; i < len; i++)if (i in array && array[i] === elem)return i
                }
                return -1
            }, merge: function (first, second) {
                var i =
                    first.length;
                var j = 0;
                if (typeof second.length === "number")for (var l = second.length; j < l; j++)first[i++] = second[j]; else for (; second[j] !== undefined;)first[i++] = second[j++];
                first.length = i;
                return first
            }, grep: function (elems, callback, inv) {
                var ret = [];
                var retVal;
                inv = !!inv;
                var i = 0;
                for (var length = elems.length; i < length; i++) {
                    retVal = !!callback(elems[i], i);
                    if (inv !== retVal)ret.push(elems[i])
                }
                return ret
            }, map: function (elems, callback, arg) {
                var value;
                var key;
                var ret = [];
                var i = 0;
                var length = elems.length;
                var isArray = elems instanceof
                    jQuery || length !== undefined && typeof length === "number" && (length > 0 && elems[0] && elems[length - 1] || length === 0 || jQuery.isArray(elems));
                if (isArray)for (; i < length; i++) {
                    value = callback(elems[i], i, arg);
                    if (value != null)ret[ret.length] = value
                } else for (key in elems) {
                    value = callback(elems[key], key, arg);
                    if (value != null)ret[ret.length] = value
                }
                return ret.concat.apply([], ret)
            }, guid: 1, proxy: function (fn, context) {
                if (typeof context === "string") {
                    var tmp = fn[context];
                    context = fn;
                    fn = tmp
                }
                if (!jQuery.isFunction(fn))return undefined;
                var args =
                    slice.call(arguments, 2);
                var proxy = function () {
                    return fn.apply(context, args.concat(slice.call(arguments)))
                };
                proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;
                return proxy
            }, access: function (elems, fn, key$$0, value$$0, chainable, emptyGet, pass) {
                var exec;
                var bulk = key$$0 == null;
                var i = 0;
                var length = elems.length;
                if (key$$0 && typeof key$$0 === "object") {
                    for (i in key$$0)jQuery.access(elems, fn, i, key$$0[i], 1, emptyGet, value$$0);
                    chainable = 1
                } else if (value$$0 !== undefined) {
                    exec = pass === undefined && jQuery.isFunction(value$$0);
                    if (bulk)if (exec) {
                        exec = fn;
                        fn = function (elem, key, value) {
                            return exec.call(jQuery(elem), value)
                        }
                    } else {
                        fn.call(elems, value$$0);
                        fn = null
                    }
                    if (fn)for (; i < length; i++)fn(elems[i], key$$0, exec ? value$$0.call(elems[i], i, fn(elems[i], key$$0)) : value$$0, pass);
                    chainable = 1
                }
                return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key$$0) : emptyGet
            }, now: function () {
                return (new Date).getTime()
            }, uaMatch: function (ua) {
                ua = ua.toLowerCase();
                var match = rwebkit.exec(ua) || ropera.exec(ua) || rmsie.exec(ua) || ua.indexOf("compatible") < 0 &&
                    rmozilla.exec(ua) || [];
                return {browser: match[1] || "", version: match[2] || "0"}
            }, sub: function () {
                function jQuerySub(selector, context) {
                    return new jQuerySub.fn.init(selector, context)
                }

                jQuery.extend(true, jQuerySub, this);
                jQuerySub.superclass = this;
                jQuerySub.fn = jQuerySub.prototype = this();
                jQuerySub.fn.constructor = jQuerySub;
                jQuerySub.sub = this.sub;
                jQuerySub.fn.init = function init(selector, context) {
                    if (context && context instanceof jQuery && !(context instanceof jQuerySub))context = jQuerySub(context);
                    return jQuery.fn.init.call(this,
                        selector, context, rootjQuerySub)
                };
                jQuerySub.fn.init.prototype = jQuerySub.fn;
                var rootjQuerySub = jQuerySub(document$$0);
                return jQuerySub
            }, browser: {}
        });
        jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase()
        });
        browserMatch = jQuery.uaMatch(userAgent);
        if (browserMatch.browser) {
            jQuery.browser[browserMatch.browser] = true;
            jQuery.browser.version = browserMatch.version
        }
        if (jQuery.browser.webkit)jQuery.browser.safari = true;
        if (rnotwhite.test("\u00a0")) {
            trimLeft =
                /^[\s\xA0]+/;
            trimRight = /[\s\xA0]+$/
        }
        rootjQuery = jQuery(document$$0);
        if (document$$0.addEventListener)DOMContentLoaded = function () {
            document$$0.removeEventListener("DOMContentLoaded", DOMContentLoaded, false);
            jQuery.ready()
        }; else if (document$$0.attachEvent)DOMContentLoaded = function () {
            if (document$$0.readyState === "complete") {
                document$$0.detachEvent("onreadystatechange", DOMContentLoaded);
                jQuery.ready()
            }
        };
        return jQuery
    }();
    var flagsCache = {};
    jQuery$$0.Callbacks = function (flags) {
        flags = flags ? flagsCache[flags] || createFlags(flags) :
        {};
        var list = [];
        var stack = [];
        var memory;
        var fired;
        var firing;
        var firingStart;
        var firingLength;
        var firingIndex;
        var add = function (args) {
            var i;
            var length;
            var elem;
            var type;
            var actual;
            for (i = 0, length = args.length; i < length; i++) {
                elem = args[i];
                type = jQuery$$0.type(elem);
                if (type === "array")add(elem); else if (type === "function")if (!flags.unique || !self.has(elem))list.push(elem)
            }
        };
        var fire = function (context, args) {
            args = args || [];
            memory = !flags.memory || [context, args];
            fired = true;
            firing = true;
            firingIndex = firingStart || 0;
            firingStart =
                0;
            for (firingLength = list.length; list && firingIndex < firingLength; firingIndex++)if (list[firingIndex].apply(context, args) === false && flags.stopOnFalse) {
                memory = true;
                break
            }
            firing = false;
            if (list)if (!flags.once) {
                if (stack && stack.length) {
                    memory = stack.shift();
                    self.fireWith(memory[0], memory[1])
                }
            } else if (memory === true)self.disable(); else list = []
        };
        var self = {
            add: function () {
                if (list) {
                    var length = list.length;
                    add(arguments);
                    if (firing)firingLength = list.length; else if (memory && memory !== true) {
                        firingStart = length;
                        fire(memory[0],
                            memory[1])
                    }
                }
                return this
            }, remove: function () {
                if (list) {
                    var args = arguments;
                    var argIndex = 0;
                    for (var argLength = args.length; argIndex < argLength; argIndex++)for (var i = 0; i < list.length; i++)if (args[argIndex] === list[i]) {
                        if (firing)if (i <= firingLength) {
                            firingLength--;
                            if (i <= firingIndex)firingIndex--
                        }
                        list.splice(i--, 1);
                        if (flags.unique)break
                    }
                }
                return this
            }, has: function (fn) {
                if (list) {
                    var i = 0;
                    for (var length = list.length; i < length; i++)if (fn === list[i])return true
                }
                return false
            }, empty: function () {
                list = [];
                return this
            }, disable: function () {
                list =
                    stack = memory = undefined;
                return this
            }, disabled: function () {
                return !list
            }, lock: function () {
                stack = undefined;
                if (!memory || memory === true)self.disable();
                return this
            }, locked: function () {
                return !stack
            }, fireWith: function (context, args) {
                if (stack)if (firing) {
                    if (!flags.once)stack.push([context, args])
                } else if (!(flags.once && memory))fire(context, args);
                return this
            }, fire: function () {
                self.fireWith(this, arguments);
                return this
            }, fired: function () {
                return !!fired
            }
        };
        return self
    };
    var sliceDeferred = [].slice;
    jQuery$$0.extend({
        Deferred: function (func) {
            var doneList =
                jQuery$$0.Callbacks("once memory");
            var failList = jQuery$$0.Callbacks("once memory");
            var progressList = jQuery$$0.Callbacks("memory");
            var state = "pending";
            var lists = {resolve: doneList, reject: failList, notify: progressList};
            var promise = {
                done: doneList.add,
                fail: failList.add,
                progress: progressList.add,
                state: function () {
                    return state
                },
                isResolved: doneList.fired,
                isRejected: failList.fired,
                then: function (doneCallbacks, failCallbacks, progressCallbacks) {
                    deferred.done(doneCallbacks).fail(failCallbacks).progress(progressCallbacks);
                    return this
                },
                always: function () {
                    deferred.done.apply(deferred, arguments).fail.apply(deferred, arguments);
                    return this
                },
                pipe: function (fnDone, fnFail, fnProgress) {
                    return jQuery$$0.Deferred(function (newDefer) {
                        jQuery$$0.each({
                            done: [fnDone, "resolve"],
                            fail: [fnFail, "reject"],
                            progress: [fnProgress, "notify"]
                        }, function (handler, data) {
                            var fn = data[0];
                            var action = data[1];
                            var returned;
                            if (jQuery$$0.isFunction(fn))deferred[handler](function () {
                                returned = fn.apply(this, arguments);
                                if (returned && jQuery$$0.isFunction(returned.promise))returned.promise().then(newDefer.resolve,
                                    newDefer.reject, newDefer.notify); else newDefer[action + "With"](this === deferred ? newDefer : this, [returned])
                            }); else deferred[handler](newDefer[action])
                        })
                    }).promise()
                },
                promise: function (obj) {
                    if (obj == null)obj = promise; else for (var key in promise)obj[key] = promise[key];
                    return obj
                }
            };
            var deferred = promise.promise({});
            for (var key$$0 in lists) {
                deferred[key$$0] = lists[key$$0].fire;
                deferred[key$$0 + "With"] = lists[key$$0].fireWith
            }
            deferred.done(function () {
                state = "resolved"
            }, failList.disable, progressList.lock).fail(function () {
                state =
                    "rejected"
            }, doneList.disable, progressList.lock);
            if (func)func.call(deferred, deferred);
            return deferred
        }, when: function (firstParam) {
            function resolveFunc(i) {
                return function (value) {
                    args[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;
                    if (!--count)deferred.resolveWith(deferred, args)
                }
            }

            function progressFunc(i) {
                return function (value) {
                    pValues[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;
                    deferred.notifyWith(promise, pValues)
                }
            }

            var args = sliceDeferred.call(arguments, 0);
            var i$$0 = 0;
            var length =
                args.length;
            var pValues = new Array(length);
            var count = length;
            var pCount = length;
            var deferred = length <= 1 && firstParam && jQuery$$0.isFunction(firstParam.promise) ? firstParam : jQuery$$0.Deferred();
            var promise = deferred.promise();
            if (length > 1) {
                for (; i$$0 < length; i$$0++)if (args[i$$0] && args[i$$0].promise && jQuery$$0.isFunction(args[i$$0].promise))args[i$$0].promise().then(resolveFunc(i$$0), deferred.reject, progressFunc(i$$0)); else--count;
                if (!count)deferred.resolveWith(deferred, args)
            } else if (deferred !== firstParam)deferred.resolveWith(deferred,
                length ? [firstParam] : []);
            return promise
        }
    });
    jQuery$$0.support = function () {
        var support;
        var all;
        var a;
        var select;
        var opt;
        var input;
        var fragment;
        var tds;
        var events;
        var eventName;
        var i;
        var isSupported;
        var div = document$$0.createElement("div");
        var documentElement = document$$0.documentElement;
        div.setAttribute("className", "t");
        div.innerHTML = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
        all = div.getElementsByTagName("*");
        a = div.getElementsByTagName("a")[0];
        if (!all || !all.length || !a)return {};
        select = document$$0.createElement("select");
        opt = select.appendChild(document$$0.createElement("option"));
        input = div.getElementsByTagName("input")[0];
        support = {
            leadingWhitespace: div.firstChild.nodeType === 3,
            tbody: !div.getElementsByTagName("tbody").length,
            htmlSerialize: !!div.getElementsByTagName("link").length,
            style: /top/.test(a.getAttribute("style")),
            hrefNormalized: a.getAttribute("href") === "/a",
            opacity: /^0.55/.test(a.style.opacity),
            cssFloat: !!a.style.cssFloat,
            checkOn: input.value === "on",
            optSelected: opt.selected,
            getSetAttribute: div.className !== "t",
            enctype: !!document$$0.createElement("form").enctype,
            html5Clone: document$$0.createElement("nav").cloneNode(true).outerHTML !== "\x3c:nav\x3e\x3c/:nav\x3e",
            submitBubbles: true,
            changeBubbles: true,
            focusinBubbles: false,
            deleteExpando: true,
            noCloneEvent: true,
            inlineBlockNeedsLayout: false,
            shrinkWrapBlocks: false,
            reliableMarginRight: true,
            pixelMargin: true
        };
        jQuery$$0.boxModel = support.boxModel = document$$0.compatMode === "CSS1Compat";
        input.checked = true;
        support.noCloneChecked = input.cloneNode(true).checked;
        select.disabled = true;
        support.optDisabled = !opt.disabled;
        try {
            delete div.test
        } catch (e) {
            support.deleteExpando = false
        }
        if (!div.addEventListener && div.attachEvent && div.fireEvent) {
            div.attachEvent("onclick", function () {
                support.noCloneEvent = false
            });
            div.cloneNode(true).fireEvent("onclick")
        }
        input = document$$0.createElement("input");
        input.value = "t";
        input.setAttribute("type", "radio");
        support.radioValue = input.value === "t";
        input.setAttribute("checked",
            "checked");
        input.setAttribute("name", "t");
        div.appendChild(input);
        fragment = document$$0.createDocumentFragment();
        fragment.appendChild(div.lastChild);
        support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;
        support.appendChecked = input.checked;
        fragment.removeChild(input);
        fragment.appendChild(div);
        if (div.attachEvent)for (i in{submit: 1, change: 1, focusin: 1}) {
            eventName = "on" + i;
            isSupported = eventName in div;
            if (!isSupported) {
                div.setAttribute(eventName, "return;");
                isSupported = typeof div[eventName] ===
                "function"
            }
            support[i + "Bubbles"] = isSupported
        }
        fragment.removeChild(div);
        fragment = select = opt = div = input = null;
        jQuery$$0(function () {
            var container;
            var outer;
            var inner;
            var table;
            var td;
            var offsetSupport;
            var marginDiv;
            var conMarginTop;
            var style;
            var html;
            var positionTopLeftWidthHeight;
            var paddingMarginBorderVisibility;
            var paddingMarginBorder;
            var body = document$$0.getElementsByTagName("body")[0];
            if (!body)return;
            conMarginTop = 1;
            paddingMarginBorder = "padding:0;margin:0;border:";
            positionTopLeftWidthHeight = "position:absolute;top:0;left:0;width:1px;height:1px;";
            paddingMarginBorderVisibility = paddingMarginBorder + "0;visibility:hidden;";
            style = "style\x3d'" + positionTopLeftWidthHeight + paddingMarginBorder + "5px solid #000;";
            html = "\x3cdiv " + style + "display:block;'\x3e\x3cdiv style\x3d'" + paddingMarginBorder + "0;display:block;overflow:hidden;'\x3e\x3c/div\x3e\x3c/div\x3e" + "\x3ctable " + style + "' cellpadding\x3d'0' cellspacing\x3d'0'\x3e" + "\x3ctr\x3e\x3ctd\x3e\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e";
            container = document$$0.createElement("div");
            container.style.cssText = paddingMarginBorderVisibility +
            "width:0;height:0;position:static;top:0;margin-top:" + conMarginTop + "px";
            body.insertBefore(container, body.firstChild);
            div = document$$0.createElement("div");
            container.appendChild(div);
            div.innerHTML = "\x3ctable\x3e\x3ctr\x3e\x3ctd style\x3d'" + paddingMarginBorder + "0;display:none'\x3e\x3c/td\x3e\x3ctd\x3et\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e";
            tds = div.getElementsByTagName("td");
            isSupported = tds[0].offsetHeight === 0;
            tds[0].style.display = "";
            tds[1].style.display = "none";
            support.reliableHiddenOffsets = isSupported &&
            tds[0].offsetHeight === 0;
            if (window.getComputedStyle) {
                div.innerHTML = "";
                marginDiv = document$$0.createElement("div");
                marginDiv.style.width = "0";
                marginDiv.style.marginRight = "0";
                div.style.width = "2px";
                div.appendChild(marginDiv);
                support.reliableMarginRight = (parseInt((window.getComputedStyle(marginDiv, null) || {marginRight: 0}).marginRight, 10) || 0) === 0
            }
            if (typeof div.style.zoom !== "undefined") {
                div.innerHTML = "";
                div.style.width = div.style.padding = "1px";
                div.style.border = 0;
                div.style.overflow = "hidden";
                div.style.display =
                    "inline";
                div.style.zoom = 1;
                support.inlineBlockNeedsLayout = div.offsetWidth === 3;
                div.style.display = "block";
                div.style.overflow = "visible";
                div.innerHTML = "\x3cdiv style\x3d'width:5px;'\x3e\x3c/div\x3e";
                support.shrinkWrapBlocks = div.offsetWidth !== 3
            }
            div.style.cssText = positionTopLeftWidthHeight + paddingMarginBorderVisibility;
            div.innerHTML = html;
            outer = div.firstChild;
            inner = outer.firstChild;
            td = outer.nextSibling.firstChild.firstChild;
            offsetSupport = {
                doesNotAddBorder: inner.offsetTop !== 5, doesAddBorderForTableAndCells: td.offsetTop ===
                5
            };
            inner.style.position = "fixed";
            inner.style.top = "20px";
            offsetSupport.fixedPosition = inner.offsetTop === 20 || inner.offsetTop === 15;
            inner.style.position = inner.style.top = "";
            outer.style.overflow = "hidden";
            outer.style.position = "relative";
            offsetSupport.subtractsBorderForOverflowNotVisible = inner.offsetTop === -5;
            offsetSupport.doesNotIncludeMarginInBodyOffset = body.offsetTop !== conMarginTop;
            if (window.getComputedStyle) {
                div.style.marginTop = "1%";
                support.pixelMargin = (window.getComputedStyle(div, null) || {marginTop: 0}).marginTop !==
                "1%"
            }
            if (typeof container.style.zoom !== "undefined")container.style.zoom = 1;
            body.removeChild(container);
            marginDiv = div = container = null;
            jQuery$$0.extend(support, offsetSupport)
        });
        return support
    }();
    var rbrace = /^(?:\{.*\}|\[.*\])$/;
    var rmultiDash = /([A-Z])/g;
    jQuery$$0.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (jQuery$$0.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {"embed": true, "object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", "applet": true},
        hasData: function (elem) {
            elem = elem.nodeType ? jQuery$$0.cache[elem[jQuery$$0.expando]] :
                elem[jQuery$$0.expando];
            return !!elem && !isEmptyDataObject(elem)
        },
        data: function (elem, name, data, pvt) {
            if (!jQuery$$0.acceptData(elem))return;
            var privateCache;
            var thisCache;
            var ret;
            var internalKey = jQuery$$0.expando;
            var getByName = typeof name === "string";
            var isNode = elem.nodeType;
            var cache = isNode ? jQuery$$0.cache : elem;
            var id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
            var isEvents = name === "events";
            if ((!id || !cache[id] || !isEvents && !pvt && !cache[id].data) && getByName && data === undefined)return;
            if (!id)if (isNode)elem[internalKey] =
                id = ++jQuery$$0.uuid; else id = internalKey;
            if (!cache[id]) {
                cache[id] = {};
                if (!isNode)cache[id].toJSON = jQuery$$0.noop
            }
            if (typeof name === "object" || typeof name === "function")if (pvt)cache[id] = jQuery$$0.extend(cache[id], name); else cache[id].data = jQuery$$0.extend(cache[id].data, name);
            privateCache = thisCache = cache[id];
            if (!pvt) {
                if (!thisCache.data)thisCache.data = {};
                thisCache = thisCache.data
            }
            if (data !== undefined)thisCache[jQuery$$0.camelCase(name)] = data;
            if (isEvents && !thisCache[name])return privateCache.events;
            if (getByName) {
                ret =
                    thisCache[name];
                if (ret == null)ret = thisCache[jQuery$$0.camelCase(name)]
            } else ret = thisCache;
            return ret
        },
        removeData: function (elem, name, pvt) {
            if (!jQuery$$0.acceptData(elem))return;
            var thisCache;
            var i;
            var l;
            var internalKey = jQuery$$0.expando;
            var isNode = elem.nodeType;
            var cache = isNode ? jQuery$$0.cache : elem;
            var id = isNode ? elem[internalKey] : internalKey;
            if (!cache[id])return;
            if (name) {
                thisCache = pvt ? cache[id] : cache[id].data;
                if (thisCache) {
                    if (!jQuery$$0.isArray(name))if (name in thisCache)name = [name]; else {
                        name = jQuery$$0.camelCase(name);
                        if (name in thisCache)name = [name]; else name = name.split(" ")
                    }
                    for (i = 0, l = name.length; i < l; i++)delete thisCache[name[i]];
                    if (!(pvt ? isEmptyDataObject : jQuery$$0.isEmptyObject)(thisCache))return
                }
            }
            if (!pvt) {
                delete cache[id].data;
                if (!isEmptyDataObject(cache[id]))return
            }
            if (jQuery$$0.support.deleteExpando || !cache.setInterval)delete cache[id]; else cache[id] = null;
            if (isNode)if (jQuery$$0.support.deleteExpando)delete elem[internalKey]; else if (elem.removeAttribute)elem.removeAttribute(internalKey); else elem[internalKey] =
                null
        },
        _data: function (elem, name, data) {
            return jQuery$$0.data(elem, name, data, true)
        },
        acceptData: function (elem) {
            if (elem.nodeName) {
                var match = jQuery$$0.noData[elem.nodeName.toLowerCase()];
                if (match)return !(match === true || elem.getAttribute("classid") !== match)
            }
            return true
        }
    });
    jQuery$$0.fn.extend({
        data: function (key, value$$0) {
            var parts;
            var part;
            var attr;
            var name;
            var l;
            var elem = this[0];
            var i = 0;
            var data = null;
            if (key === undefined) {
                if (this.length) {
                    data = jQuery$$0.data(elem);
                    if (elem.nodeType === 1 && !jQuery$$0._data(elem,
                            "parsedAttrs")) {
                        attr = elem.attributes;
                        for (l = attr.length; i < l; i++) {
                            name = attr[i].name;
                            if (name.indexOf("data-") === 0) {
                                name = jQuery$$0.camelCase(name.substring(5));
                                dataAttr(elem, name, data[name])
                            }
                        }
                        jQuery$$0._data(elem, "parsedAttrs", true)
                    }
                }
                return data
            }
            if (typeof key === "object")return this.each(function () {
                jQuery$$0.data(this, key)
            });
            parts = key.split(".", 2);
            parts[1] = parts[1] ? "." + parts[1] : "";
            part = parts[1] + "!";
            return jQuery$$0.access(this, function (value) {
                if (value === undefined) {
                    data = this.triggerHandler("getData" + part,
                        [parts[0]]);
                    if (data === undefined && elem) {
                        data = jQuery$$0.data(elem, key);
                        data = dataAttr(elem, key, data)
                    }
                    return data === undefined && parts[1] ? this.data(parts[0]) : data
                }
                parts[1] = value;
                this.each(function () {
                    var self = jQuery$$0(this);
                    self.triggerHandler("setData" + part, parts);
                    jQuery$$0.data(this, key, value);
                    self.triggerHandler("changeData" + part, parts)
                })
            }, null, value$$0, arguments.length > 1, null, false)
        }, removeData: function (key) {
            return this.each(function () {
                jQuery$$0.removeData(this, key)
            })
        }
    });
    jQuery$$0.extend({
        _mark: function (elem,
                         type) {
            if (elem) {
                type = (type || "fx") + "mark";
                jQuery$$0._data(elem, type, (jQuery$$0._data(elem, type) || 0) + 1)
            }
        }, _unmark: function (force, elem, type) {
            if (force !== true) {
                type = elem;
                elem = force;
                force = false
            }
            if (elem) {
                type = type || "fx";
                var key = type + "mark";
                var count = force ? 0 : (jQuery$$0._data(elem, key) || 1) - 1;
                if (count)jQuery$$0._data(elem, key, count); else {
                    jQuery$$0.removeData(elem, key, true);
                    handleQueueMarkDefer(elem, type, "mark")
                }
            }
        }, queue: function (elem, type, data) {
            var q;
            if (elem) {
                type = (type || "fx") + "queue";
                q = jQuery$$0._data(elem,
                    type);
                if (data)if (!q || jQuery$$0.isArray(data))q = jQuery$$0._data(elem, type, jQuery$$0.makeArray(data)); else q.push(data);
                return q || []
            }
        }, dequeue: function (elem, type) {
            type = type || "fx";
            var queue = jQuery$$0.queue(elem, type);
            var fn = queue.shift();
            var hooks = {};
            if (fn === "inprogress")fn = queue.shift();
            if (fn) {
                if (type === "fx")queue.unshift("inprogress");
                jQuery$$0._data(elem, type + ".run", hooks);
                fn.call(elem, function () {
                    jQuery$$0.dequeue(elem, type)
                }, hooks)
            }
            if (!queue.length) {
                jQuery$$0.removeData(elem, type + "queue " + type + ".run",
                    true);
                handleQueueMarkDefer(elem, type, "queue")
            }
        }
    });
    jQuery$$0.fn.extend({
        queue: function (type, data) {
            var setter = 2;
            if (typeof type !== "string") {
                data = type;
                type = "fx";
                setter--
            }
            if (arguments.length < setter)return jQuery$$0.queue(this[0], type);
            return data === undefined ? this : this.each(function () {
                var queue = jQuery$$0.queue(this, type, data);
                if (type === "fx" && queue[0] !== "inprogress")jQuery$$0.dequeue(this, type)
            })
        }, dequeue: function (type) {
            return this.each(function () {
                jQuery$$0.dequeue(this, type)
            })
        }, delay: function (time, type) {
            time =
                jQuery$$0.fx ? jQuery$$0.fx.speeds[time] || time : time;
            type = type || "fx";
            return this.queue(type, function (next, hooks) {
                var timeout = setTimeout(next, time);
                hooks.stop = function () {
                    clearTimeout(timeout)
                }
            })
        }, clearQueue: function (type) {
            return this.queue(type || "fx", [])
        }, promise: function (type, object) {
            function resolve() {
                if (!--count)defer.resolveWith(elements, [elements])
            }

            if (typeof type !== "string") {
                object = type;
                type = undefined
            }
            type = type || "fx";
            var defer = jQuery$$0.Deferred();
            var elements = this;
            var i = elements.length;
            var count =
                1;
            var deferDataKey = type + "defer";
            var queueDataKey = type + "queue";
            var markDataKey = type + "mark";
            for (var tmp; i--;)if (tmp = jQuery$$0.data(elements[i], deferDataKey, undefined, true) || (jQuery$$0.data(elements[i], queueDataKey, undefined, true) || jQuery$$0.data(elements[i], markDataKey, undefined, true)) && jQuery$$0.data(elements[i], deferDataKey, jQuery$$0.Callbacks("once memory"), true)) {
                count++;
                tmp.add(resolve)
            }
            resolve();
            return defer.promise(object)
        }
    });
    var rclass = /[\n\t\r]/g;
    var rspace = /\s+/;
    var rreturn = /\r/g;
    var rtype =
        /^(?:button|input)$/i;
    var rfocusable = /^(?:button|input|object|select|textarea)$/i;
    var rclickable = /^a(?:rea)?$/i;
    var rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
    var getSetAttribute = jQuery$$0.support.getSetAttribute;
    var nodeHook;
    var boolHook;
    var fixSpecified;
    jQuery$$0.fn.extend({
        attr: function (name, value) {
            return jQuery$$0.access(this, jQuery$$0.attr, name, value, arguments.length > 1)
        }, removeAttr: function (name) {
            return this.each(function () {
                jQuery$$0.removeAttr(this,
                    name)
            })
        }, prop: function (name, value) {
            return jQuery$$0.access(this, jQuery$$0.prop, name, value, arguments.length > 1)
        }, removeProp: function (name) {
            name = jQuery$$0.propFix[name] || name;
            return this.each(function () {
                try {
                    this[name] = undefined;
                    delete this[name]
                } catch (e) {
                }
            })
        }, addClass: function (value) {
            var classNames;
            var i;
            var l;
            var elem;
            var setClass;
            var c;
            var cl;
            if (jQuery$$0.isFunction(value))return this.each(function (j) {
                jQuery$$0(this).addClass(value.call(this, j, this.className))
            });
            if (value && typeof value === "string") {
                classNames =
                    value.split(rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1)if (!elem.className && classNames.length === 1)elem.className = value; else {
                        setClass = " " + elem.className + " ";
                        for (c = 0, cl = classNames.length; c < cl; c++)if (!~setClass.indexOf(" " + classNames[c] + " "))setClass += classNames[c] + " ";
                        elem.className = jQuery$$0.trim(setClass)
                    }
                }
            }
            return this
        }, removeClass: function (value) {
            var classNames;
            var i;
            var l;
            var elem;
            var className;
            var c;
            var cl;
            if (jQuery$$0.isFunction(value))return this.each(function (j) {
                jQuery$$0(this).removeClass(value.call(this,
                    j, this.className))
            });
            if (value && typeof value === "string" || value === undefined) {
                classNames = (value || "").split(rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1 && elem.className)if (value) {
                        className = (" " + elem.className + " ").replace(rclass, " ");
                        for (c = 0, cl = classNames.length; c < cl; c++)className = className.replace(" " + classNames[c] + " ", " ");
                        elem.className = jQuery$$0.trim(className)
                    } else elem.className = ""
                }
            }
            return this
        }, toggleClass: function (value, stateVal) {
            var type = typeof value;
            var isBool = typeof stateVal ===
                "boolean";
            if (jQuery$$0.isFunction(value))return this.each(function (i) {
                jQuery$$0(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal)
            });
            return this.each(function () {
                if (type === "string") {
                    var className;
                    var i = 0;
                    var self = jQuery$$0(this);
                    var state = stateVal;
                    for (var classNames = value.split(rspace); className = classNames[i++];) {
                        state = isBool ? state : !self.hasClass(className);
                        self[state ? "addClass" : "removeClass"](className)
                    }
                } else if (type === "undefined" || type === "boolean") {
                    if (this.className)jQuery$$0._data(this,
                        "__className__", this.className);
                    this.className = this.className || value === false ? "" : jQuery$$0._data(this, "__className__") || ""
                }
            })
        }, hasClass: function (selector) {
            var className = " " + selector + " ";
            var i = 0;
            for (var l = this.length; i < l; i++)if (this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) > -1)return true;
            return false
        }, val: function (value$$0) {
            var hooks;
            var ret;
            var isFunction;
            var elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery$$0.valHooks[elem.type] || jQuery$$0.valHooks[elem.nodeName.toLowerCase()];
                    if (hooks && "get"in hooks && (ret = hooks.get(elem, "value")) !== undefined)return ret;
                    ret = elem.value;
                    return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret
                }
                return
            }
            isFunction = jQuery$$0.isFunction(value$$0);
            return this.each(function (i) {
                var self = jQuery$$0(this);
                var val;
                if (this.nodeType !== 1)return;
                if (isFunction)val = value$$0.call(this, i, self.val()); else val = value$$0;
                if (val == null)val = ""; else if (typeof val === "number")val += ""; else if (jQuery$$0.isArray(val))val = jQuery$$0.map(val, function (value) {
                    return value ==
                    null ? "" : value + ""
                });
                hooks = jQuery$$0.valHooks[this.type] || jQuery$$0.valHooks[this.nodeName.toLowerCase()];
                if (!hooks || !("set"in hooks) || hooks.set(this, val, "value") === undefined)this.value = val
            })
        }
    });
    jQuery$$0.extend({
        valHooks: {
            option: {
                get: function (elem) {
                    var val = elem.attributes.value;
                    return !val || val.specified ? elem.value : elem.text
                }
            }, select: {
                get: function (elem) {
                    var value;
                    var i;
                    var max;
                    var option;
                    var index = elem.selectedIndex;
                    var values = [];
                    var options = elem.options;
                    var one = elem.type === "select-one";
                    if (index < 0)return null;
                    i = one ? index : 0;
                    for (max = one ? index + 1 : options.length; i < max; i++) {
                        option = options[i];
                        if (option.selected && (jQuery$$0.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery$$0.nodeName(option.parentNode, "optgroup"))) {
                            value = jQuery$$0(option).val();
                            if (one)return value;
                            values.push(value)
                        }
                    }
                    if (one && !values.length && options.length)return jQuery$$0(options[index]).val();
                    return values
                }, set: function (elem, value) {
                    var values = jQuery$$0.makeArray(value);
                    jQuery$$0(elem).find("option").each(function () {
                        this.selected =
                            jQuery$$0.inArray(jQuery$$0(this).val(), values) >= 0
                    });
                    if (!values.length)elem.selectedIndex = -1;
                    return values
                }
            }
        },
        attrFn: {val: true, css: true, html: true, text: true, data: true, width: true, height: true, offset: true},
        attr: function (elem, name, value, pass) {
            var ret;
            var hooks;
            var notxml;
            var nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2)return;
            if (pass && name in jQuery$$0.attrFn)return jQuery$$0(elem)[name](value);
            if (typeof elem.getAttribute === "undefined")return jQuery$$0.prop(elem, name, value);
            notxml = nType !==
            1 || !jQuery$$0.isXMLDoc(elem);
            if (notxml) {
                name = name.toLowerCase();
                hooks = jQuery$$0.attrHooks[name] || (rboolean.test(name) ? boolHook : nodeHook)
            }
            if (value !== undefined)if (value === null) {
                jQuery$$0.removeAttr(elem, name);
                return
            } else if (hooks && "set"in hooks && notxml && (ret = hooks.set(elem, value, name)) !== undefined)return ret; else {
                elem.setAttribute(name, "" + value);
                return value
            } else if (hooks && "get"in hooks && notxml && (ret = hooks.get(elem, name)) !== null)return ret; else {
                ret = elem.getAttribute(name);
                return ret === null ? undefined :
                    ret
            }
        },
        removeAttr: function (elem, value) {
            var propName;
            var attrNames;
            var name;
            var l;
            var isBool;
            var i = 0;
            if (value && elem.nodeType === 1) {
                attrNames = value.toLowerCase().split(rspace);
                for (l = attrNames.length; i < l; i++) {
                    name = attrNames[i];
                    if (name) {
                        propName = jQuery$$0.propFix[name] || name;
                        isBool = rboolean.test(name);
                        if (!isBool)jQuery$$0.attr(elem, name, "");
                        elem.removeAttribute(getSetAttribute ? name : propName);
                        if (isBool && propName in elem)elem[propName] = false
                    }
                }
            }
        },
        attrHooks: {
            type: {
                set: function (elem, value) {
                    if (rtype.test(elem.nodeName) &&
                        elem.parentNode)jQuery$$0.error("type property can't be changed"); else if (!jQuery$$0.support.radioValue && value === "radio" && jQuery$$0.nodeName(elem, "input")) {
                        var val = elem.value;
                        elem.setAttribute("type", value);
                        if (val)elem.value = val;
                        return value
                    }
                }
            }, value: {
                get: function (elem, name) {
                    if (nodeHook && jQuery$$0.nodeName(elem, "button"))return nodeHook.get(elem, name);
                    return name in elem ? elem.value : null
                }, set: function (elem, value, name) {
                    if (nodeHook && jQuery$$0.nodeName(elem, "button"))return nodeHook.set(elem, value, name);
                    elem.value = value
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function (elem, name, value) {
            var ret;
            var hooks;
            var notxml;
            var nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2)return;
            notxml = nType !== 1 || !jQuery$$0.isXMLDoc(elem);
            if (notxml) {
                name = jQuery$$0.propFix[name] ||
                name;
                hooks = jQuery$$0.propHooks[name]
            }
            if (value !== undefined)if (hooks && "set"in hooks && (ret = hooks.set(elem, value, name)) !== undefined)return ret; else return elem[name] = value; else if (hooks && "get"in hooks && (ret = hooks.get(elem, name)) !== null)return ret; else return elem[name]
        },
        propHooks: {
            tabIndex: {
                get: function (elem) {
                    var attributeNode = elem.getAttributeNode("tabindex");
                    return attributeNode && attributeNode.specified ? parseInt(attributeNode.value, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) &&
                    elem.href ? 0 : undefined
                }
            }
        }
    });
    jQuery$$0.attrHooks.tabindex = jQuery$$0.propHooks.tabIndex;
    boolHook = {
        get: function (elem, name) {
            var attrNode;
            var property = jQuery$$0.prop(elem, name);
            return property === true || typeof property !== "boolean" && (attrNode = elem.getAttributeNode(name)) && attrNode.nodeValue !== false ? name.toLowerCase() : undefined
        }, set: function (elem, value, name) {
            var propName;
            if (value === false)jQuery$$0.removeAttr(elem, name); else {
                propName = jQuery$$0.propFix[name] || name;
                if (propName in elem)elem[propName] = true;
                elem.setAttribute(name,
                    name.toLowerCase())
            }
            return name
        }
    };
    if (!getSetAttribute) {
        fixSpecified = {name: true, id: true, coords: true};
        nodeHook = jQuery$$0.valHooks.button = {
            get: function (elem, name) {
                var ret;
                ret = elem.getAttributeNode(name);
                return ret && (fixSpecified[name] ? ret.nodeValue !== "" : ret.specified) ? ret.nodeValue : undefined
            }, set: function (elem, value, name) {
                var ret = elem.getAttributeNode(name);
                if (!ret) {
                    ret = document$$0.createAttribute(name);
                    elem.setAttributeNode(ret)
                }
                return ret.nodeValue = value + ""
            }
        };
        jQuery$$0.attrHooks.tabindex.set = nodeHook.set;
        jQuery$$0.each(["width", "height"], function (i, name) {
            jQuery$$0.attrHooks[name] = jQuery$$0.extend(jQuery$$0.attrHooks[name], {
                set: function (elem, value) {
                    if (value === "") {
                        elem.setAttribute(name, "auto");
                        return value
                    }
                }
            })
        });
        jQuery$$0.attrHooks.contenteditable = {
            get: nodeHook.get, set: function (elem, value, name) {
                if (value === "")value = "false";
                nodeHook.set(elem, value, name)
            }
        }
    }
    if (!jQuery$$0.support.hrefNormalized)jQuery$$0.each(["href", "src", "width", "height"], function (i, name) {
        jQuery$$0.attrHooks[name] = jQuery$$0.extend(jQuery$$0.attrHooks[name],
            {
                get: function (elem) {
                    var ret = elem.getAttribute(name, 2);
                    return ret === null ? undefined : ret
                }
            })
    });
    if (!jQuery$$0.support.style)jQuery$$0.attrHooks.style = {
        get: function (elem) {
            return elem.style.cssText.toLowerCase() || undefined
        }, set: function (elem, value) {
            return elem.style.cssText = "" + value
        }
    };
    if (!jQuery$$0.support.optSelected)jQuery$$0.propHooks.selected = jQuery$$0.extend(jQuery$$0.propHooks.selected, {
        get: function (elem) {
            var parent = elem.parentNode;
            if (parent) {
                parent.selectedIndex;
                if (parent.parentNode)parent.parentNode.selectedIndex
            }
            return null
        }
    });
    if (!jQuery$$0.support.enctype)jQuery$$0.propFix.enctype = "encoding";
    if (!jQuery$$0.support.checkOn)jQuery$$0.each(["radio", "checkbox"], function () {
        jQuery$$0.valHooks[this] = {
            get: function (elem) {
                return elem.getAttribute("value") === null ? "on" : elem.value
            }
        }
    });
    jQuery$$0.each(["radio", "checkbox"], function () {
        jQuery$$0.valHooks[this] = jQuery$$0.extend(jQuery$$0.valHooks[this], {
            set: function (elem, value) {
                if (jQuery$$0.isArray(value))return elem.checked = jQuery$$0.inArray(jQuery$$0(elem).val(), value) >= 0
            }
        })
    });
    var rformElems =
        /^(?:textarea|input|select)$/i;
    var rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/;
    var rhoverHack = /(?:^|\s)hover(\.\S+)?\b/;
    var rkeyEvent = /^key/;
    var rmouseEvent = /^(?:mouse|contextmenu)|click/;
    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
    var rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/;
    var quickParse = function (selector) {
        var quick = rquickIs.exec(selector);
        if (quick) {
            quick[1] = (quick[1] || "").toLowerCase();
            quick[3] = quick[3] && new RegExp("(?:^|\\s)" + quick[3] + "(?:\\s|$)")
        }
        return quick
    };
    var quickIs = function (elem,
                            m) {
        var attrs = elem.attributes || {};
        return (!m[1] || elem.nodeName.toLowerCase() === m[1]) && (!m[2] || (attrs.id || {}).value === m[2]) && (!m[3] || m[3].test((attrs["class"] || {}).value))
    };
    var hoverHack = function (events) {
        return jQuery$$0.event.special.hover ? events : events.replace(rhoverHack, "mouseenter$1 mouseleave$1")
    };
    jQuery$$0.event = {
        add: function (elem, types, handler, data, selector) {
            var elemData;
            var eventHandle;
            var events;
            var t;
            var tns;
            var type;
            var namespaces;
            var handleObj;
            var handleObjIn;
            var quick;
            var handlers;
            var special;
            if (elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery$$0._data(elem)))return;
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler;
                selector = handleObjIn.selector
            }
            if (!handler.guid)handler.guid = jQuery$$0.guid++;
            events = elemData.events;
            if (!events)elemData.events = events = {};
            eventHandle = elemData.handle;
            if (!eventHandle) {
                elemData.handle = eventHandle = function (e) {
                    return typeof jQuery$$0 !== "undefined" && (!e || jQuery$$0.event.triggered !== e.type) ? jQuery$$0.event.dispatch.apply(eventHandle.elem,
                        arguments) : undefined
                };
                eventHandle.elem = elem
            }
            types = jQuery$$0.trim(hoverHack(types)).split(" ");
            for (t = 0; t < types.length; t++) {
                tns = rtypenamespace.exec(types[t]) || [];
                type = tns[1];
                namespaces = (tns[2] || "").split(".").sort();
                special = jQuery$$0.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                special = jQuery$$0.event.special[type] || {};
                handleObj = jQuery$$0.extend({
                    type: type,
                    origType: tns[1],
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    quick: selector && quickParse(selector),
                    namespace: namespaces.join(".")
                }, handleObjIn);
                handlers = events[type];
                if (!handlers) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false)if (elem.addEventListener)elem.addEventListener(type, eventHandle, false); else if (elem.attachEvent)elem.attachEvent("on" + type, eventHandle)
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid)handleObj.handler.guid = handler.guid
                }
                if (selector)handlers.splice(handlers.delegateCount++,
                    0, handleObj); else handlers.push(handleObj);
                jQuery$$0.event.global[type] = true
            }
            elem = null
        },
        global: {},
        remove: function (elem, types, handler, selector, mappedTypes) {
            var elemData = jQuery$$0.hasData(elem) && jQuery$$0._data(elem);
            var t;
            var tns;
            var type;
            var origType;
            var namespaces;
            var origCount;
            var j;
            var events;
            var special;
            var handle;
            var eventType;
            var handleObj;
            if (!elemData || !(events = elemData.events))return;
            types = jQuery$$0.trim(hoverHack(types || "")).split(" ");
            for (t = 0; t < types.length; t++) {
                tns = rtypenamespace.exec(types[t]) ||
                [];
                type = origType = tns[1];
                namespaces = tns[2];
                if (!type) {
                    for (type in events)jQuery$$0.event.remove(elem, type + types[t], handler, selector, true);
                    continue
                }
                special = jQuery$$0.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                eventType = events[type] || [];
                origCount = eventType.length;
                namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                for (j = 0; j < eventType.length; j++) {
                    handleObj = eventType[j];
                    if ((mappedTypes || origType === handleObj.origType) &&
                        (!handler || handler.guid === handleObj.guid) && (!namespaces || namespaces.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
                        eventType.splice(j--, 1);
                        if (handleObj.selector)eventType.delegateCount--;
                        if (special.remove)special.remove.call(elem, handleObj)
                    }
                }
                if (eventType.length === 0 && origCount !== eventType.length) {
                    if (!special.teardown || special.teardown.call(elem, namespaces) === false)jQuery$$0.removeEvent(elem, type, elemData.handle);
                    delete events[type]
                }
            }
            if (jQuery$$0.isEmptyObject(events)) {
                handle =
                    elemData.handle;
                if (handle)handle.elem = null;
                jQuery$$0.removeData(elem, ["events", "handle"], true)
            }
        },
        customEvent: {"getData": true, "setData": true, "changeData": true},
        trigger: function (event, data, elem, onlyHandlers) {
            if (elem && (elem.nodeType === 3 || elem.nodeType === 8))return;
            var type = event.type || event;
            var namespaces = [];
            var cache;
            var exclusive;
            var i;
            var cur;
            var old;
            var ontype;
            var special;
            var handle;
            var eventPath;
            var bubbleType;
            if (rfocusMorph.test(type + jQuery$$0.event.triggered))return;
            if (type.indexOf("!") >= 0) {
                type =
                    type.slice(0, -1);
                exclusive = true
            }
            if (type.indexOf(".") >= 0) {
                namespaces = type.split(".");
                type = namespaces.shift();
                namespaces.sort()
            }
            if ((!elem || jQuery$$0.event.customEvent[type]) && !jQuery$$0.event.global[type])return;
            event = typeof event === "object" ? event[jQuery$$0.expando] ? event : new jQuery$$0.Event(type, event) : new jQuery$$0.Event(type);
            event.type = type;
            event.isTrigger = true;
            event.exclusive = exclusive;
            event.namespace = namespaces.join(".");
            event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") +
            "(\\.|$)") : null;
            ontype = type.indexOf(":") < 0 ? "on" + type : "";
            if (!elem) {
                cache = jQuery$$0.cache;
                for (i in cache)if (cache[i].events && cache[i].events[type])jQuery$$0.event.trigger(event, data, cache[i].handle.elem, true);
                return
            }
            event.result = undefined;
            if (!event.target)event.target = elem;
            data = data != null ? jQuery$$0.makeArray(data) : [];
            data.unshift(event);
            special = jQuery$$0.event.special[type] || {};
            if (special.trigger && special.trigger.apply(elem, data) === false)return;
            eventPath = [[elem, special.bindType || type]];
            if (!onlyHandlers && !special.noBubble && !jQuery$$0.isWindow(elem)) {
                bubbleType = special.delegateType || type;
                cur = rfocusMorph.test(bubbleType + type) ? elem : elem.parentNode;
                for (old = null; cur; cur = cur.parentNode) {
                    eventPath.push([cur, bubbleType]);
                    old = cur
                }
                if (old && old === elem.ownerDocument)eventPath.push([old.defaultView || old.parentWindow || window, bubbleType])
            }
            for (i = 0; i < eventPath.length && !event.isPropagationStopped(); i++) {
                cur = eventPath[i][0];
                event.type = eventPath[i][1];
                handle = (jQuery$$0._data(cur, "events") || {})[event.type] && jQuery$$0._data(cur,
                    "handle");
                if (handle)handle.apply(cur, data);
                handle = ontype && cur[ontype];
                if (handle && jQuery$$0.acceptData(cur) && handle.apply(cur, data) === false)event.preventDefault()
            }
            event.type = type;
            if (!onlyHandlers && !event.isDefaultPrevented())if ((!special._default || special._default.apply(elem.ownerDocument, data) === false) && !(type === "click" && jQuery$$0.nodeName(elem, "a")) && jQuery$$0.acceptData(elem))if (ontype && elem[type] && (type !== "focus" && type !== "blur" || event.target.offsetWidth !== 0) && !jQuery$$0.isWindow(elem)) {
                old = elem[ontype];
                if (old)elem[ontype] = null;
                jQuery$$0.event.triggered = type;
                elem[type]();
                jQuery$$0.event.triggered = undefined;
                if (old)elem[ontype] = old
            }
            return event.result
        },
        dispatch: function (event) {
            event = jQuery$$0.event.fix(event || window.event);
            var handlers = (jQuery$$0._data(this, "events") || {})[event.type] || [];
            var delegateCount = handlers.delegateCount;
            var args = [].slice.call(arguments, 0);
            var run_all = !event.exclusive && !event.namespace;
            var special = jQuery$$0.event.special[event.type] || {};
            var handlerQueue = [];
            var i;
            var j;
            var cur;
            var jqcur;
            var ret;
            var selMatch;
            var matched;
            var matches;
            var handleObj;
            var sel;
            var related;
            args[0] = event;
            event.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event) === false)return;
            if (delegateCount && !(event.button && event.type === "click")) {
                jqcur = jQuery$$0(this);
                jqcur.context = this.ownerDocument || this;
                for (cur = event.target; cur != this; cur = cur.parentNode || this)if (cur.disabled !== true) {
                    selMatch = {};
                    matches = [];
                    jqcur[0] = cur;
                    for (i = 0; i < delegateCount; i++) {
                        handleObj = handlers[i];
                        sel = handleObj.selector;
                        if (selMatch[sel] === undefined)selMatch[sel] = handleObj.quick ? quickIs(cur, handleObj.quick) : jqcur.is(sel);
                        if (selMatch[sel])matches.push(handleObj)
                    }
                    if (matches.length)handlerQueue.push({elem: cur, matches: matches})
                }
            }
            if (handlers.length > delegateCount)handlerQueue.push({elem: this, matches: handlers.slice(delegateCount)});
            for (i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++) {
                matched = handlerQueue[i];
                event.currentTarget = matched.elem;
                for (j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++) {
                    handleObj =
                        matched.matches[j];
                    if (run_all || !event.namespace && !handleObj.namespace || event.namespace_re && event.namespace_re.test(handleObj.namespace)) {
                        event.data = handleObj.data;
                        event.handleObj = handleObj;
                        ret = ((jQuery$$0.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                        if (ret !== undefined) {
                            event.result = ret;
                            if (ret === false) {
                                event.preventDefault();
                                event.stopPropagation()
                            }
                        }
                    }
                }
            }
            if (special.postDispatch)special.postDispatch.call(this, event);
            return event.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "), filter: function (event, original) {
                if (event.which == null)event.which = original.charCode != null ? original.charCode : original.keyCode;
                return event
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (event, original) {
                var eventDoc;
                var doc;
                var body;
                var button = original.button;
                var fromElement = original.fromElement;
                if (event.pageX == null && original.clientX != null) {
                    eventDoc =
                        event.target.ownerDocument || document$$0;
                    doc = eventDoc.documentElement;
                    body = eventDoc.body;
                    event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)
                }
                if (!event.relatedTarget && fromElement)event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
                if (!event.which && button !== undefined)event.which = button &
                1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
                return event
            }
        },
        fix: function (event) {
            if (event[jQuery$$0.expando])return event;
            var i;
            var prop;
            var originalEvent = event;
            var fixHook = jQuery$$0.event.fixHooks[event.type] || {};
            var copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
            event = jQuery$$0.Event(originalEvent);
            for (i = copy.length; i;) {
                prop = copy[--i];
                event[prop] = originalEvent[prop]
            }
            if (!event.target)event.target = originalEvent.srcElement || document$$0;
            if (event.target.nodeType === 3)event.target = event.target.parentNode;
            if (event.metaKey === undefined)event.metaKey = event.ctrlKey;
            return fixHook.filter ? fixHook.filter(event, originalEvent) : event
        },
        special: {
            ready: {setup: jQuery$$0.bindReady},
            load: {noBubble: true},
            focus: {delegateType: "focusin"},
            blur: {delegateType: "focusout"},
            beforeunload: {
                setup: function (data, namespaces, eventHandle) {
                    if (jQuery$$0.isWindow(this))this.onbeforeunload = eventHandle
                }, teardown: function (namespaces, eventHandle) {
                    if (this.onbeforeunload === eventHandle)this.onbeforeunload = null
                }
            }
        },
        simulate: function (type, elem,
                            event, bubble) {
            var e = jQuery$$0.extend(new jQuery$$0.Event, event, {type: type, isSimulated: true, originalEvent: {}});
            if (bubble)jQuery$$0.event.trigger(e, null, elem); else jQuery$$0.event.dispatch.call(elem, e);
            if (e.isDefaultPrevented())event.preventDefault()
        }
    };
    jQuery$$0.event.handle = jQuery$$0.event.dispatch;
    jQuery$$0.removeEvent = document$$0.removeEventListener ? function (elem, type, handle) {
        if (elem.removeEventListener)elem.removeEventListener(type, handle, false)
    } : function (elem, type, handle) {
        if (elem.detachEvent)elem.detachEvent("on" +
        type, handle)
    };
    jQuery$$0.Event = function (src, props) {
        if (!(this instanceof jQuery$$0.Event))return new jQuery$$0.Event(src, props);
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = src.defaultPrevented || src.returnValue === false || src.getPreventDefault && src.getPreventDefault() ? returnTrue : returnFalse
        } else this.type = src;
        if (props)jQuery$$0.extend(this, props);
        this.timeStamp = src && src.timeStamp || jQuery$$0.now();
        this[jQuery$$0.expando] = true
    };
    jQuery$$0.Event.prototype = {
        preventDefault: function () {
            this.isDefaultPrevented =
                returnTrue;
            var e = this.originalEvent;
            if (!e)return;
            if (e.preventDefault)e.preventDefault(); else e.returnValue = false
        },
        stopPropagation: function () {
            this.isPropagationStopped = returnTrue;
            var e = this.originalEvent;
            if (!e)return;
            if (e.stopPropagation)e.stopPropagation();
            e.cancelBubble = true
        },
        stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = returnTrue;
            this.stopPropagation()
        },
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse
    };
    jQuery$$0.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function (orig, fix) {
        jQuery$$0.event.special[orig] = {
            delegateType: fix, bindType: fix, handle: function (event) {
                var target = this;
                var related = event.relatedTarget;
                var handleObj = event.handleObj;
                var selector = handleObj.selector;
                var ret;
                if (!related || related !== target && !jQuery$$0.contains(target, related)) {
                    event.type = handleObj.origType;
                    ret = handleObj.handler.apply(this, arguments);
                    event.type = fix
                }
                return ret
            }
        }
    });
    if (!jQuery$$0.support.submitBubbles)jQuery$$0.event.special.submit = {
        setup: function () {
            if (jQuery$$0.nodeName(this,
                    "form"))return false;
            jQuery$$0.event.add(this, "click._submit keypress._submit", function (e) {
                var elem = e.target;
                var form = jQuery$$0.nodeName(elem, "input") || jQuery$$0.nodeName(elem, "button") ? elem.form : undefined;
                if (form && !form._submit_attached) {
                    jQuery$$0.event.add(form, "submit._submit", function (event) {
                        event._submit_bubble = true
                    });
                    form._submit_attached = true
                }
            })
        }, postDispatch: function (event) {
            if (event._submit_bubble) {
                delete event._submit_bubble;
                if (this.parentNode && !event.isTrigger)jQuery$$0.event.simulate("submit",
                    this.parentNode, event, true)
            }
        }, teardown: function () {
            if (jQuery$$0.nodeName(this, "form"))return false;
            jQuery$$0.event.remove(this, "._submit")
        }
    };
    if (!jQuery$$0.support.changeBubbles)jQuery$$0.event.special.change = {
        setup: function () {
            if (rformElems.test(this.nodeName)) {
                if (this.type === "checkbox" || this.type === "radio") {
                    jQuery$$0.event.add(this, "propertychange._change", function (event) {
                        if (event.originalEvent.propertyName === "checked")this._just_changed = true
                    });
                    jQuery$$0.event.add(this, "click._change", function (event) {
                        if (this._just_changed && !event.isTrigger) {
                            this._just_changed = false;
                            jQuery$$0.event.simulate("change", this, event, true)
                        }
                    })
                }
                return false
            }
            jQuery$$0.event.add(this, "beforeactivate._change", function (e) {
                var elem = e.target;
                if (rformElems.test(elem.nodeName) && !elem._change_attached) {
                    jQuery$$0.event.add(elem, "change._change", function (event) {
                        if (this.parentNode && !event.isSimulated && !event.isTrigger)jQuery$$0.event.simulate("change", this.parentNode, event, true)
                    });
                    elem._change_attached = true
                }
            })
        }, handle: function (event) {
            var elem = event.target;
            if (this !== elem || event.isSimulated || event.isTrigger || elem.type !== "radio" && elem.type !== "checkbox")return event.handleObj.handler.apply(this, arguments)
        }, teardown: function () {
            jQuery$$0.event.remove(this, "._change");
            return rformElems.test(this.nodeName)
        }
    };
    if (!jQuery$$0.support.focusinBubbles)jQuery$$0.each({focus: "focusin", blur: "focusout"}, function (orig, fix) {
        var attaches = 0;
        var handler = function (event) {
            jQuery$$0.event.simulate(fix, event.target, jQuery$$0.event.fix(event), true)
        };
        jQuery$$0.event.special[fix] =
        {
            setup: function () {
                if (attaches++ === 0)document$$0.addEventListener(orig, handler, true)
            }, teardown: function () {
            if (--attaches === 0)document$$0.removeEventListener(orig, handler, true)
        }
        }
    });
    jQuery$$0.fn.extend({
        on: function (types, selector, data, fn, one) {
            var origFn;
            var type;
            if (typeof types === "object") {
                if (typeof selector !== "string") {
                    data = data || selector;
                    selector = undefined
                }
                for (type in types)this.on(type, selector, data, types[type], one);
                return this
            }
            if (data == null && fn == null) {
                fn = selector;
                data = selector = undefined
            } else if (fn ==
                null)if (typeof selector === "string") {
                fn = data;
                data = undefined
            } else {
                fn = data;
                data = selector;
                selector = undefined
            }
            if (fn === false)fn = returnFalse; else if (!fn)return this;
            if (one === 1) {
                origFn = fn;
                fn = function (event) {
                    jQuery$$0().off(event);
                    return origFn.apply(this, arguments)
                };
                fn.guid = origFn.guid || (origFn.guid = jQuery$$0.guid++)
            }
            return this.each(function () {
                jQuery$$0.event.add(this, types, fn, data, selector)
            })
        }, one: function (types, selector, data, fn) {
            return this.on(types, selector, data, fn, 1)
        }, off: function (types, selector, fn) {
            if (types &&
                types.preventDefault && types.handleObj) {
                var handleObj = types.handleObj;
                jQuery$$0(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
                return this
            }
            if (typeof types === "object") {
                for (var type in types)this.off(type, selector, types[type]);
                return this
            }
            if (selector === false || typeof selector === "function") {
                fn = selector;
                selector = undefined
            }
            if (fn === false)fn = returnFalse;
            return this.each(function () {
                jQuery$$0.event.remove(this,
                    types, fn, selector)
            })
        }, bind: function (types, data, fn) {
            return this.on(types, null, data, fn)
        }, unbind: function (types, fn) {
            return this.off(types, null, fn)
        }, live: function (types, data, fn) {
            jQuery$$0(this.context).on(types, this.selector, data, fn);
            return this
        }, die: function (types, fn) {
            jQuery$$0(this.context).off(types, this.selector || "**", fn);
            return this
        }, delegate: function (selector, types, data, fn) {
            return this.on(types, selector, data, fn)
        }, undelegate: function (selector, types, fn) {
            return arguments.length == 1 ? this.off(selector,
                "**") : this.off(types, selector, fn)
        }, trigger: function (type, data) {
            return this.each(function () {
                jQuery$$0.event.trigger(type, data, this)
            })
        }, triggerHandler: function (type, data) {
            if (this[0])return jQuery$$0.event.trigger(type, data, this[0], true)
        }, toggle: function (fn) {
            var args = arguments;
            var guid = fn.guid || jQuery$$0.guid++;
            var i = 0;
            var toggler = function (event) {
                var lastToggle = (jQuery$$0._data(this, "lastToggle" + fn.guid) || 0) % i;
                jQuery$$0._data(this, "lastToggle" + fn.guid, lastToggle + 1);
                event.preventDefault();
                return args[lastToggle].apply(this,
                        arguments) || false
            };
            for (toggler.guid = guid; i < args.length;)args[i++].guid = guid;
            return this.click(toggler)
        }, hover: function (fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
        }
    });
    jQuery$$0.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function (i, name) {
        jQuery$$0.fn[name] = function (data, fn) {
            if (fn == null) {
                fn = data;
                data = null
            }
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name)
        };
        if (jQuery$$0.attrFn)jQuery$$0.attrFn[name] = true;
        if (rkeyEvent.test(name))jQuery$$0.event.fixHooks[name] = jQuery$$0.event.keyHooks;
        if (rmouseEvent.test(name))jQuery$$0.event.fixHooks[name] = jQuery$$0.event.mouseHooks
    });
    (function () {
        function dirNodeCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {
            var i = 0;
            for (var l = checkSet.length; i < l; i++) {
                var elem = checkSet[i];
                if (elem) {
                    var match = false;
                    for (elem = elem[dir]; elem;) {
                        if (elem[expando] ===
                            doneName) {
                            match = checkSet[elem.sizset];
                            break
                        }
                        if (elem.nodeType === 1 && !isXML) {
                            elem[expando] = doneName;
                            elem.sizset = i
                        }
                        if (elem.nodeName.toLowerCase() === cur) {
                            match = elem;
                            break
                        }
                        elem = elem[dir]
                    }
                    checkSet[i] = match
                }
            }
        }

        function dirCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {
            var i = 0;
            for (var l = checkSet.length; i < l; i++) {
                var elem = checkSet[i];
                if (elem) {
                    var match = false;
                    for (elem = elem[dir]; elem;) {
                        if (elem[expando] === doneName) {
                            match = checkSet[elem.sizset];
                            break
                        }
                        if (elem.nodeType === 1) {
                            if (!isXML) {
                                elem[expando] = doneName;
                                elem.sizset =
                                    i
                            }
                            if (typeof cur !== "string") {
                                if (elem === cur) {
                                    match = true;
                                    break
                                }
                            } else if (Sizzle.filter(cur, [elem]).length > 0) {
                                match = elem;
                                break
                            }
                        }
                        elem = elem[dir]
                    }
                    checkSet[i] = match
                }
            }
        }

        var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g;
        var expando = "sizcache" + (Math.random() + "").replace(".", "");
        var done = 0;
        var toString = Object.prototype.toString;
        var hasDuplicate = false;
        var baseHasDuplicate = true;
        var rBackslash = /\\/g;
        var rReturn = /\r\n/g;
        var rNonWord = /\W/;
        [0, 0].sort(function () {
            baseHasDuplicate = false;
            return 0
        });
        var Sizzle = function (selector, context, results, seed) {
            results = results || [];
            context = context || document$$0;
            var origContext = context;
            if (context.nodeType !== 1 && context.nodeType !== 9)return [];
            if (!selector || typeof selector !== "string")return results;
            var m;
            var set;
            var checkSet;
            var extra;
            var ret;
            var cur;
            var pop;
            var i;
            var prune = true;
            var contextXML = Sizzle.isXML(context);
            var parts = [];
            var soFar = selector;
            do {
                chunker.exec("");
                m = chunker.exec(soFar);
                if (m) {
                    soFar = m[3];
                    parts.push(m[1]);
                    if (m[2]) {
                        extra = m[3];
                        break
                    }
                }
            } while (m);
            if (parts.length > 1 && origPOS.exec(selector))if (parts.length === 2 && Expr.relative[parts[0]])set = posProcess(parts[0] + parts[1], context, seed); else for (set = Expr.relative[parts[0]] ? [context] : Sizzle(parts.shift(), context); parts.length;) {
                selector = parts.shift();
                if (Expr.relative[selector])selector += parts.shift();
                set = posProcess(selector, set, seed)
            } else {
                if (!seed && parts.length > 1 && context.nodeType === 9 && !contextXML && Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1])) {
                    ret = Sizzle.find(parts.shift(), context, contextXML);
                    context = ret.expr ? Sizzle.filter(ret.expr, ret.set)[0] : ret.set[0]
                }
                if (context) {
                    ret = seed ? {
                        expr: parts.pop(),
                        set: makeArray(seed)
                    } : Sizzle.find(parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML);
                    set = ret.expr ? Sizzle.filter(ret.expr, ret.set) : ret.set;
                    if (parts.length > 0)checkSet = makeArray(set); else prune = false;
                    for (; parts.length;) {
                        cur = parts.pop();
                        pop =
                            cur;
                        if (!Expr.relative[cur])cur = ""; else pop = parts.pop();
                        if (pop == null)pop = context;
                        Expr.relative[cur](checkSet, pop, contextXML)
                    }
                } else checkSet = parts = []
            }
            if (!checkSet)checkSet = set;
            if (!checkSet)Sizzle.error(cur || selector);
            if (toString.call(checkSet) === "[object Array]")if (!prune)results.push.apply(results, checkSet); else if (context && context.nodeType === 1)for (i = 0; checkSet[i] != null; i++) {
                if (checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])))results.push(set[i])
            } else for (i =
                            0; checkSet[i] != null; i++) {
                if (checkSet[i] && checkSet[i].nodeType === 1)results.push(set[i])
            } else makeArray(checkSet, results);
            if (extra) {
                Sizzle(extra, origContext, results, seed);
                Sizzle.uniqueSort(results)
            }
            return results
        };
        Sizzle.uniqueSort = function (results) {
            if (sortOrder) {
                hasDuplicate = baseHasDuplicate;
                results.sort(sortOrder);
                if (hasDuplicate)for (var i = 1; i < results.length; i++)if (results[i] === results[i - 1])results.splice(i--, 1)
            }
            return results
        };
        Sizzle.matches = function (expr, set) {
            return Sizzle(expr, null, null, set)
        };
        Sizzle.matchesSelector = function (node, expr) {
            return Sizzle(expr, null, null, [node]).length > 0
        };
        Sizzle.find = function (expr, context, isXML) {
            var set;
            var i;
            var len;
            var match;
            var type;
            var left;
            if (!expr)return [];
            for (i = 0, len = Expr.order.length; i < len; i++) {
                type = Expr.order[i];
                if (match = Expr.leftMatch[type].exec(expr)) {
                    left = match[1];
                    match.splice(1, 1);
                    if (left.substr(left.length - 1) !== "\\") {
                        match[1] = (match[1] || "").replace(rBackslash, "");
                        set = Expr.find[type](match, context, isXML);
                        if (set != null) {
                            expr = expr.replace(Expr.match[type],
                                "");
                            break
                        }
                    }
                }
            }
            if (!set)set = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName("*") : [];
            return {set: set, expr: expr}
        };
        Sizzle.filter = function (expr, set, inplace, not) {
            var match;
            var anyFound;
            var type;
            var found;
            var item;
            var filter;
            var left;
            var i;
            var pass;
            var old = expr;
            var result = [];
            var curLoop = set;
            for (var isXMLFilter = set && set[0] && Sizzle.isXML(set[0]); expr && set.length;) {
                for (type in Expr.filter)if ((match = Expr.leftMatch[type].exec(expr)) != null && match[2]) {
                    filter = Expr.filter[type];
                    left = match[1];
                    anyFound = false;
                    match.splice(1, 1);
                    if (left.substr(left.length - 1) === "\\")continue;
                    if (curLoop === result)result = [];
                    if (Expr.preFilter[type]) {
                        match = Expr.preFilter[type](match, curLoop, inplace, result, not, isXMLFilter);
                        if (!match)anyFound = found = true; else if (match === true)continue
                    }
                    if (match)for (i = 0; (item = curLoop[i]) != null; i++)if (item) {
                        found = filter(item, match, i, curLoop);
                        pass = not ^ found;
                        if (inplace && found != null)if (pass)anyFound = true; else curLoop[i] = false; else if (pass) {
                            result.push(item);
                            anyFound = true
                        }
                    }
                    if (found !== undefined) {
                        if (!inplace)curLoop =
                            result;
                        expr = expr.replace(Expr.match[type], "");
                        if (!anyFound)return [];
                        break
                    }
                }
                if (expr === old)if (anyFound == null)Sizzle.error(expr); else break;
                old = expr
            }
            return curLoop
        };
        Sizzle.error = function (msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        };
        var getText = Sizzle.getText = function (elem) {
            var i;
            var node;
            var nodeType = elem.nodeType;
            var ret = "";
            if (nodeType)if (nodeType === 1 || nodeType === 9 || nodeType === 11)if (typeof elem.textContent === "string")return elem.textContent; else if (typeof elem.innerText === "string")return elem.innerText.replace(rReturn,
                ""); else for (elem = elem.firstChild; elem; elem = elem.nextSibling)ret += getText(elem); else {
                if (nodeType === 3 || nodeType === 4)return elem.nodeValue
            } else for (i = 0; node = elem[i]; i++)if (node.nodeType !== 8)ret += getText(node);
            return ret
        };
        var Expr = Sizzle.selectors = {
            order: ["ID", "NAME", "TAG"], match: {
                ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            }, leftMatch: {}, attrMap: {"class": "className", "for": "htmlFor"}, attrHandle: {
                href: function (elem) {
                    return elem.getAttribute("href")
                }, type: function (elem) {
                    return elem.getAttribute("type")
                }
            }, relative: {
                "+": function (checkSet,
                               part) {
                    var isPartStr = typeof part === "string";
                    var isTag = isPartStr && !rNonWord.test(part);
                    var isPartStrNotTag = isPartStr && !isTag;
                    if (isTag)part = part.toLowerCase();
                    var i = 0;
                    var l = checkSet.length;
                    for (var elem; i < l; i++)if (elem = checkSet[i]) {
                        for (; (elem = elem.previousSibling) && elem.nodeType !== 1;);
                        checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ? elem || false : elem === part
                    }
                    if (isPartStrNotTag)Sizzle.filter(part, checkSet, true)
                }, "\x3e": function (checkSet, part) {
                    var elem;
                    var isPartStr = typeof part === "string";
                    var i = 0;
                    var l = checkSet.length;
                    if (isPartStr && !rNonWord.test(part))for (part = part.toLowerCase(); i < l; i++) {
                        elem = checkSet[i];
                        if (elem) {
                            var parent = elem.parentNode;
                            checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false
                        }
                    } else {
                        for (; i < l; i++) {
                            elem = checkSet[i];
                            if (elem)checkSet[i] = isPartStr ? elem.parentNode : elem.parentNode === part
                        }
                        if (isPartStr)Sizzle.filter(part, checkSet, true)
                    }
                }, "": function (checkSet, part, isXML) {
                    var nodeCheck;
                    var doneName = done++;
                    var checkFn = dirCheck;
                    if (typeof part === "string" && !rNonWord.test(part)) {
                        part =
                            part.toLowerCase();
                        nodeCheck = part;
                        checkFn = dirNodeCheck
                    }
                    checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML)
                }, "~": function (checkSet, part, isXML) {
                    var nodeCheck;
                    var doneName = done++;
                    var checkFn = dirCheck;
                    if (typeof part === "string" && !rNonWord.test(part)) {
                        part = part.toLowerCase();
                        nodeCheck = part;
                        checkFn = dirNodeCheck
                    }
                    checkFn("previousSibling", part, doneName, checkSet, nodeCheck, isXML)
                }
            }, find: {
                ID: function (match, context, isXML) {
                    if (typeof context.getElementById !== "undefined" && !isXML) {
                        var m = context.getElementById(match[1]);
                        return m && m.parentNode ? [m] : []
                    }
                }, NAME: function (match, context) {
                    if (typeof context.getElementsByName !== "undefined") {
                        var ret = [];
                        var results = context.getElementsByName(match[1]);
                        var i = 0;
                        for (var l = results.length; i < l; i++)if (results[i].getAttribute("name") === match[1])ret.push(results[i]);
                        return ret.length === 0 ? null : ret
                    }
                }, TAG: function (match, context) {
                    if (typeof context.getElementsByTagName !== "undefined")return context.getElementsByTagName(match[1])
                }
            }, preFilter: {
                CLASS: function (match, curLoop, inplace, result, not, isXML) {
                    match =
                        " " + match[1].replace(rBackslash, "") + " ";
                    if (isXML)return match;
                    var i = 0;
                    for (var elem; (elem = curLoop[i]) != null; i++)if (elem)if (not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0)) {
                        if (!inplace)result.push(elem)
                    } else if (inplace)curLoop[i] = false;
                    return false
                }, ID: function (match) {
                    return match[1].replace(rBackslash, "")
                }, TAG: function (match, curLoop) {
                    return match[1].replace(rBackslash, "").toLowerCase()
                }, CHILD: function (match) {
                    if (match[1] === "nth") {
                        if (!match[2])Sizzle.error(match[0]);
                        match[2] = match[2].replace(/^\+|\s*/g, "");
                        var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" || !/\D/.test(match[2]) && "0n+" + match[2] || match[2]);
                        match[2] = test[1] + (test[2] || 1) - 0;
                        match[3] = test[3] - 0
                    } else if (match[2])Sizzle.error(match[0]);
                    match[0] = done++;
                    return match
                }, ATTR: function (match, curLoop, inplace, result, not, isXML) {
                    var name = match[1] = match[1].replace(rBackslash, "");
                    if (!isXML && Expr.attrMap[name])match[1] = Expr.attrMap[name];
                    match[4] = (match[4] || match[5] || "").replace(rBackslash,
                        "");
                    if (match[2] === "~\x3d")match[4] = " " + match[4] + " ";
                    return match
                }, PSEUDO: function (match, curLoop, inplace, result, not) {
                    if (match[1] === "not")if ((chunker.exec(match[3]) || "").length > 1 || /^\w/.test(match[3]))match[3] = Sizzle(match[3], null, null, curLoop); else {
                        var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);
                        if (!inplace)result.push.apply(result, ret);
                        return false
                    } else if (Expr.match.POS.test(match[0]) || Expr.match.CHILD.test(match[0]))return true;
                    return match
                }, POS: function (match) {
                    match.unshift(true);
                    return match
                }
            },
            filters: {
                enabled: function (elem) {
                    return elem.disabled === false && elem.type !== "hidden"
                }, disabled: function (elem) {
                    return elem.disabled === true
                }, checked: function (elem) {
                    return elem.checked === true
                }, selected: function (elem) {
                    if (elem.parentNode)elem.parentNode.selectedIndex;
                    return elem.selected === true
                }, parent: function (elem) {
                    return !!elem.firstChild
                }, empty: function (elem) {
                    return !elem.firstChild
                }, has: function (elem, i, match) {
                    return !!Sizzle(match[3], elem).length
                }, header: function (elem) {
                    return /h\d/i.test(elem.nodeName)
                },
                text: function (elem) {
                    var attr = elem.getAttribute("type");
                    var type = elem.type;
                    return elem.nodeName.toLowerCase() === "input" && "text" === type && (attr === type || attr === null)
                }, radio: function (elem) {
                    return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type
                }, checkbox: function (elem) {
                    return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type
                }, file: function (elem) {
                    return elem.nodeName.toLowerCase() === "input" && "file" === elem.type
                }, password: function (elem) {
                    return elem.nodeName.toLowerCase() === "input" &&
                        "password" === elem.type
                }, submit: function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return (name === "input" || name === "button") && "submit" === elem.type
                }, image: function (elem) {
                    return elem.nodeName.toLowerCase() === "input" && "image" === elem.type
                }, reset: function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return (name === "input" || name === "button") && "reset" === elem.type
                }, button: function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && "button" === elem.type || name === "button"
                }, input: function (elem) {
                    return /input|select|textarea|button/i.test(elem.nodeName)
                },
                focus: function (elem) {
                    return elem === elem.ownerDocument.activeElement
                }
            }, setFilters: {
                first: function (elem, i) {
                    return i === 0
                }, last: function (elem, i, match, array) {
                    return i === array.length - 1
                }, even: function (elem, i) {
                    return i % 2 === 0
                }, odd: function (elem, i) {
                    return i % 2 === 1
                }, lt: function (elem, i, match) {
                    return i < match[3] - 0
                }, gt: function (elem, i, match) {
                    return i > match[3] - 0
                }, nth: function (elem, i, match) {
                    return match[3] - 0 === i
                }, eq: function (elem, i, match) {
                    return match[3] - 0 === i
                }
            }, filter: {
                PSEUDO: function (elem, match, i, array) {
                    var name =
                        match[1];
                    var filter = Expr.filters[name];
                    if (filter)return filter(elem, i, match, array); else if (name === "contains")return (elem.textContent || elem.innerText || getText([elem]) || "").indexOf(match[3]) >= 0; else if (name === "not") {
                        var not = match[3];
                        var j = 0;
                        for (var l = not.length; j < l; j++)if (not[j] === elem)return false;
                        return true
                    } else Sizzle.error(name)
                }, CHILD: function (elem, match) {
                    var first;
                    var last;
                    var doneName;
                    var parent;
                    var cache;
                    var count;
                    var diff;
                    var type = match[1];
                    var node = elem;
                    switch (type) {
                        case "only":
                        case "first":
                            for (; node =
                                       node.previousSibling;)if (node.nodeType === 1)return false;
                            if (type === "first")return true;
                            node = elem;
                        case "last":
                            for (; node = node.nextSibling;)if (node.nodeType === 1)return false;
                            return true;
                        case "nth":
                            first = match[2];
                            last = match[3];
                            if (first === 1 && last === 0)return true;
                            doneName = match[0];
                            parent = elem.parentNode;
                            if (parent && (parent[expando] !== doneName || !elem.nodeIndex)) {
                                count = 0;
                                for (node = parent.firstChild; node; node = node.nextSibling)if (node.nodeType === 1)node.nodeIndex = ++count;
                                parent[expando] = doneName
                            }
                            diff = elem.nodeIndex -
                            last;
                            if (first === 0)return diff === 0; else return diff % first === 0 && diff / first >= 0
                    }
                }, ID: function (elem, match) {
                    return elem.nodeType === 1 && elem.getAttribute("id") === match
                }, TAG: function (elem, match) {
                    return match === "*" && elem.nodeType === 1 || !!elem.nodeName && elem.nodeName.toLowerCase() === match
                }, CLASS: function (elem, match) {
                    return (" " + (elem.className || elem.getAttribute("class")) + " ").indexOf(match) > -1
                }, ATTR: function (elem, match) {
                    var name = match[1];
                    var result = Sizzle.attr ? Sizzle.attr(elem, name) : Expr.attrHandle[name] ? Expr.attrHandle[name](elem) :
                        elem[name] != null ? elem[name] : elem.getAttribute(name);
                    var value = result + "";
                    var type = match[2];
                    var check = match[4];
                    return result == null ? type === "!\x3d" : !type && Sizzle.attr ? result != null : type === "\x3d" ? value === check : type === "*\x3d" ? value.indexOf(check) >= 0 : type === "~\x3d" ? (" " + value + " ").indexOf(check) >= 0 : !check ? value && result !== false : type === "!\x3d" ? value !== check : type === "^\x3d" ? value.indexOf(check) === 0 : type === "$\x3d" ? value.substr(value.length - check.length) === check : type === "|\x3d" ? value === check || value.substr(0, check.length +
                    1) === check + "-" : false
                }, POS: function (elem, match, i, array) {
                    var name = match[2];
                    var filter = Expr.setFilters[name];
                    if (filter)return filter(elem, i, match, array)
                }
            }
        };
        var origPOS = Expr.match.POS;
        var fescape = function (all, num) {
            return "\\" + (num - 0 + 1)
        };
        for (var type$$0 in Expr.match) {
            Expr.match[type$$0] = new RegExp(Expr.match[type$$0].source + /(?![^\[]*\])(?![^\(]*\))/.source);
            Expr.leftMatch[type$$0] = new RegExp(/(^(?:.|\r|\n)*?)/.source + Expr.match[type$$0].source.replace(/\\(\d+)/g, fescape))
        }
        Expr.match.globalPOS = origPOS;
        var makeArray = function (array, results) {
            array = Array.prototype.slice.call(array, 0);
            if (results) {
                results.push.apply(results, array);
                return results
            }
            return array
        };
        try {
            Array.prototype.slice.call(document$$0.documentElement.childNodes, 0)[0].nodeType
        } catch (e$$0) {
            makeArray = function (array, results) {
                var i = 0;
                var ret = results || [];
                if (toString.call(array) === "[object Array]")Array.prototype.push.apply(ret, array); else if (typeof array.length === "number")for (var l = array.length; i < l; i++)ret.push(array[i]); else for (; array[i]; i++)ret.push(array[i]);
                return ret
            }
        }
        var sortOrder;
        var siblingCheck;
        if (document$$0.documentElement.compareDocumentPosition)sortOrder = function (a, b) {
            if (a === b) {
                hasDuplicate = true;
                return 0
            }
            if (!a.compareDocumentPosition || !b.compareDocumentPosition)return a.compareDocumentPosition ? -1 : 1;
            return a.compareDocumentPosition(b) & 4 ? -1 : 1
        }; else {
            sortOrder = function (a, b) {
                if (a === b) {
                    hasDuplicate = true;
                    return 0
                } else if (a.sourceIndex && b.sourceIndex)return a.sourceIndex - b.sourceIndex;
                var al;
                var bl;
                var ap = [];
                var bp = [];
                var aup = a.parentNode;
                var bup = b.parentNode;
                var cur = aup;
                if (aup === bup)return siblingCheck(a, b); else if (!aup)return -1; else if (!bup)return 1;
                for (; cur;) {
                    ap.unshift(cur);
                    cur = cur.parentNode
                }
                for (cur = bup; cur;) {
                    bp.unshift(cur);
                    cur = cur.parentNode
                }
                al = ap.length;
                bl = bp.length;
                for (var i = 0; i < al && i < bl; i++)if (ap[i] !== bp[i])return siblingCheck(ap[i], bp[i]);
                return i === al ? siblingCheck(a, bp[i], -1) : siblingCheck(ap[i], b, 1)
            };
            siblingCheck = function (a, b, ret) {
                if (a === b)return ret;
                for (var cur = a.nextSibling; cur;) {
                    if (cur === b)return -1;
                    cur = cur.nextSibling
                }
                return 1
            }
        }
        (function () {
            var form =
                document$$0.createElement("div");
            var id = "script" + (new Date).getTime();
            var root = document$$0.documentElement;
            form.innerHTML = "\x3ca name\x3d'" + id + "'/\x3e";
            root.insertBefore(form, root.firstChild);
            if (document$$0.getElementById(id)) {
                Expr.find.ID = function (match, context, isXML) {
                    if (typeof context.getElementById !== "undefined" && !isXML) {
                        var m = context.getElementById(match[1]);
                        return m ? m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ? [m] : undefined : []
                    }
                };
                Expr.filter.ID =
                    function (elem, match) {
                        var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                        return elem.nodeType === 1 && node && node.nodeValue === match
                    }
            }
            root.removeChild(form);
            root = form = null
        })();
        (function () {
            var div = document$$0.createElement("div");
            div.appendChild(document$$0.createComment(""));
            if (div.getElementsByTagName("*").length > 0)Expr.find.TAG = function (match, context) {
                var results = context.getElementsByTagName(match[1]);
                if (match[1] === "*") {
                    var tmp = [];
                    for (var i = 0; results[i]; i++)if (results[i].nodeType ===
                        1)tmp.push(results[i]);
                    results = tmp
                }
                return results
            };
            div.innerHTML = "\x3ca href\x3d'#'\x3e\x3c/a\x3e";
            if (div.firstChild && typeof div.firstChild.getAttribute !== "undefined" && div.firstChild.getAttribute("href") !== "#")Expr.attrHandle.href = function (elem) {
                return elem.getAttribute("href", 2)
            };
            div = null
        })();
        if (document$$0.querySelectorAll)(function () {
            var oldSizzle = Sizzle;
            var div = document$$0.createElement("div");
            var id = "__sizzle__";
            div.innerHTML = "\x3cp class\x3d'TEST'\x3e\x3c/p\x3e";
            if (div.querySelectorAll && div.querySelectorAll(".TEST").length ===
                0)return;
            Sizzle = function (query, context, extra, seed) {
                context = context || document$$0;
                if (!seed && !Sizzle.isXML(context)) {
                    var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(query);
                    if (match && (context.nodeType === 1 || context.nodeType === 9))if (match[1])return makeArray(context.getElementsByTagName(query), extra); else if (match[2] && Expr.find.CLASS && context.getElementsByClassName)return makeArray(context.getElementsByClassName(match[2]), extra);
                    if (context.nodeType === 9) {
                        if (query === "body" && context.body)return makeArray([context.body],
                            extra); else if (match && match[3]) {
                            var elem = context.getElementById(match[3]);
                            if (elem && elem.parentNode) {
                                if (elem.id === match[3])return makeArray([elem], extra)
                            } else return makeArray([], extra)
                        }
                        try {
                            return makeArray(context.querySelectorAll(query), extra)
                        } catch (qsaError) {
                        }
                    } else if (context.nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
                        var oldContext = context;
                        var old = context.getAttribute("id");
                        var nid = old || id;
                        var hasParent = context.parentNode;
                        var relativeHierarchySelector = /^\s*[+~]/.test(query);
                        if (!old)context.setAttribute("id",
                            nid); else nid = nid.replace(/'/g, "\\$\x26");
                        if (relativeHierarchySelector && hasParent)context = context.parentNode;
                        try {
                            if (!relativeHierarchySelector || hasParent)return makeArray(context.querySelectorAll("[id\x3d'" + nid + "'] " + query), extra)
                        } catch (pseudoError) {
                        } finally {
                            if (!old)oldContext.removeAttribute("id")
                        }
                    }
                }
                return oldSizzle(query, context, extra, seed)
            };
            for (var prop in oldSizzle)Sizzle[prop] = oldSizzle[prop];
            div = null
        })();
        (function () {
            var html = document$$0.documentElement;
            var matches = html.matchesSelector || html.mozMatchesSelector ||
                html.webkitMatchesSelector || html.msMatchesSelector;
            if (matches) {
                var disconnectedMatch = !matches.call(document$$0.createElement("div"), "div");
                var pseudoWorks = false;
                try {
                    matches.call(document$$0.documentElement, "[test!\x3d'']:sizzle")
                } catch (pseudoError) {
                    pseudoWorks = true
                }
                Sizzle.matchesSelector = function (node, expr) {
                    expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "\x3d'$1']");
                    if (!Sizzle.isXML(node))try {
                        if (pseudoWorks || !Expr.match.PSEUDO.test(expr) && !/!=/.test(expr)) {
                            var ret = matches.call(node, expr);
                            if (ret || !disconnectedMatch ||
                                node.document && node.document.nodeType !== 11)return ret
                        }
                    } catch (e) {
                    }
                    return Sizzle(expr, null, null, [node]).length > 0
                }
            }
        })();
        (function () {
            var div = document$$0.createElement("div");
            div.innerHTML = "\x3cdiv class\x3d'test e'\x3e\x3c/div\x3e\x3cdiv class\x3d'test'\x3e\x3c/div\x3e";
            if (!div.getElementsByClassName || div.getElementsByClassName("e").length === 0)return;
            div.lastChild.className = "e";
            if (div.getElementsByClassName("e").length === 1)return;
            Expr.order.splice(1, 0, "CLASS");
            Expr.find.CLASS = function (match, context, isXML) {
                if (typeof context.getElementsByClassName !==
                    "undefined" && !isXML)return context.getElementsByClassName(match[1])
            };
            div = null
        })();
        if (document$$0.documentElement.contains)Sizzle.contains = function (a, b) {
            return a !== b && (a.contains ? a.contains(b) : true)
        }; else if (document$$0.documentElement.compareDocumentPosition)Sizzle.contains = function (a, b) {
            return !!(a.compareDocumentPosition(b) & 16)
        }; else Sizzle.contains = function () {
            return false
        };
        Sizzle.isXML = function (elem) {
            var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;
            return documentElement ? documentElement.nodeName !==
            "HTML" : false
        };
        var posProcess = function (selector, context, seed) {
            var match;
            var tmpSet = [];
            var later = "";
            for (var root = context.nodeType ? [context] : context; match = Expr.match.PSEUDO.exec(selector);) {
                later += match[0];
                selector = selector.replace(Expr.match.PSEUDO, "")
            }
            selector = Expr.relative[selector] ? selector + "*" : selector;
            var i = 0;
            for (var l = root.length; i < l; i++)Sizzle(selector, root[i], tmpSet, seed);
            return Sizzle.filter(later, tmpSet)
        };
        Sizzle.attr = jQuery$$0.attr;
        Sizzle.selectors.attrMap = {};
        jQuery$$0.find = Sizzle;
        jQuery$$0.expr =
            Sizzle.selectors;
        jQuery$$0.expr[":"] = jQuery$$0.expr.filters;
        jQuery$$0.unique = Sizzle.uniqueSort;
        jQuery$$0.text = Sizzle.getText;
        jQuery$$0.isXMLDoc = Sizzle.isXML;
        jQuery$$0.contains = Sizzle.contains
    })();
    var runtil = /Until$/;
    var rparentsprev = /^(?:parents|prevUntil|prevAll)/;
    var rmultiselector = /,/;
    var isSimple = /^.[^:#\[\.,]*$/;
    var slice = Array.prototype.slice;
    var POS = jQuery$$0.expr.match.globalPOS;
    var guaranteedUnique = {children: true, contents: true, next: true, prev: true};
    jQuery$$0.fn.extend({
        find: function (selector) {
            var self =
                this;
            var i;
            var l;
            if (typeof selector !== "string")return jQuery$$0(selector).filter(function () {
                for (i = 0, l = self.length; i < l; i++)if (jQuery$$0.contains(self[i], this))return true
            });
            var ret = this.pushStack("", "find", selector);
            var length;
            var n;
            var r;
            for (i = 0, l = this.length; i < l; i++) {
                length = ret.length;
                jQuery$$0.find(selector, this[i], ret);
                if (i > 0)for (n = length; n < ret.length; n++)for (r = 0; r < length; r++)if (ret[r] === ret[n]) {
                    ret.splice(n--, 1);
                    break
                }
            }
            return ret
        }, has: function (target) {
            var targets = jQuery$$0(target);
            return this.filter(function () {
                var i =
                    0;
                for (var l = targets.length; i < l; i++)if (jQuery$$0.contains(this, targets[i]))return true
            })
        }, not: function (selector) {
            return this.pushStack(winnow(this, selector, false), "not", selector)
        }, filter: function (selector) {
            return this.pushStack(winnow(this, selector, true), "filter", selector)
        }, is: function (selector) {
            return !!selector && (typeof selector === "string" ? POS.test(selector) ? jQuery$$0(selector, this.context).index(this[0]) >= 0 : jQuery$$0.filter(selector, this).length > 0 : this.filter(selector).length > 0)
        }, closest: function (selectors,
                              context) {
            var ret = [];
            var i;
            var l;
            var cur = this[0];
            if (jQuery$$0.isArray(selectors)) {
                for (var level = 1; cur && cur.ownerDocument && cur !== context;) {
                    for (i = 0; i < selectors.length; i++)if (jQuery$$0(cur).is(selectors[i]))ret.push({
                        selector: selectors[i],
                        elem: cur,
                        level: level
                    });
                    cur = cur.parentNode;
                    level++
                }
                return ret
            }
            var pos = POS.test(selectors) || typeof selectors !== "string" ? jQuery$$0(selectors, context || this.context) : 0;
            for (i = 0, l = this.length; i < l; i++)for (cur = this[i]; cur;)if (pos ? pos.index(cur) > -1 : jQuery$$0.find.matchesSelector(cur,
                    selectors)) {
                ret.push(cur);
                break
            } else {
                cur = cur.parentNode;
                if (!cur || !cur.ownerDocument || cur === context || cur.nodeType === 11)break
            }
            ret = ret.length > 1 ? jQuery$$0.unique(ret) : ret;
            return this.pushStack(ret, "closest", selectors)
        }, index: function (elem) {
            if (!elem)return this[0] && this[0].parentNode ? this.prevAll().length : -1;
            if (typeof elem === "string")return jQuery$$0.inArray(this[0], jQuery$$0(elem));
            return jQuery$$0.inArray(elem.jquery ? elem[0] : elem, this)
        }, add: function (selector, context) {
            var set = typeof selector === "string" ?
                jQuery$$0(selector, context) : jQuery$$0.makeArray(selector && selector.nodeType ? [selector] : selector);
            var all = jQuery$$0.merge(this.get(), set);
            return this.pushStack(isDisconnected(set[0]) || isDisconnected(all[0]) ? all : jQuery$$0.unique(all))
        }, andSelf: function () {
            return this.add(this.prevObject)
        }
    });
    jQuery$$0.each({
        parent: function (elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null
        }, parents: function (elem) {
            return jQuery$$0.dir(elem, "parentNode")
        }, parentsUntil: function (elem, i, until) {
            return jQuery$$0.dir(elem,
                "parentNode", until)
        }, next: function (elem) {
            return jQuery$$0.nth(elem, 2, "nextSibling")
        }, prev: function (elem) {
            return jQuery$$0.nth(elem, 2, "previousSibling")
        }, nextAll: function (elem) {
            return jQuery$$0.dir(elem, "nextSibling")
        }, prevAll: function (elem) {
            return jQuery$$0.dir(elem, "previousSibling")
        }, nextUntil: function (elem, i, until) {
            return jQuery$$0.dir(elem, "nextSibling", until)
        }, prevUntil: function (elem, i, until) {
            return jQuery$$0.dir(elem, "previousSibling", until)
        }, siblings: function (elem) {
            return jQuery$$0.sibling((elem.parentNode ||
            {}).firstChild, elem)
        }, children: function (elem) {
            return jQuery$$0.sibling(elem.firstChild)
        }, contents: function (elem) {
            return jQuery$$0.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery$$0.makeArray(elem.childNodes)
        }
    }, function (name, fn) {
        jQuery$$0.fn[name] = function (until, selector) {
            var ret = jQuery$$0.map(this, fn, until);
            if (!runtil.test(name))selector = until;
            if (selector && typeof selector === "string")ret = jQuery$$0.filter(selector, ret);
            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery$$0.unique(ret) :
                ret;
            if ((this.length > 1 || rmultiselector.test(selector)) && rparentsprev.test(name))ret = ret.reverse();
            return this.pushStack(ret, name, slice.call(arguments).join(","))
        }
    });
    jQuery$$0.extend({
        filter: function (expr, elems, not) {
            if (not)expr = ":not(" + expr + ")";
            return elems.length === 1 ? jQuery$$0.find.matchesSelector(elems[0], expr) ? [elems[0]] : [] : jQuery$$0.find.matches(expr, elems)
        }, dir: function (elem, dir, until) {
            var matched = [];
            for (var cur = elem[dir]; cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery$$0(cur).is(until));) {
                if (cur.nodeType ===
                    1)matched.push(cur);
                cur = cur[dir]
            }
            return matched
        }, nth: function (cur, result, dir, elem) {
            result = result || 1;
            for (var num = 0; cur; cur = cur[dir])if (cur.nodeType === 1 && ++num === result)break;
            return cur
        }, sibling: function (n, elem) {
            for (var r = []; n; n = n.nextSibling)if (n.nodeType === 1 && n !== elem)r.push(n);
            return r
        }
    });
    var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" + "header|hgroup|mark|meter|nav|output|progress|section|summary|time|video";
    var rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g;
    var rleadingWhitespace = /^\s+/;
    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig;
    var rtagName = /<([\w:]+)/;
    var rtbody = /<tbody/i;
    var rhtml = /<|&#?\w+;/;
    var rnoInnerhtml = /<(?:script|style)/i;
    var rnocache = /<(?:script|object|embed|option|style)/i;
    var rnoshimcache = new RegExp("\x3c(?:" + nodeNames + ")[\\s/\x3e]", "i");
    var rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i;
    var rscriptType = /\/(java|ecma)script/i;
    var rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/;
    var wrapMap = {
        option: [1, "\x3cselect multiple\x3d'multiple'\x3e",
            "\x3c/select\x3e"],
        legend: [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"],
        thead: [1, "\x3ctable\x3e", "\x3c/table\x3e"],
        tr: [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"],
        td: [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"],
        col: [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", "\x3c/colgroup\x3e\x3c/table\x3e"],
        area: [1, "\x3cmap\x3e", "\x3c/map\x3e"],
        _default: [0, "", ""]
    };
    var safeFragment = createSafeFragment(document$$0);
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    if (!jQuery$$0.support.htmlSerialize)wrapMap._default = [1, "div\x3cdiv\x3e", "\x3c/div\x3e"];
    jQuery$$0.fn.extend({
        text: function (value$$0) {
            return jQuery$$0.access(this, function (value) {
                return value === undefined ? jQuery$$0.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document$$0).createTextNode(value))
            }, null, value$$0, arguments.length)
        }, wrapAll: function (html) {
            if (jQuery$$0.isFunction(html))return this.each(function (i) {
                jQuery$$0(this).wrapAll(html.call(this,
                    i))
            });
            if (this[0]) {
                var wrap = jQuery$$0(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode)wrap.insertBefore(this[0]);
                wrap.map(function () {
                    for (var elem = this; elem.firstChild && elem.firstChild.nodeType === 1;)elem = elem.firstChild;
                    return elem
                }).append(this)
            }
            return this
        }, wrapInner: function (html) {
            if (jQuery$$0.isFunction(html))return this.each(function (i) {
                jQuery$$0(this).wrapInner(html.call(this, i))
            });
            return this.each(function () {
                var self = jQuery$$0(this);
                var contents = self.contents();
                if (contents.length)contents.wrapAll(html);
                else self.append(html)
            })
        }, wrap: function (html) {
            var isFunction = jQuery$$0.isFunction(html);
            return this.each(function (i) {
                jQuery$$0(this).wrapAll(isFunction ? html.call(this, i) : html)
            })
        }, unwrap: function () {
            return this.parent().each(function () {
                if (!jQuery$$0.nodeName(this, "body"))jQuery$$0(this).replaceWith(this.childNodes)
            }).end()
        }, append: function () {
            return this.domManip(arguments, true, function (elem) {
                if (this.nodeType === 1)this.appendChild(elem)
            })
        }, prepend: function () {
            return this.domManip(arguments, true, function (elem) {
                if (this.nodeType ===
                    1)this.insertBefore(elem, this.firstChild)
            })
        }, before: function () {
            if (this[0] && this[0].parentNode)return this.domManip(arguments, false, function (elem) {
                this.parentNode.insertBefore(elem, this)
            }); else if (arguments.length) {
                var set = jQuery$$0.clean(arguments);
                set.push.apply(set, this.toArray());
                return this.pushStack(set, "before", arguments)
            }
        }, after: function () {
            if (this[0] && this[0].parentNode)return this.domManip(arguments, false, function (elem) {
                this.parentNode.insertBefore(elem, this.nextSibling)
            }); else if (arguments.length) {
                var set =
                    this.pushStack(this, "after", arguments);
                set.push.apply(set, jQuery$$0.clean(arguments));
                return set
            }
        }, remove: function (selector, keepData) {
            var i = 0;
            for (var elem; (elem = this[i]) != null; i++)if (!selector || jQuery$$0.filter(selector, [elem]).length) {
                if (!keepData && elem.nodeType === 1) {
                    jQuery$$0.cleanData(elem.getElementsByTagName("*"));
                    jQuery$$0.cleanData([elem])
                }
                if (elem.parentNode)elem.parentNode.removeChild(elem)
            }
            return this
        }, empty: function () {
            var i = 0;
            for (var elem; (elem = this[i]) != null; i++) {
                if (elem.nodeType === 1)jQuery$$0.cleanData(elem.getElementsByTagName("*"));
                for (; elem.firstChild;)elem.removeChild(elem.firstChild)
            }
            return this
        }, clone: function (dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function () {
                return jQuery$$0.clone(this, dataAndEvents, deepDataAndEvents)
            })
        }, html: function (value$$0) {
            return jQuery$$0.access(this, function (value) {
                var elem = this[0] || {};
                var i = 0;
                var l = this.length;
                if (value === undefined)return elem.nodeType === 1 ? elem.innerHTML.replace(rinlinejQuery,
                    "") : null;
                if (typeof value === "string" && !rnoInnerhtml.test(value) && (jQuery$$0.support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
                    value = value.replace(rxhtmlTag, "\x3c$1\x3e\x3c/$2\x3e");
                    try {
                        for (; i < l; i++) {
                            elem = this[i] || {};
                            if (elem.nodeType === 1) {
                                jQuery$$0.cleanData(elem.getElementsByTagName("*"));
                                elem.innerHTML = value
                            }
                        }
                        elem = 0
                    } catch (e) {
                    }
                }
                if (elem)this.empty().append(value)
            }, null, value$$0, arguments.length)
        }, replaceWith: function (value) {
            if (this[0] &&
                this[0].parentNode) {
                if (jQuery$$0.isFunction(value))return this.each(function (i) {
                    var self = jQuery$$0(this);
                    var old = self.html();
                    self.replaceWith(value.call(this, i, old))
                });
                if (typeof value !== "string")value = jQuery$$0(value).detach();
                return this.each(function () {
                    var next = this.nextSibling;
                    var parent = this.parentNode;
                    jQuery$$0(this).remove();
                    if (next)jQuery$$0(next).before(value); else jQuery$$0(parent).append(value)
                })
            } else return this.length ? this.pushStack(jQuery$$0(jQuery$$0.isFunction(value) ? value() : value),
                "replaceWith", value) : this
        }, detach: function (selector) {
            return this.remove(selector, true)
        }, domManip: function (args, table, callback) {
            var results;
            var first;
            var fragment;
            var parent;
            var value = args[0];
            var scripts = [];
            if (!jQuery$$0.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test(value))return this.each(function () {
                jQuery$$0(this).domManip(args, table, callback, true)
            });
            if (jQuery$$0.isFunction(value))return this.each(function (i) {
                var self = jQuery$$0(this);
                args[0] = value.call(this, i, table ?
                    self.html() : undefined);
                self.domManip(args, table, callback)
            });
            if (this[0]) {
                parent = value && value.parentNode;
                if (jQuery$$0.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length)results = {fragment: parent}; else results = jQuery$$0.buildFragment(args, this, scripts);
                fragment = results.fragment;
                if (fragment.childNodes.length === 1)first = fragment = fragment.firstChild; else first = fragment.firstChild;
                if (first) {
                    table = table && jQuery$$0.nodeName(first, "tr");
                    var i$$0 = 0;
                    var l = this.length;
                    for (var lastIndex =
                        l - 1; i$$0 < l; i$$0++)callback.call(table ? root(this[i$$0], first) : this[i$$0], results.cacheable || l > 1 && i$$0 < lastIndex ? jQuery$$0.clone(fragment, true, true) : fragment)
                }
                if (scripts.length)jQuery$$0.each(scripts, function (i, elem) {
                    if (elem.src)jQuery$$0.ajax({
                        type: "GET",
                        global: false,
                        url: elem.src,
                        async: false,
                        dataType: "script"
                    }); else jQuery$$0.globalEval((elem.text || elem.textContent || elem.innerHTML || "").replace(rcleanScript, "/*$0*/"));
                    if (elem.parentNode)elem.parentNode.removeChild(elem)
                })
            }
            return this
        }
    });
    jQuery$$0.buildFragment =
        function (args, nodes, scripts) {
            var fragment;
            var cacheable;
            var cacheresults;
            var doc;
            var first = args[0];
            if (nodes && nodes[0])doc = nodes[0].ownerDocument || nodes[0];
            if (!doc.createDocumentFragment)doc = document$$0;
            if (args.length === 1 && typeof first === "string" && first.length < 512 && doc === document$$0 && first.charAt(0) === "\x3c" && !rnocache.test(first) && (jQuery$$0.support.checkClone || !rchecked.test(first)) && (jQuery$$0.support.html5Clone || !rnoshimcache.test(first))) {
                cacheable = true;
                cacheresults = jQuery$$0.fragments[first];
                if (cacheresults && cacheresults !== 1)fragment = cacheresults
            }
            if (!fragment) {
                fragment = doc.createDocumentFragment();
                jQuery$$0.clean(args, doc, fragment, scripts)
            }
            if (cacheable)jQuery$$0.fragments[first] = cacheresults ? fragment : 1;
            return {fragment: fragment, cacheable: cacheable}
        };
    jQuery$$0.fragments = {};
    jQuery$$0.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (name, original) {
        jQuery$$0.fn[name] = function (selector) {
            var ret = [];
            var insert = jQuery$$0(selector);
            var parent = this.length === 1 && this[0].parentNode;
            if (parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1) {
                insert[original](this[0]);
                return this
            } else {
                var i = 0;
                for (var l = insert.length; i < l; i++) {
                    var elems = (i > 0 ? this.clone(true) : this).get();
                    jQuery$$0(insert[i])[original](elems);
                    ret = ret.concat(elems)
                }
                return this.pushStack(ret, name, insert.selector)
            }
        }
    });
    jQuery$$0.extend({
        clone: function (elem, dataAndEvents, deepDataAndEvents) {
            var srcElements;
            var destElements;
            var i;
            var clone = jQuery$$0.support.html5Clone ||
            jQuery$$0.isXMLDoc(elem) || !rnoshimcache.test("\x3c" + elem.nodeName + "\x3e") ? elem.cloneNode(true) : shimCloneNode(elem);
            if ((!jQuery$$0.support.noCloneEvent || !jQuery$$0.support.noCloneChecked) && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery$$0.isXMLDoc(elem)) {
                cloneFixAttributes(elem, clone);
                srcElements = getAll(elem);
                destElements = getAll(clone);
                for (i = 0; srcElements[i]; ++i)if (destElements[i])cloneFixAttributes(srcElements[i], destElements[i])
            }
            if (dataAndEvents) {
                cloneCopyEvent(elem, clone);
                if (deepDataAndEvents) {
                    srcElements =
                        getAll(elem);
                    destElements = getAll(clone);
                    for (i = 0; srcElements[i]; ++i)cloneCopyEvent(srcElements[i], destElements[i])
                }
            }
            srcElements = destElements = null;
            return clone
        }, clean: function (elems, context, fragment, scripts) {
            var checkScriptType;
            var script;
            var j;
            var ret = [];
            context = context || document$$0;
            if (typeof context.createElement === "undefined")context = context.ownerDocument || context[0] && context[0].ownerDocument || document$$0;
            var i = 0;
            for (var elem$$0; (elem$$0 = elems[i]) != null; i++) {
                if (typeof elem$$0 === "number")elem$$0 +=
                    "";
                if (!elem$$0)continue;
                if (typeof elem$$0 === "string")if (!rhtml.test(elem$$0))elem$$0 = context.createTextNode(elem$$0); else {
                    elem$$0 = elem$$0.replace(rxhtmlTag, "\x3c$1\x3e\x3c/$2\x3e");
                    var tag = (rtagName.exec(elem$$0) || ["", ""])[1].toLowerCase();
                    var wrap = wrapMap[tag] || wrapMap._default;
                    var depth = wrap[0];
                    var div = context.createElement("div");
                    var safeChildNodes = safeFragment.childNodes;
                    var remove;
                    if (context === document$$0)safeFragment.appendChild(div); else createSafeFragment(context).appendChild(div);
                    for (div.innerHTML =
                             wrap[1] + elem$$0 + wrap[2]; depth--;)div = div.lastChild;
                    if (!jQuery$$0.support.tbody) {
                        var hasBody = rtbody.test(elem$$0);
                        var tbody = tag === "table" && !hasBody ? div.firstChild && div.firstChild.childNodes : wrap[1] === "\x3ctable\x3e" && !hasBody ? div.childNodes : [];
                        for (j = tbody.length - 1; j >= 0; --j)if (jQuery$$0.nodeName(tbody[j], "tbody") && !tbody[j].childNodes.length)tbody[j].parentNode.removeChild(tbody[j])
                    }
                    if (!jQuery$$0.support.leadingWhitespace && rleadingWhitespace.test(elem$$0))div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem$$0)[0]),
                        div.firstChild);
                    elem$$0 = div.childNodes;
                    if (div) {
                        div.parentNode.removeChild(div);
                        if (safeChildNodes.length > 0) {
                            remove = safeChildNodes[safeChildNodes.length - 1];
                            if (remove && remove.parentNode)remove.parentNode.removeChild(remove)
                        }
                    }
                }
                var len;
                if (!jQuery$$0.support.appendChecked)if (elem$$0[0] && typeof(len = elem$$0.length) === "number")for (j = 0; j < len; j++)findInputs(elem$$0[j]); else findInputs(elem$$0);
                if (elem$$0.nodeType)ret.push(elem$$0); else ret = jQuery$$0.merge(ret, elem$$0)
            }
            if (fragment) {
                checkScriptType = function (elem) {
                    return !elem.type ||
                        rscriptType.test(elem.type)
                };
                for (i = 0; ret[i]; i++) {
                    script = ret[i];
                    if (scripts && jQuery$$0.nodeName(script, "script") && (!script.type || rscriptType.test(script.type)))scripts.push(script.parentNode ? script.parentNode.removeChild(script) : script); else {
                        if (script.nodeType === 1) {
                            var jsTags = jQuery$$0.grep(script.getElementsByTagName("script"), checkScriptType);
                            ret.splice.apply(ret, [i + 1, 0].concat(jsTags))
                        }
                        fragment.appendChild(script)
                    }
                }
            }
            return ret
        }, cleanData: function (elems) {
            var data;
            var id;
            var cache = jQuery$$0.cache;
            var special = jQuery$$0.event.special;
            var deleteExpando = jQuery$$0.support.deleteExpando;
            var i = 0;
            for (var elem; (elem = elems[i]) != null; i++) {
                if (elem.nodeName && jQuery$$0.noData[elem.nodeName.toLowerCase()])continue;
                id = elem[jQuery$$0.expando];
                if (id) {
                    data = cache[id];
                    if (data && data.events) {
                        for (var type in data.events)if (special[type])jQuery$$0.event.remove(elem, type); else jQuery$$0.removeEvent(elem, type, data.handle);
                        if (data.handle)data.handle.elem = null
                    }
                    if (deleteExpando)delete elem[jQuery$$0.expando]; else if (elem.removeAttribute)elem.removeAttribute(jQuery$$0.expando);
                    delete cache[id]
                }
            }
        }
    });
    var ralpha = /alpha\([^)]*\)/i;
    var ropacity = /opacity=([^)]*)/;
    var rupper = /([A-Z]|^ms)/g;
    var rnum = /^[\-+]?(?:\d*\.)?\d+$/i;
    var rnumnonpx = /^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i;
    var rrelNum = /^([\-+])=([\-+.\de]+)/;
    var rmargin = /^margin/;
    var cssShow = {position: "absolute", visibility: "hidden", display: "block"};
    var cssExpand = ["Top", "Right", "Bottom", "Left"];
    var curCSS;
    var getComputedStyle;
    var currentStyle;
    jQuery$$0.fn.css = function (name$$0, value$$0) {
        return jQuery$$0.access(this, function (elem,
                                                name, value) {
            return value !== undefined ? jQuery$$0.style(elem, name, value) : jQuery$$0.css(elem, name)
        }, name$$0, value$$0, arguments.length > 1)
    };
    jQuery$$0.extend({
        cssHooks: {
            opacity: {
                get: function (elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, "opacity");
                        return ret === "" ? "1" : ret
                    } else return elem.style.opacity
                }
            }
        },
        cssNumber: {
            "fillOpacity": true,
            "fontWeight": true,
            "lineHeight": true,
            "opacity": true,
            "orphans": true,
            "widows": true,
            "zIndex": true,
            "zoom": true
        },
        cssProps: {"float": jQuery$$0.support.cssFloat ? "cssFloat" : "styleFloat"},
        style: function (elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style)return;
            var ret;
            var type;
            var origName = jQuery$$0.camelCase(name);
            var style = elem.style;
            var hooks = jQuery$$0.cssHooks[origName];
            name = jQuery$$0.cssProps[origName] || origName;
            if (value !== undefined) {
                type = typeof value;
                if (type === "string" && (ret = rrelNum.exec(value))) {
                    value = +(ret[1] + 1) * +ret[2] + parseFloat(jQuery$$0.css(elem, name));
                    type = "number"
                }
                if (value == null || type === "number" && isNaN(value))return;
                if (type === "number" && !jQuery$$0.cssNumber[origName])value += "px";
                if (!hooks || !("set"in hooks) || (value = hooks.set(elem, value)) !== undefined)try {
                    style[name] = value
                } catch (e) {
                }
            } else {
                if (hooks && "get"in hooks && (ret = hooks.get(elem, false, extra)) !== undefined)return ret;
                return style[name]
            }
        },
        css: function (elem, name, extra) {
            var ret;
            var hooks;
            name = jQuery$$0.camelCase(name);
            hooks = jQuery$$0.cssHooks[name];
            name = jQuery$$0.cssProps[name] || name;
            if (name === "cssFloat")name = "float";
            if (hooks && "get"in hooks && (ret = hooks.get(elem, true, extra)) !== undefined)return ret;
            else if (curCSS)return curCSS(elem, name)
        },
        swap: function (elem, options, callback) {
            var old = {};
            var ret;
            for (var name in options) {
                old[name] = elem.style[name];
                elem.style[name] = options[name]
            }
            ret = callback.call(elem);
            for (name in options)elem.style[name] = old[name];
            return ret
        }
    });
    jQuery$$0.curCSS = jQuery$$0.css;
    if (document$$0.defaultView && document$$0.defaultView.getComputedStyle)getComputedStyle = function (elem, name) {
        var ret;
        var defaultView;
        var computedStyle;
        var width;
        var style = elem.style;
        name = name.replace(rupper, "-$1").toLowerCase();
        if ((defaultView = elem.ownerDocument.defaultView) && (computedStyle = defaultView.getComputedStyle(elem, null))) {
            ret = computedStyle.getPropertyValue(name);
            if (ret === "" && !jQuery$$0.contains(elem.ownerDocument.documentElement, elem))ret = jQuery$$0.style(elem, name)
        }
        if (!jQuery$$0.support.pixelMargin && computedStyle && rmargin.test(name) && rnumnonpx.test(ret)) {
            width = style.width;
            style.width = ret;
            ret = computedStyle.width;
            style.width = width
        }
        return ret
    };
    if (document$$0.documentElement.currentStyle)currentStyle = function (elem,
                                                                          name) {
        var left;
        var rsLeft;
        var uncomputed;
        var ret = elem.currentStyle && elem.currentStyle[name];
        var style = elem.style;
        if (ret == null && style && (uncomputed = style[name]))ret = uncomputed;
        if (rnumnonpx.test(ret)) {
            left = style.left;
            rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;
            if (rsLeft)elem.runtimeStyle.left = elem.currentStyle.left;
            style.left = name === "fontSize" ? "1em" : ret;
            ret = style.pixelLeft + "px";
            style.left = left;
            if (rsLeft)elem.runtimeStyle.left = rsLeft
        }
        return ret === "" ? "auto" : ret
    };
    curCSS = getComputedStyle || currentStyle;
    jQuery$$0.each(["height", "width"], function (i, name) {
        jQuery$$0.cssHooks[name] = {
            get: function (elem, computed, extra) {
                if (computed)if (elem.offsetWidth !== 0)return getWidthOrHeight(elem, name, extra); else return jQuery$$0.swap(elem, cssShow, function () {
                    return getWidthOrHeight(elem, name, extra)
                })
            }, set: function (elem, value) {
                return rnum.test(value) ? value + "px" : value
            }
        }
    });
    if (!jQuery$$0.support.opacity)jQuery$$0.cssHooks.opacity = {
        get: function (elem, computed) {
            return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter :
                elem.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : computed ? "1" : ""
        }, set: function (elem, value) {
            var style = elem.style;
            var currentStyle = elem.currentStyle;
            var opacity = jQuery$$0.isNumeric(value) ? "alpha(opacity\x3d" + value * 100 + ")" : "";
            var filter = currentStyle && currentStyle.filter || style.filter || "";
            style.zoom = 1;
            if (value >= 1 && jQuery$$0.trim(filter.replace(ralpha, "")) === "") {
                style.removeAttribute("filter");
                if (currentStyle && !currentStyle.filter)return
            }
            style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) :
            filter + " " + opacity
        }
    };
    jQuery$$0(function () {
        if (!jQuery$$0.support.reliableMarginRight)jQuery$$0.cssHooks.marginRight = {
            get: function (elem, computed) {
                return jQuery$$0.swap(elem, {"display": "inline-block"}, function () {
                    if (computed)return curCSS(elem, "margin-right"); else return elem.style.marginRight
                })
            }
        }
    });
    if (jQuery$$0.expr && jQuery$$0.expr.filters) {
        jQuery$$0.expr.filters.hidden = function (elem) {
            var width = elem.offsetWidth;
            var height = elem.offsetHeight;
            return width === 0 && height === 0 || !jQuery$$0.support.reliableHiddenOffsets &&
                (elem.style && elem.style.display || jQuery$$0.css(elem, "display")) === "none"
        };
        jQuery$$0.expr.filters.visible = function (elem) {
            return !jQuery$$0.expr.filters.hidden(elem)
        }
    }
    jQuery$$0.each({margin: "", padding: "", border: "Width"}, function (prefix, suffix) {
        jQuery$$0.cssHooks[prefix + suffix] = {
            expand: function (value) {
                var i;
                var parts = typeof value === "string" ? value.split(" ") : [value];
                var expanded = {};
                for (i = 0; i < 4; i++)expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                return expanded
            }
        }
    });
    var r20 = /%20/g;
    var rbracket =
        /\[\]$/;
    var rCRLF = /\r?\n/g;
    var rhash = /#.*$/;
    var rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg;
    var rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
    var rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/;
    var rnoContent = /^(?:GET|HEAD)$/;
    var rprotocol = /^\/\//;
    var rquery = /\?/;
    var rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi;
    var rselectTextarea = /^(?:select|textarea)/i;
    var rspacesAjax = /\s+/;
    var rts =
        /([?&])_=[^&]*/;
    var rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/;
    var _load = jQuery$$0.fn.load;
    var prefilters = {};
    var transports = {};
    var ajaxLocation;
    var ajaxLocParts;
    var allTypes = ["*/"] + ["*"];
    try {
        ajaxLocation = location.href
    } catch (e$$1) {
        ajaxLocation = document$$0.createElement("a");
        ajaxLocation.href = "";
        ajaxLocation = ajaxLocation.href
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];
    jQuery$$0.fn.extend({
        load: function (url, params, callback) {
            if (typeof url !== "string" && _load)return _load.apply(this,
                arguments); else if (!this.length)return this;
            var off = url.indexOf(" ");
            if (off >= 0) {
                var selector = url.slice(off, url.length);
                url = url.slice(0, off)
            }
            var type = "GET";
            if (params)if (jQuery$$0.isFunction(params)) {
                callback = params;
                params = undefined
            } else if (typeof params === "object") {
                params = jQuery$$0.param(params, jQuery$$0.ajaxSettings.traditional);
                type = "POST"
            }
            var self = this;
            jQuery$$0.ajax({
                url: url, type: type, dataType: "html", data: params, complete: function (jqXHR, status, responseText) {
                    responseText = jqXHR.responseText;
                    if (jqXHR.isResolved()) {
                        jqXHR.done(function (r) {
                            responseText =
                                r
                        });
                        self.html(selector ? jQuery$$0("\x3cdiv\x3e").append(responseText.replace(rscript, "")).find(selector) : responseText)
                    }
                    if (callback)self.each(callback, [responseText, status, jqXHR])
                }
            });
            return this
        }, serialize: function () {
            return jQuery$$0.param(this.serializeArray())
        }, serializeArray: function () {
            return this.map(function () {
                return this.elements ? jQuery$$0.makeArray(this.elements) : this
            }).filter(function () {
                return this.name && !this.disabled && (this.checked || rselectTextarea.test(this.nodeName) || rinput.test(this.type))
            }).map(function (i$$0,
                             elem) {
                var val$$0 = jQuery$$0(this).val();
                return val$$0 == null ? null : jQuery$$0.isArray(val$$0) ? jQuery$$0.map(val$$0, function (val, i) {
                    return {name: elem.name, value: val.replace(rCRLF, "\r\n")}
                }) : {name: elem.name, value: val$$0.replace(rCRLF, "\r\n")}
            }).get()
        }
    });
    jQuery$$0.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (i, o) {
        jQuery$$0.fn[o] = function (f) {
            return this.on(o, f)
        }
    });
    jQuery$$0.each(["get", "post"], function (i, method) {
        jQuery$$0[method] = function (url, data, callback, type) {
            if (jQuery$$0.isFunction(data)) {
                type =
                    type || callback;
                callback = data;
                data = undefined
            }
            return jQuery$$0.ajax({type: method, url: url, data: data, success: callback, dataType: type})
        }
    });
    jQuery$$0.extend({
        getScript: function (url, callback) {
            return jQuery$$0.get(url, undefined, callback, "script")
        },
        getJSON: function (url, data, callback) {
            return jQuery$$0.get(url, data, callback, "json")
        },
        ajaxSetup: function (target, settings) {
            if (settings)ajaxExtend(target, jQuery$$0.ajaxSettings); else {
                settings = target;
                target = jQuery$$0.ajaxSettings
            }
            ajaxExtend(target, settings);
            return target
        },
        ajaxSettings: {
            url: ajaxLocation,
            isLocal: rlocalProtocol.test(ajaxLocParts[1]),
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset\x3dUTF-8",
            processData: true,
            async: true,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": allTypes
            },
            contents: {xml: /xml/, html: /html/, json: /json/},
            responseFields: {xml: "responseXML", text: "responseText"},
            converters: {
                "* text": window.String, "text html": true, "text json": jQuery$$0.parseJSON,
                "text xml": jQuery$$0.parseXML
            },
            flatOptions: {context: true, url: true}
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function (url, options) {
            function done(status, nativeStatusText, responses, headers) {
                if (state === 2)return;
                state = 2;
                if (timeoutTimer)clearTimeout(timeoutTimer);
                transport = undefined;
                responseHeadersString = headers || "";
                jqXHR.readyState = status > 0 ? 4 : 0;
                var isSuccess;
                var success;
                var error;
                var statusText = nativeStatusText;
                var response = responses ?
                    ajaxHandleResponses(s, jqXHR, responses) : undefined;
                var lastModified;
                var etag;
                if (status >= 200 && status < 300 || status === 304) {
                    if (s.ifModified) {
                        if (lastModified = jqXHR.getResponseHeader("Last-Modified"))jQuery$$0.lastModified[ifModifiedKey] = lastModified;
                        if (etag = jqXHR.getResponseHeader("Etag"))jQuery$$0.etag[ifModifiedKey] = etag
                    }
                    if (status === 304) {
                        statusText = "notmodified";
                        isSuccess = true
                    } else try {
                        success = ajaxConvert(s, response);
                        statusText = "success";
                        isSuccess = true
                    } catch (e) {
                        statusText = "parsererror";
                        error = e
                    }
                } else {
                    error =
                        statusText;
                    if (!statusText || status) {
                        statusText = "error";
                        if (status < 0)status = 0
                    }
                }
                jqXHR.status = status;
                jqXHR.statusText = "" + (nativeStatusText || statusText);
                if (isSuccess)deferred.resolveWith(callbackContext, [success, statusText, jqXHR]); else deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals)globalEventContext.trigger("ajax" + (isSuccess ? "Success" : "Error"), [jqXHR, s, isSuccess ? success : error]);
                completeDeferred.fireWith(callbackContext, [jqXHR,
                    statusText]);
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
                    if (!--jQuery$$0.active)jQuery$$0.event.trigger("ajaxStop")
                }
            }

            if (typeof url === "object") {
                options = url;
                url = undefined
            }
            options = options || {};
            var s = jQuery$$0.ajaxSetup({}, options);
            var callbackContext = s.context || s;
            var globalEventContext = callbackContext !== s && (callbackContext.nodeType || callbackContext instanceof jQuery$$0) ? jQuery$$0(callbackContext) : jQuery$$0.event;
            var deferred = jQuery$$0.Deferred();
            var completeDeferred = jQuery$$0.Callbacks("once memory");
            var statusCode = s.statusCode || {};
            var ifModifiedKey;
            var requestHeaders = {};
            var requestHeadersNames = {};
            var responseHeadersString;
            var responseHeaders;
            var transport;
            var timeoutTimer;
            var parts;
            var state = 0;
            var fireGlobals;
            var i;
            var jqXHR = {
                readyState: 0, setRequestHeader: function (name, value) {
                    if (!state) {
                        var lname = name.toLowerCase();
                        name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                        requestHeaders[name] = value
                    }
                    return this
                }, getAllResponseHeaders: function () {
                    return state === 2 ? responseHeadersString : null
                },
                getResponseHeader: function (key) {
                    var match;
                    if (state === 2) {
                        if (!responseHeaders)for (responseHeaders = {}; match = rheaders.exec(responseHeadersString);)responseHeaders[match[1].toLowerCase()] = match[2];
                        match = responseHeaders[key.toLowerCase()]
                    }
                    return match === undefined ? null : match
                }, overrideMimeType: function (type) {
                    if (!state)s.mimeType = type;
                    return this
                }, abort: function (statusText) {
                    statusText = statusText || "abort";
                    if (transport)transport.abort(statusText);
                    done(0, statusText);
                    return this
                }
            };
            deferred.promise(jqXHR);
            jqXHR.success =
                jqXHR.done;
            jqXHR.error = jqXHR.fail;
            jqXHR.complete = completeDeferred.add;
            jqXHR.statusCode = function (map) {
                if (map) {
                    var tmp;
                    if (state < 2)for (tmp in map)statusCode[tmp] = [statusCode[tmp], map[tmp]]; else {
                        tmp = map[jqXHR.status];
                        jqXHR.then(tmp, tmp)
                    }
                }
                return this
            };
            s.url = ((url || s.url) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");
            s.dataTypes = jQuery$$0.trim(s.dataType || "*").toLowerCase().split(rspacesAjax);
            if (s.crossDomain == null) {
                parts = rurl.exec(s.url.toLowerCase());
                s.crossDomain = !!(parts && (parts[1] !=
                ajaxLocParts[1] || parts[2] != ajaxLocParts[2] || (parts[3] || (parts[1] === "http:" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443))))
            }
            if (s.data && s.processData && typeof s.data !== "string")s.data = jQuery$$0.param(s.data, s.traditional);
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            if (state === 2)return false;
            fireGlobals = s.global;
            s.type = s.type.toUpperCase();
            s.hasContent = !rnoContent.test(s.type);
            if (fireGlobals && jQuery$$0.active++ === 0)jQuery$$0.event.trigger("ajaxStart");
            if (!s.hasContent) {
                if (s.data) {
                    s.url +=
                        (rquery.test(s.url) ? "\x26" : "?") + s.data;
                    delete s.data
                }
                ifModifiedKey = s.url;
                if (s.cache === false) {
                    var ts = jQuery$$0.now();
                    var ret = s.url.replace(rts, "$1_\x3d" + ts);
                    s.url = ret + (ret === s.url ? (rquery.test(s.url) ? "\x26" : "?") + "_\x3d" + ts : "")
                }
            }
            if (s.data && s.hasContent && s.contentType !== false || options.contentType)jqXHR.setRequestHeader("Content-Type", s.contentType);
            if (s.ifModified) {
                ifModifiedKey = ifModifiedKey || s.url;
                if (jQuery$$0.lastModified[ifModifiedKey])jqXHR.setRequestHeader("If-Modified-Since", jQuery$$0.lastModified[ifModifiedKey]);
                if (jQuery$$0.etag[ifModifiedKey])jqXHR.setRequestHeader("If-None-Match", jQuery$$0.etag[ifModifiedKey])
            }
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q\x3d0.01" : "") : s.accepts["*"]);
            for (i in s.headers)jqXHR.setRequestHeader(i, s.headers[i]);
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
                jqXHR.abort();
                return false
            }
            for (i in{success: 1, error: 1, complete: 1})jqXHR[i](s[i]);
            transport =
                inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            if (!transport)done(-1, "No Transport"); else {
                jqXHR.readyState = 1;
                if (fireGlobals)globalEventContext.trigger("ajaxSend", [jqXHR, s]);
                if (s.async && s.timeout > 0)timeoutTimer = setTimeout(function () {
                    jqXHR.abort("timeout")
                }, s.timeout);
                try {
                    state = 1;
                    transport.send(requestHeaders, done)
                } catch (e$$0) {
                    if (state < 2)done(-1, e$$0); else throw e$$0;
                }
            }
            return jqXHR
        },
        param: function (a, traditional) {
            var s = [];
            var add = function (key, value) {
                value = jQuery$$0.isFunction(value) ? value() :
                    value;
                s[s.length] = encodeURIComponent(key) + "\x3d" + encodeURIComponent(value)
            };
            if (traditional === undefined)traditional = jQuery$$0.ajaxSettings.traditional;
            if (jQuery$$0.isArray(a) || a.jquery && !jQuery$$0.isPlainObject(a))jQuery$$0.each(a, function () {
                add(this.name, this.value)
            }); else for (var prefix in a)buildParams(prefix, a[prefix], traditional, add);
            return s.join("\x26").replace(r20, "+")
        }
    });
    jQuery$$0.extend({active: 0, lastModified: {}, etag: {}});
    var jsc = jQuery$$0.now();
    var jsre = /(\=)\?(&|$)|\?\?/i;
    jQuery$$0.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            return jQuery$$0.expando + "_" + jsc++
        }
    });
    jQuery$$0.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
        var inspectData = typeof s.data === "string" && /^application\/x\-www\-form\-urlencoded/.test(s.contentType);
        if (s.dataTypes[0] === "jsonp" || s.jsonp !== false && (jsre.test(s.url) || inspectData && jsre.test(s.data))) {
            var responseContainer;
            var jsonpCallback = s.jsonpCallback = jQuery$$0.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
            var previous = window[jsonpCallback];
            var url =
                s.url;
            var data = s.data;
            var replace = "$1" + jsonpCallback + "$2";
            if (s.jsonp !== false) {
                url = url.replace(jsre, replace);
                if (s.url === url) {
                    if (inspectData)data = data.replace(jsre, replace);
                    if (s.data === data)url += (/\?/.test(url) ? "\x26" : "?") + s.jsonp + "\x3d" + jsonpCallback
                }
            }
            s.url = url;
            s.data = data;
            window[jsonpCallback] = function (response) {
                responseContainer = [response]
            };
            jqXHR.always(function () {
                window[jsonpCallback] = previous;
                if (responseContainer && jQuery$$0.isFunction(previous))window[jsonpCallback](responseContainer[0])
            });
            s.converters["script json"] =
                function () {
                    if (!responseContainer)jQuery$$0.error(jsonpCallback + " was not called");
                    return responseContainer[0]
                };
            s.dataTypes[0] = "json";
            return "script"
        }
    });
    jQuery$$0.ajaxSetup({
        accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
        contents: {script: /javascript|ecmascript/},
        converters: {
            "text script": function (text) {
                jQuery$$0.globalEval(text);
                return text
            }
        }
    });
    jQuery$$0.ajaxPrefilter("script", function (s) {
        if (s.cache === undefined)s.cache = false;
        if (s.crossDomain) {
            s.type =
                "GET";
            s.global = false
        }
    });
    jQuery$$0.ajaxTransport("script", function (s) {
        if (s.crossDomain) {
            var script;
            var head = document$$0.head || document$$0.getElementsByTagName("head")[0] || document$$0.documentElement;
            return {
                send: function (_, callback) {
                    script = document$$0.createElement("script");
                    script.async = "async";
                    if (s.scriptCharset)script.charset = s.scriptCharset;
                    script.src = s.url;
                    script.onload = script.onreadystatechange = function (_, isAbort) {
                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {
                            script.onload =
                                script.onreadystatechange = null;
                            if (head && script.parentNode)head.removeChild(script);
                            script = undefined;
                            if (!isAbort)callback(200, "success")
                        }
                    };
                    head.insertBefore(script, head.firstChild)
                }, abort: function () {
                    if (script)script.onload(0, 1)
                }
            }
        }
    });
    var xhrOnUnloadAbort = window.ActiveXObject ? function () {
        for (var key in xhrCallbacks)xhrCallbacks[key](0, 1)
    } : false;
    var xhrId = 0;
    var xhrCallbacks;
    jQuery$$0.ajaxSettings.xhr = window.ActiveXObject ? function () {
        return !this.isLocal && createStandardXHR() || createActiveXHR()
    } : createStandardXHR;
    (function (xhr) {
        jQuery$$0.extend(jQuery$$0.support, {ajax: !!xhr, cors: !!xhr && "withCredentials"in xhr})
    })(jQuery$$0.ajaxSettings.xhr());
    if (jQuery$$0.support.ajax)jQuery$$0.ajaxTransport(function (s) {
        if (!s.crossDomain || jQuery$$0.support.cors) {
            var callback;
            return {
                send: function (headers, complete) {
                    var xhr = s.xhr();
                    var handle;
                    var i;
                    if (s.username)xhr.open(s.type, s.url, s.async, s.username, s.password); else xhr.open(s.type, s.url, s.async);
                    if (s.xhrFields)for (i in s.xhrFields)xhr[i] = s.xhrFields[i];
                    if (s.mimeType && xhr.overrideMimeType)xhr.overrideMimeType(s.mimeType);
                    if (!s.crossDomain && !headers["X-Requested-With"])headers["X-Requested-With"] = "XMLHttpRequest";
                    try {
                        for (i in headers)xhr.setRequestHeader(i, headers[i])
                    } catch (_$$1) {
                    }
                    xhr.send(s.hasContent && s.data || null);
                    callback = function (_, isAbort) {
                        var status;
                        var statusText;
                        var responseHeaders;
                        var responses;
                        var xml;
                        try {
                            if (callback && (isAbort || xhr.readyState === 4)) {
                                callback = undefined;
                                if (handle) {
                                    xhr.onreadystatechange = jQuery$$0.noop;
                                    if (xhrOnUnloadAbort)delete xhrCallbacks[handle]
                                }
                                if (isAbort) {
                                    if (xhr.readyState !== 4)xhr.abort()
                                } else {
                                    status =
                                        xhr.status;
                                    responseHeaders = xhr.getAllResponseHeaders();
                                    responses = {};
                                    xml = xhr.responseXML;
                                    if (xml && xml.documentElement)responses.xml = xml;
                                    try {
                                        responses.text = xhr.responseText
                                    } catch (_$$0) {
                                    }
                                    try {
                                        statusText = xhr.statusText
                                    } catch (e) {
                                        statusText = ""
                                    }
                                    if (!status && s.isLocal && !s.crossDomain)status = responses.text ? 200 : 404; else if (status === 1223)status = 204
                                }
                            }
                        } catch (firefoxAccessException) {
                            if (!isAbort)complete(-1, firefoxAccessException)
                        }
                        if (responses)complete(status, statusText, responses, responseHeaders)
                    };
                    if (!s.async || xhr.readyState ===
                        4)callback(); else {
                        handle = ++xhrId;
                        if (xhrOnUnloadAbort) {
                            if (!xhrCallbacks) {
                                xhrCallbacks = {};
                                jQuery$$0(window).unload(xhrOnUnloadAbort)
                            }
                            xhrCallbacks[handle] = callback
                        }
                        xhr.onreadystatechange = callback
                    }
                }, abort: function () {
                    if (callback)callback(0, 1)
                }
            }
        }
    });
    var elemdisplay = {};
    var iframe;
    var iframeDoc;
    var rfxtypes = /^(?:toggle|show|hide)$/;
    var rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i;
    var timerId;
    var fxAttrs = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft",
        "paddingRight"], ["opacity"]];
    var fxNow;
    jQuery$$0.fn.extend({
        show: function (speed, easing, callback) {
            var elem;
            var display;
            if (speed || speed === 0)return this.animate(genFx("show", 3), speed, easing, callback); else {
                var i = 0;
                for (var j = this.length; i < j; i++) {
                    elem = this[i];
                    if (elem.style) {
                        display = elem.style.display;
                        if (!jQuery$$0._data(elem, "olddisplay") && display === "none")display = elem.style.display = "";
                        if (display === "" && jQuery$$0.css(elem, "display") === "none" || !jQuery$$0.contains(elem.ownerDocument.documentElement, elem))jQuery$$0._data(elem,
                            "olddisplay", defaultDisplay(elem.nodeName))
                    }
                }
                for (i = 0; i < j; i++) {
                    elem = this[i];
                    if (elem.style) {
                        display = elem.style.display;
                        if (display === "" || display === "none")elem.style.display = jQuery$$0._data(elem, "olddisplay") || ""
                    }
                }
                return this
            }
        }, hide: function (speed, easing, callback) {
            if (speed || speed === 0)return this.animate(genFx("hide", 3), speed, easing, callback); else {
                var elem;
                var display;
                var i = 0;
                for (var j = this.length; i < j; i++) {
                    elem = this[i];
                    if (elem.style) {
                        display = jQuery$$0.css(elem, "display");
                        if (display !== "none" && !jQuery$$0._data(elem,
                                "olddisplay"))jQuery$$0._data(elem, "olddisplay", display)
                    }
                }
                for (i = 0; i < j; i++)if (this[i].style)this[i].style.display = "none";
                return this
            }
        }, _toggle: jQuery$$0.fn.toggle, toggle: function (fn, fn2, callback) {
            var bool = typeof fn === "boolean";
            if (jQuery$$0.isFunction(fn) && jQuery$$0.isFunction(fn2))this._toggle.apply(this, arguments); else if (fn == null || bool)this.each(function () {
                var state = bool ? fn : jQuery$$0(this).is(":hidden");
                jQuery$$0(this)[state ? "show" : "hide"]()
            }); else this.animate(genFx("toggle", 3), fn, fn2, callback);
            return this
        }, fadeTo: function (speed, to, easing, callback) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback)
        }, animate: function (prop, speed, easing, callback) {
            function doAnimation() {
                if (optall.queue === false)jQuery$$0._mark(this);
                var opt = jQuery$$0.extend({}, optall);
                var isElement = this.nodeType === 1;
                var hidden = isElement && jQuery$$0(this).is(":hidden");
                var name;
                var val;
                var p;
                var e;
                var hooks;
                var replace;
                var parts;
                var start;
                var end;
                var unit;
                var method;
                opt.animatedProperties =
                {};
                for (p in prop) {
                    name = jQuery$$0.camelCase(p);
                    if (p !== name) {
                        prop[name] = prop[p];
                        delete prop[p]
                    }
                    if ((hooks = jQuery$$0.cssHooks[name]) && "expand"in hooks) {
                        replace = hooks.expand(prop[name]);
                        delete prop[name];
                        for (p in replace)if (!(p in prop))prop[p] = replace[p]
                    }
                }
                for (name in prop) {
                    val = prop[name];
                    if (jQuery$$0.isArray(val)) {
                        opt.animatedProperties[name] = val[1];
                        val = prop[name] = val[0]
                    } else opt.animatedProperties[name] = opt.specialEasing && opt.specialEasing[name] || opt.easing || "swing";
                    if (val === "hide" && hidden || val === "show" && !hidden)return opt.complete.call(this);
                    if (isElement && (name === "height" || name === "width")) {
                        opt.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                        if (jQuery$$0.css(this, "display") === "inline" && jQuery$$0.css(this, "float") === "none")if (!jQuery$$0.support.inlineBlockNeedsLayout || defaultDisplay(this.nodeName) === "inline")this.style.display = "inline-block"; else this.style.zoom = 1
                    }
                }
                if (opt.overflow != null)this.style.overflow = "hidden";
                for (p in prop) {
                    e = new jQuery$$0.fx(this, opt, p);
                    val = prop[p];
                    if (rfxtypes.test(val)) {
                        method = jQuery$$0._data(this, "toggle" + p) || (val === "toggle" ? hidden ? "show" : "hide" : 0);
                        if (method) {
                            jQuery$$0._data(this, "toggle" + p, method === "show" ? "hide" : "show");
                            e[method]()
                        } else e[val]()
                    } else {
                        parts = rfxnum.exec(val);
                        start = e.cur();
                        if (parts) {
                            end = parseFloat(parts[2]);
                            unit = parts[3] || (jQuery$$0.cssNumber[p] ? "" : "px");
                            if (unit !== "px") {
                                jQuery$$0.style(this, p, (end || 1) + unit);
                                start = (end || 1) / e.cur() * start;
                                jQuery$$0.style(this, p, start + unit)
                            }
                            if (parts[1])end = (parts[1] === "-\x3d" ? -1 : 1) * end + start;
                            e.custom(start,
                                end, unit)
                        } else e.custom(start, val, "")
                    }
                }
                return true
            }

            var optall = jQuery$$0.speed(speed, easing, callback);
            if (jQuery$$0.isEmptyObject(prop))return this.each(optall.complete, [false]);
            prop = jQuery$$0.extend({}, prop);
            return optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
        }, stop: function (type, clearQueue, gotoEnd) {
            if (typeof type !== "string") {
                gotoEnd = clearQueue;
                clearQueue = type;
                type = undefined
            }
            if (clearQueue && type !== false)this.queue(type || "fx", []);
            return this.each(function () {
                function stopQueue(elem,
                                   data, index) {
                    var hooks = data[index];
                    jQuery$$0.removeData(elem, index, true);
                    hooks.stop(gotoEnd)
                }

                var index$$0;
                var hadTimers = false;
                var timers = jQuery$$0.timers;
                var data$$0 = jQuery$$0._data(this);
                if (!gotoEnd)jQuery$$0._unmark(true, this);
                if (type == null)for (index$$0 in data$$0) {
                    if (data$$0[index$$0] && data$$0[index$$0].stop && index$$0.indexOf(".run") === index$$0.length - 4)stopQueue(this, data$$0, index$$0)
                } else if (data$$0[index$$0 = type + ".run"] && data$$0[index$$0].stop)stopQueue(this, data$$0, index$$0);
                for (index$$0 = timers.length; index$$0--;)if (timers[index$$0].elem ===
                    this && (type == null || timers[index$$0].queue === type)) {
                    if (gotoEnd)timers[index$$0](true); else timers[index$$0].saveState();
                    hadTimers = true;
                    timers.splice(index$$0, 1)
                }
                if (!(gotoEnd && hadTimers))jQuery$$0.dequeue(this, type)
            })
        }
    });
    jQuery$$0.each({
        slideDown: genFx("show", 1),
        slideUp: genFx("hide", 1),
        slideToggle: genFx("toggle", 1),
        fadeIn: {opacity: "show"},
        fadeOut: {opacity: "hide"},
        fadeToggle: {opacity: "toggle"}
    }, function (name, props) {
        jQuery$$0.fn[name] = function (speed, easing, callback) {
            return this.animate(props, speed, easing,
                callback)
        }
    });
    jQuery$$0.extend({
        speed: function (speed, easing, fn) {
            var opt = speed && typeof speed === "object" ? jQuery$$0.extend({}, speed) : {
                complete: fn || !fn && easing || jQuery$$0.isFunction(speed) && speed,
                duration: speed,
                easing: fn && easing || easing && !jQuery$$0.isFunction(easing) && easing
            };
            opt.duration = jQuery$$0.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery$$0.fx.speeds ? jQuery$$0.fx.speeds[opt.duration] : jQuery$$0.fx.speeds._default;
            if (opt.queue == null || opt.queue === true)opt.queue = "fx";
            opt.old =
                opt.complete;
            opt.complete = function (noUnmark) {
                if (jQuery$$0.isFunction(opt.old))opt.old.call(this);
                if (opt.queue)jQuery$$0.dequeue(this, opt.queue); else if (noUnmark !== false)jQuery$$0._unmark(this)
            };
            return opt
        }, easing: {
            linear: function (p) {
                return p
            }, swing: function (p) {
                return -Math.cos(p * Math.PI) / 2 + 0.5
            }
        }, timers: [], fx: function (elem, options, prop) {
            this.options = options;
            this.elem = elem;
            this.prop = prop;
            options.orig = options.orig || {}
        }
    });
    jQuery$$0.fx.prototype = {
        update: function () {
            if (this.options.step)this.options.step.call(this.elem,
                this.now, this);
            (jQuery$$0.fx.step[this.prop] || jQuery$$0.fx.step._default)(this)
        }, cur: function () {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null))return this.elem[this.prop];
            var parsed;
            var r = jQuery$$0.css(this.elem, this.prop);
            return isNaN(parsed = parseFloat(r)) ? !r || r === "auto" ? 0 : r : parsed
        }, custom: function (from, to, unit) {
            function t(gotoEnd) {
                return self.step(gotoEnd)
            }

            var self = this;
            var fx = jQuery$$0.fx;
            this.startTime = fxNow || createFxNow();
            this.end = to;
            this.now = this.start = from;
            this.pos = this.state = 0;
            this.unit = unit || this.unit || (jQuery$$0.cssNumber[this.prop] ? "" : "px");
            t.queue = this.options.queue;
            t.elem = this.elem;
            t.saveState = function () {
                if (jQuery$$0._data(self.elem, "fxshow" + self.prop) === undefined)if (self.options.hide)jQuery$$0._data(self.elem, "fxshow" + self.prop, self.start); else if (self.options.show)jQuery$$0._data(self.elem, "fxshow" + self.prop, self.end)
            };
            if (t() && jQuery$$0.timers.push(t) && !timerId)timerId = setInterval(fx.tick, fx.interval)
        }, show: function () {
            var dataShow = jQuery$$0._data(this.elem,
                "fxshow" + this.prop);
            this.options.orig[this.prop] = dataShow || jQuery$$0.style(this.elem, this.prop);
            this.options.show = true;
            if (dataShow !== undefined)this.custom(this.cur(), dataShow); else this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
            jQuery$$0(this.elem).show()
        }, hide: function () {
            this.options.orig[this.prop] = jQuery$$0._data(this.elem, "fxshow" + this.prop) || jQuery$$0.style(this.elem, this.prop);
            this.options.hide = true;
            this.custom(this.cur(), 0)
        }, step: function (gotoEnd) {
            var p;
            var n;
            var complete;
            var t = fxNow || createFxNow();
            var done = true;
            var elem = this.elem;
            var options = this.options;
            if (gotoEnd || t >= options.duration + this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                options.animatedProperties[this.prop] = true;
                for (p in options.animatedProperties)if (options.animatedProperties[p] !== true)done = false;
                if (done) {
                    if (options.overflow != null && !jQuery$$0.support.shrinkWrapBlocks)jQuery$$0.each(["", "X", "Y"], function (index, value) {
                        elem.style["overflow" + value] = options.overflow[index]
                    });
                    if (options.hide)jQuery$$0(elem).hide();
                    if (options.hide || options.show)for (p in options.animatedProperties) {
                        jQuery$$0.style(elem, p, options.orig[p]);
                        jQuery$$0.removeData(elem, "fxshow" + p, true);
                        jQuery$$0.removeData(elem, "toggle" + p, true)
                    }
                    complete = options.complete;
                    if (complete) {
                        options.complete = false;
                        complete.call(elem)
                    }
                }
                return false
            } else {
                if (options.duration == Infinity)this.now = t; else {
                    n = t - this.startTime;
                    this.state = n / options.duration;
                    this.pos = jQuery$$0.easing[options.animatedProperties[this.prop]](this.state, n, 0, 1, options.duration);
                    this.now = this.start +
                    (this.end - this.start) * this.pos
                }
                this.update()
            }
            return true
        }
    };
    jQuery$$0.extend(jQuery$$0.fx, {
        tick: function () {
            var timer;
            var timers = jQuery$$0.timers;
            for (var i = 0; i < timers.length; i++) {
                timer = timers[i];
                if (!timer() && timers[i] === timer)timers.splice(i--, 1)
            }
            if (!timers.length)jQuery$$0.fx.stop()
        }, interval: 13, stop: function () {
            clearInterval(timerId);
            timerId = null
        }, speeds: {slow: 600, fast: 200, _default: 400}, step: {
            opacity: function (fx) {
                jQuery$$0.style(fx.elem, "opacity", fx.now)
            }, _default: function (fx) {
                if (fx.elem.style && fx.elem.style[fx.prop] !=
                    null)fx.elem.style[fx.prop] = fx.now + fx.unit; else fx.elem[fx.prop] = fx.now
            }
        }
    });
    jQuery$$0.each(fxAttrs.concat.apply([], fxAttrs), function (i, prop) {
        if (prop.indexOf("margin"))jQuery$$0.fx.step[prop] = function (fx) {
            jQuery$$0.style(fx.elem, prop, Math.max(0, fx.now) + fx.unit)
        }
    });
    if (jQuery$$0.expr && jQuery$$0.expr.filters)jQuery$$0.expr.filters.animated = function (elem) {
        return jQuery$$0.grep(jQuery$$0.timers, function (fn) {
            return elem === fn.elem
        }).length
    };
    var getOffset;
    var rtable = /^t(?:able|d|h)$/i;
    var rroot = /^(?:body|html)$/i;
    if ("getBoundingClientRect"in document$$0.documentElement)getOffset = function (elem, doc, docElem, box) {
        try {
            box = elem.getBoundingClientRect()
        } catch (e) {
        }
        if (!box || !jQuery$$0.contains(docElem, elem))return box ? {top: box.top, left: box.left} : {top: 0, left: 0};
        var body = doc.body;
        var win = getWindow(doc);
        var clientTop = docElem.clientTop || body.clientTop || 0;
        var clientLeft = docElem.clientLeft || body.clientLeft || 0;
        var scrollTop = win.pageYOffset || jQuery$$0.support.boxModel && docElem.scrollTop || body.scrollTop;
        var scrollLeft = win.pageXOffset ||
            jQuery$$0.support.boxModel && docElem.scrollLeft || body.scrollLeft;
        var top = box.top + scrollTop - clientTop;
        var left = box.left + scrollLeft - clientLeft;
        return {top: top, left: left}
    }; else getOffset = function (elem, doc, docElem) {
        var computedStyle;
        var offsetParent = elem.offsetParent;
        var prevOffsetParent = elem;
        var body = doc.body;
        var defaultView = doc.defaultView;
        var prevComputedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
        var top = elem.offsetTop;
        for (var left = elem.offsetLeft; (elem = elem.parentNode) &&
        elem !== body && elem !== docElem;) {
            if (jQuery$$0.support.fixedPosition && prevComputedStyle.position === "fixed")break;
            computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
            top -= elem.scrollTop;
            left -= elem.scrollLeft;
            if (elem === offsetParent) {
                top += elem.offsetTop;
                left += elem.offsetLeft;
                if (jQuery$$0.support.doesNotAddBorder && !(jQuery$$0.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName))) {
                    top += parseFloat(computedStyle.borderTopWidth) || 0;
                    left += parseFloat(computedStyle.borderLeftWidth) ||
                    0
                }
                prevOffsetParent = offsetParent;
                offsetParent = elem.offsetParent
            }
            if (jQuery$$0.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible") {
                top += parseFloat(computedStyle.borderTopWidth) || 0;
                left += parseFloat(computedStyle.borderLeftWidth) || 0
            }
            prevComputedStyle = computedStyle
        }
        if (prevComputedStyle.position === "relative" || prevComputedStyle.position === "static") {
            top += body.offsetTop;
            left += body.offsetLeft
        }
        if (jQuery$$0.support.fixedPosition && prevComputedStyle.position === "fixed") {
            top += Math.max(docElem.scrollTop,
                body.scrollTop);
            left += Math.max(docElem.scrollLeft, body.scrollLeft)
        }
        return {top: top, left: left}
    };
    jQuery$$0.fn.offset = function (options) {
        if (arguments.length)return options === undefined ? this : this.each(function (i) {
            jQuery$$0.offset.setOffset(this, options, i)
        });
        var elem = this[0];
        var doc = elem && elem.ownerDocument;
        if (!doc)return null;
        if (elem === doc.body)return jQuery$$0.offset.bodyOffset(elem);
        return getOffset(elem, doc, doc.documentElement)
    };
    jQuery$$0.offset = {
        bodyOffset: function (body) {
            var top = body.offsetTop;
            var left =
                body.offsetLeft;
            if (jQuery$$0.support.doesNotIncludeMarginInBodyOffset) {
                top += parseFloat(jQuery$$0.css(body, "marginTop")) || 0;
                left += parseFloat(jQuery$$0.css(body, "marginLeft")) || 0
            }
            return {top: top, left: left}
        }, setOffset: function (elem, options, i) {
            var position = jQuery$$0.css(elem, "position");
            if (position === "static")elem.style.position = "relative";
            var curElem = jQuery$$0(elem);
            var curOffset = curElem.offset();
            var curCSSTop = jQuery$$0.css(elem, "top");
            var curCSSLeft = jQuery$$0.css(elem, "left");
            var calculatePosition = (position ===
                "absolute" || position === "fixed") && jQuery$$0.inArray("auto", [curCSSTop, curCSSLeft]) > -1;
            var props = {};
            var curPosition = {};
            var curTop;
            var curLeft;
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0
            }
            if (jQuery$$0.isFunction(options))options = options.call(elem, i, curOffset);
            if (options.top != null)props.top = options.top - curOffset.top + curTop;
            if (options.left != null)props.left = options.left - curOffset.left +
            curLeft;
            if ("using"in options)options.using.call(elem, props); else curElem.css(props)
        }
    };
    jQuery$$0.fn.extend({
        position: function () {
            if (!this[0])return null;
            var elem = this[0];
            var offsetParent = this.offsetParent();
            var offset = this.offset();
            var parentOffset = rroot.test(offsetParent[0].nodeName) ? {top: 0, left: 0} : offsetParent.offset();
            offset.top -= parseFloat(jQuery$$0.css(elem, "marginTop")) || 0;
            offset.left -= parseFloat(jQuery$$0.css(elem, "marginLeft")) || 0;
            parentOffset.top += parseFloat(jQuery$$0.css(offsetParent[0], "borderTopWidth")) ||
            0;
            parentOffset.left += parseFloat(jQuery$$0.css(offsetParent[0], "borderLeftWidth")) || 0;
            return {top: offset.top - parentOffset.top, left: offset.left - parentOffset.left}
        }, offsetParent: function () {
            return this.map(function () {
                for (var offsetParent = this.offsetParent || document$$0.body; offsetParent && !rroot.test(offsetParent.nodeName) && jQuery$$0.css(offsetParent, "position") === "static";)offsetParent = offsetParent.offsetParent;
                return offsetParent
            })
        }
    });
    jQuery$$0.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (method$$0,
                                                                                    prop) {
        var top = /Y/.test(prop);
        jQuery$$0.fn[method$$0] = function (val$$0) {
            return jQuery$$0.access(this, function (elem, method, val) {
                var win = getWindow(elem);
                if (val === undefined)return win ? prop in win ? win[prop] : jQuery$$0.support.boxModel && win.document.documentElement[method] || win.document.body[method] : elem[method];
                if (win)win.scrollTo(!top ? val : jQuery$$0(win).scrollLeft(), top ? val : jQuery$$0(win).scrollTop()); else elem[method] = val
            }, method$$0, val$$0, arguments.length, null)
        }
    });
    jQuery$$0.each({Height: "height", Width: "width"},
        function (name, type$$0) {
            var clientProp = "client" + name;
            var scrollProp = "scroll" + name;
            var offsetProp = "offset" + name;
            jQuery$$0.fn["inner" + name] = function () {
                var elem = this[0];
                return elem ? elem.style ? parseFloat(jQuery$$0.css(elem, type$$0, "padding")) : this[type$$0]() : null
            };
            jQuery$$0.fn["outer" + name] = function (margin) {
                var elem = this[0];
                return elem ? elem.style ? parseFloat(jQuery$$0.css(elem, type$$0, margin ? "margin" : "border")) : this[type$$0]() : null
            };
            jQuery$$0.fn[type$$0] = function (value$$0) {
                return jQuery$$0.access(this,
                    function (elem, type, value) {
                        var doc;
                        var docElemProp;
                        var orig;
                        var ret;
                        if (jQuery$$0.isWindow(elem)) {
                            doc = elem.document;
                            docElemProp = doc.documentElement[clientProp];
                            return jQuery$$0.support.boxModel && docElemProp || doc.body && doc.body[clientProp] || docElemProp
                        }
                        if (elem.nodeType === 9) {
                            doc = elem.documentElement;
                            if (doc[clientProp] >= doc[scrollProp])return doc[clientProp];
                            return Math.max(elem.body[scrollProp], doc[scrollProp], elem.body[offsetProp], doc[offsetProp])
                        }
                        if (value === undefined) {
                            orig = jQuery$$0.css(elem, type);
                            ret = parseFloat(orig);
                            return jQuery$$0.isNumeric(ret) ? ret : orig
                        }
                        jQuery$$0(elem).css(type, value)
                    }, type$$0, value$$0, arguments.length, null)
            }
        });
    window.jQuery = window.$ = jQuery$$0;
    if (typeof define === "function" && define.amd && define.amd.jQuery)define("jquery", [], function () {
        return jQuery$$0
    })
})(window);
var module$jplayer = {};
module$jquery;
(function (b$$1, f$$0) {
    b$$1.fn.jPlayer = function (a) {
        var c$$0 = "string" === typeof a;
        var d = Array.prototype.slice.call(arguments, 1);
        var e = this;
        a = !c$$0 && d.length ? b$$1.extend.apply(null, [!0, a].concat(d)) : a;
        if (c$$0 && "_" === a.charAt(0))return e;
        c$$0 ? this.each(function () {
            var c = b$$1.data(this, "jPlayer");
            var h = c && b$$1.isFunction(c[a]) ? c[a].apply(c, d) : c;
            if (h !== c && h !== f$$0)return e = h, !1
        }) : this.each(function () {
            var c = b$$1.data(this, "jPlayer");
            c ? c.option(a || {}) : b$$1.data(this, "jPlayer", new b$$1.jPlayer(a, this))
        });
        return e
    };
    b$$1.jPlayer = function (a, c) {
        if (arguments.length) {
            this.element = b$$1(c);
            this.options = b$$1.extend(!0, {}, this.options, a);
            var d = this;
            this.element.bind("remove.jPlayer", function () {
                d.destroy()
            });
            this._init()
        }
    };
    b$$1.jPlayer.emulateMethods = "load play pause";
    b$$1.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate";
    b$$1.jPlayer.emulateOptions = "muted volume";
    b$$1.jPlayer.reservedEvent = "ready flashreset resize repeat error warning";
    b$$1.jPlayer.event = {
        ready: "jPlayer_ready",
        flashreset: "jPlayer_flashreset",
        resize: "jPlayer_resize",
        repeat: "jPlayer_repeat",
        click: "jPlayer_click",
        error: "jPlayer_error",
        warning: "jPlayer_warning",
        loadstart: "jPlayer_loadstart",
        progress: "jPlayer_progress",
        suspend: "jPlayer_suspend",
        abort: "jPlayer_abort",
        emptied: "jPlayer_emptied",
        stalled: "jPlayer_stalled",
        play: "jPlayer_play",
        pause: "jPlayer_pause",
        loadedmetadata: "jPlayer_loadedmetadata",
        loadeddata: "jPlayer_loadeddata",
        waiting: "jPlayer_waiting",
        playing: "jPlayer_playing",
        canplay: "jPlayer_canplay",
        canplaythrough: "jPlayer_canplaythrough",
        seeking: "jPlayer_seeking",
        seeked: "jPlayer_seeked",
        timeupdate: "jPlayer_timeupdate",
        ended: "jPlayer_ended",
        ratechange: "jPlayer_ratechange",
        durationchange: "jPlayer_durationchange",
        volumechange: "jPlayer_volumechange"
    };
    b$$1.jPlayer.htmlEvent = "loadstart abort emptied stalled loadedmetadata loadeddata canplay canplaythrough ratechange".split(" ");
    b$$1.jPlayer.pause = function () {
        b$$1.each(b$$1.jPlayer.prototype.instances, function (a, c) {
            c.data("jPlayer").status.srcSet && c.jPlayer("pause")
        })
    };
    b$$1.jPlayer.timeFormat =
    {
        showHour: !1,
        showMin: !0,
        showSec: !0,
        padHour: !1,
        padMin: !0,
        padSec: !0,
        sepHour: ":",
        sepMin: ":",
        sepSec: ""
    };
    b$$1.jPlayer.convertTime = function (a) {
        var c = new Date(1E3 * a);
        var d = c.getUTCHours();
        a = c.getUTCMinutes();
        c = c.getUTCSeconds();
        d = b$$1.jPlayer.timeFormat.padHour && 10 > d ? "0" + d : d;
        a = b$$1.jPlayer.timeFormat.padMin && 10 > a ? "0" + a : a;
        c = b$$1.jPlayer.timeFormat.padSec && 10 > c ? "0" + c : c;
        return (b$$1.jPlayer.timeFormat.showHour ? d + b$$1.jPlayer.timeFormat.sepHour : "") + (b$$1.jPlayer.timeFormat.showMin ? a + b$$1.jPlayer.timeFormat.sepMin :
                "") + (b$$1.jPlayer.timeFormat.showSec ? c + b$$1.jPlayer.timeFormat.sepSec : "")
    };
    b$$1.jPlayer.uaBrowser = function (a) {
        a = a.toLowerCase();
        var c = /(opera)(?:.*version)?[ \/]([\w.]+)/;
        var b = /(msie) ([\w.]+)/;
        var e = /(mozilla)(?:.*? rv:([\w.]+))?/;
        a = /(webkit)[ \/]([\w.]+)/.exec(a) || c.exec(a) || b.exec(a) || 0 > a.indexOf("compatible") && e.exec(a) || [];
        return {browser: a[1] || "", version: a[2] || "0"}
    };
    b$$1.jPlayer.uaPlatform = function (a) {
        var b = a.toLowerCase();
        var d = /(android)/;
        var e = /(mobile)/;
        a = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(b) ||
        [];
        b = /(ipad|playbook)/.exec(b) || !e.exec(b) && d.exec(b) || [];
        a[1] && (a[1] = a[1].replace(/\s/g, "_"));
        return {platform: a[1] || "", tablet: b[1] || ""}
    };
    b$$1.jPlayer.browser = {};
    b$$1.jPlayer.platform = {};
    var i$$0 = b$$1.jPlayer.uaBrowser(navigator.userAgent);
    i$$0.browser && (b$$1.jPlayer.browser[i$$0.browser] = !0, b$$1.jPlayer.browser.version = i$$0.version);
    i$$0 = b$$1.jPlayer.uaPlatform(navigator.userAgent);
    i$$0.platform && (b$$1.jPlayer.platform[i$$0.platform] = !0, b$$1.jPlayer.platform.mobile = !i$$0.tablet, b$$1.jPlayer.platform.tablet = !!i$$0.tablet);
    b$$1.jPlayer.prototype = {
        count: 0,
        version: {script: "2.2.0", needFlash: "2.2.0", flash: "unknown"},
        options: {
            swfPath: "js",
            solution: "html, flash",
            supplied: "mp3",
            preload: "metadata",
            volume: 0.8,
            muted: !1,
            wmode: "opaque",
            backgroundColor: "#000000",
            cssSelectorAncestor: "#jp_container_1",
            cssSelector: {
                videoPlay: ".jp-video-play",
                play: ".jp-play",
                pause: ".jp-pause",
                stop: ".jp-stop",
                seekBar: ".jp-seek-bar",
                playBar: ".jp-play-bar",
                mute: ".jp-mute",
                unmute: ".jp-unmute",
                volumeBar: ".jp-volume-bar",
                volumeBarValue: ".jp-volume-bar-value",
                volumeMax: ".jp-volume-max",
                currentTime: ".jp-current-time",
                duration: ".jp-duration",
                fullScreen: ".jp-full-screen",
                restoreScreen: ".jp-restore-screen",
                repeat: ".jp-repeat",
                repeatOff: ".jp-repeat-off",
                gui: ".jp-gui",
                noSolution: ".jp-no-solution"
            },
            fullScreen: !1,
            autohide: {restored: !1, full: !0, fadeIn: 200, fadeOut: 600, hold: 1E3},
            loop: !1,
            repeat: function (a) {
                a.jPlayer.options.loop ? b$$1(this).unbind(".jPlayerRepeat").bind(b$$1.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function () {
                    b$$1(this).jPlayer("play")
                }) : b$$1(this).unbind(".jPlayerRepeat")
            },
            nativeVideoControls: {},
            noFullScreen: {
                msie: /msie [0-6]/,
                ipad: /ipad.*?os [0-4]/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android [0-3](?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                webos: /webos/
            },
            noVolume: {
                ipad: /ipad/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android(?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                webos: /webos/,
                playbook: /playbook/
            },
            verticalVolume: !1,
            idPrefix: "jp",
            noConflict: "jQuery",
            emulateHtml: !1,
            errorAlerts: !1,
            warningAlerts: !1
        },
        optionsAudio: {
            size: {width: "0px", height: "0px", cssClass: ""},
            sizeFull: {width: "0px", height: "0px", cssClass: ""}
        },
        optionsVideo: {
            size: {width: "480px", height: "270px", cssClass: "jp-video-270p"},
            sizeFull: {width: "100%", height: "100%", cssClass: "jp-video-full"}
        },
        instances: {},
        status: {
            src: "",
            media: {},
            paused: !0,
            format: {},
            formatType: "",
            waitForPlay: !0,
            waitForLoad: !0,
            srcSet: !1,
            video: !1,
            seekPercent: 0,
            currentPercentRelative: 0,
            currentPercentAbsolute: 0,
            currentTime: 0,
            duration: 0,
            readyState: 0,
            networkState: 0,
            playbackRate: 1,
            ended: 0
        },
        internal: {ready: !1},
        solution: {html: !0, flash: !0},
        format: {
            mp3: {codec: 'audio/mpeg; codecs\x3d"mp3"', flashCanPlay: !0, media: "audio"},
            m4a: {codec: 'audio/mp4; codecs\x3d"mp4a.40.2"', flashCanPlay: !0, media: "audio"},
            oga: {codec: 'audio/ogg; codecs\x3d"vorbis"', flashCanPlay: !1, media: "audio"},
            wav: {codec: 'audio/wav; codecs\x3d"1"', flashCanPlay: !1, media: "audio"},
            webma: {codec: 'audio/webm; codecs\x3d"vorbis"', flashCanPlay: !1, media: "audio"},
            fla: {
                codec: "audio/x-flv", flashCanPlay: !0,
                media: "audio"
            },
            rtmpa: {codec: 'audio/rtmp; codecs\x3d"rtmp"', flashCanPlay: !0, media: "audio"},
            m4v: {codec: 'video/mp4; codecs\x3d"avc1.42E01E, mp4a.40.2"', flashCanPlay: !0, media: "video"},
            ogv: {codec: 'video/ogg; codecs\x3d"theora, vorbis"', flashCanPlay: !1, media: "video"},
            webmv: {codec: 'video/webm; codecs\x3d"vorbis, vp8"', flashCanPlay: !1, media: "video"},
            flv: {codec: "video/x-flv", flashCanPlay: !0, media: "video"},
            rtmpv: {codec: 'video/rtmp; codecs\x3d"rtmp"', flashCanPlay: !0, media: "video"}
        },
        _init: function () {
            var a$$0 =
                this;
            this.element.empty();
            this.status = b$$1.extend({}, this.status);
            this.internal = b$$1.extend({}, this.internal);
            this.internal.domNode = this.element.get(0);
            this.formats = [];
            this.solutions = [];
            this.require = {};
            this.htmlElement = {};
            this.html = {};
            this.html.audio = {};
            this.html.video = {};
            this.flash = {};
            this.css = {};
            this.css.cs = {};
            this.css.jq = {};
            this.ancestorJq = [];
            this.options.volume = this._limitValue(this.options.volume, 0, 1);
            b$$1.each(this.options.supplied.toLowerCase().split(","), function (c, d) {
                var e = d.replace(/^\s+|\s+$/g,
                    "");
                if (a$$0.format[e]) {
                    var f = false;
                    b$$1.each(a$$0.formats, function (a, b) {
                        if (e === b) {
                            f = true;
                            return false
                        }
                    });
                    f || a$$0.formats.push(e)
                }
            });
            b$$1.each(this.options.solution.toLowerCase().split(","), function (c, d) {
                var e = d.replace(/^\s+|\s+$/g, "");
                if (a$$0.solution[e]) {
                    var f = false;
                    b$$1.each(a$$0.solutions, function (a, b) {
                        if (e === b) {
                            f = true;
                            return false
                        }
                    });
                    f || a$$0.solutions.push(e)
                }
            });
            this.internal.instance = "jp_" + this.count;
            this.instances[this.internal.instance] = this.element;
            this.element.attr("id") || this.element.attr("id",
                this.options.idPrefix + "_jplayer_" + this.count);
            this.internal.self = b$$1.extend({}, {id: this.element.attr("id"), jq: this.element});
            this.internal.audio = b$$1.extend({}, {id: this.options.idPrefix + "_audio_" + this.count, jq: f$$0});
            this.internal.video = b$$1.extend({}, {id: this.options.idPrefix + "_video_" + this.count, jq: f$$0});
            this.internal.flash = b$$1.extend({}, {
                id: this.options.idPrefix + "_flash_" + this.count,
                jq: f$$0,
                swf: this.options.swfPath + (this.options.swfPath.toLowerCase().slice(-4) !== ".swf" ? (this.options.swfPath &&
                this.options.swfPath.slice(-1) !== "/" ? "/" : "") + "Jplayer.swf" : "")
            });
            this.internal.poster = b$$1.extend({}, {id: this.options.idPrefix + "_poster_" + this.count, jq: f$$0});
            b$$1.each(b$$1.jPlayer.event, function (b, c) {
                if (a$$0.options[b] !== f$$0) {
                    a$$0.element.bind(c + ".jPlayer", a$$0.options[b]);
                    a$$0.options[b] = f$$0
                }
            });
            this.require.audio = false;
            this.require.video = false;
            b$$1.each(this.formats, function (b, c) {
                a$$0.require[a$$0.format[c].media] = true
            });
            this.options = this.require.video ? b$$1.extend(true, {}, this.optionsVideo, this.options) :
                b$$1.extend(true, {}, this.optionsAudio, this.options);
            this._setSize();
            this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
            this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
            this.status.noVolume = this._uaBlocklist(this.options.noVolume);
            this._restrictNativeVideoControls();
            this.htmlElement.poster = document.createElement("img");
            this.htmlElement.poster.id = this.internal.poster.id;
            this.htmlElement.poster.onload = function () {
                (!a$$0.status.video || a$$0.status.waitForPlay) &&
                a$$0.internal.poster.jq.show()
            };
            this.element.append(this.htmlElement.poster);
            this.internal.poster.jq = b$$1("#" + this.internal.poster.id);
            this.internal.poster.jq.css({width: this.status.width, height: this.status.height});
            this.internal.poster.jq.hide();
            this.internal.poster.jq.bind("click.jPlayer", function () {
                a$$0._trigger(b$$1.jPlayer.event.click)
            });
            this.html.audio.available = false;
            if (this.require.audio) {
                this.htmlElement.audio = document.createElement("audio");
                this.htmlElement.audio.id = this.internal.audio.id;
                this.html.audio.available = !!this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)
            }
            this.html.video.available = false;
            if (this.require.video) {
                this.htmlElement.video = document.createElement("video");
                this.htmlElement.video.id = this.internal.video.id;
                this.html.video.available = !!this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video)
            }
            this.flash.available = this._checkForFlash(10);
            this.html.canPlay = {};
            this.flash.canPlay = {};
            b$$1.each(this.formats, function (b,
                                              c) {
                a$$0.html.canPlay[c] = a$$0.html[a$$0.format[c].media].available && "" !== a$$0.htmlElement[a$$0.format[c].media].canPlayType(a$$0.format[c].codec);
                a$$0.flash.canPlay[c] = a$$0.format[c].flashCanPlay && a$$0.flash.available
            });
            this.html.desired = false;
            this.flash.desired = false;
            b$$1.each(this.solutions, function (c$$0, d) {
                if (c$$0 === 0)a$$0[d].desired = true; else {
                    var e = false;
                    var f = false;
                    b$$1.each(a$$0.formats, function (b, c) {
                        a$$0[a$$0.solutions[0]].canPlay[c] && (a$$0.format[c].media === "video" ? f = true : e = true)
                    });
                    a$$0[d].desired =
                        a$$0.require.audio && !e || a$$0.require.video && !f
                }
            });
            this.html.support = {};
            this.flash.support = {};
            b$$1.each(this.formats, function (b, c) {
                a$$0.html.support[c] = a$$0.html.canPlay[c] && a$$0.html.desired;
                a$$0.flash.support[c] = a$$0.flash.canPlay[c] && a$$0.flash.desired
            });
            this.html.used = false;
            this.flash.used = false;
            b$$1.each(this.solutions, function (c$$0, d) {
                b$$1.each(a$$0.formats, function (b, c) {
                    if (a$$0[d].support[c]) {
                        a$$0[d].used = true;
                        return false
                    }
                })
            });
            this._resetActive();
            this._resetGate();
            this._cssSelectorAncestor(this.options.cssSelectorAncestor);
            if (!this.html.used && !this.flash.used) {
                this._error({
                    type: b$$1.jPlayer.error.NO_SOLUTION,
                    context: "{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}",
                    message: b$$1.jPlayer.errorMsg.NO_SOLUTION,
                    hint: b$$1.jPlayer.errorHint.NO_SOLUTION
                });
                this.css.jq.noSolution.length && this.css.jq.noSolution.show()
            } else this.css.jq.noSolution.length && this.css.jq.noSolution.hide();
            if (this.flash.used) {
                var c$$1;
                var d$$0 = "jQuery\x3d" + encodeURI(this.options.noConflict) + "\x26id\x3d" + encodeURI(this.internal.self.id) +
                    "\x26vol\x3d" + this.options.volume + "\x26muted\x3d" + this.options.muted;
                if (b$$1.jPlayer.browser.msie && Number(b$$1.jPlayer.browser.version) <= 8) {
                    d$$0 = ['\x3cparam name\x3d"movie" value\x3d"' + this.internal.flash.swf + '" /\x3e', '\x3cparam name\x3d"FlashVars" value\x3d"' + d$$0 + '" /\x3e', '\x3cparam name\x3d"allowScriptAccess" value\x3d"always" /\x3e', '\x3cparam name\x3d"bgcolor" value\x3d"' + this.options.backgroundColor + '" /\x3e', '\x3cparam name\x3d"wmode" value\x3d"' + this.options.wmode + '" /\x3e'];
                    c$$1 = document.createElement('\x3cobject id\x3d"' +
                    this.internal.flash.id + '" classid\x3d"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width\x3d"0" height\x3d"0"\x3e\x3c/object\x3e');
                    for (var e$$0 = 0; e$$0 < d$$0.length; e$$0++)c$$1.appendChild(document.createElement(d$$0[e$$0]))
                } else {
                    e$$0 = function (a, b, c) {
                        var d = document.createElement("param");
                        d.setAttribute("name", b);
                        d.setAttribute("value", c);
                        a.appendChild(d)
                    };
                    c$$1 = document.createElement("object");
                    c$$1.setAttribute("id", this.internal.flash.id);
                    c$$1.setAttribute("data", this.internal.flash.swf);
                    c$$1.setAttribute("type",
                        "application/x-shockwave-flash");
                    c$$1.setAttribute("width", "1");
                    c$$1.setAttribute("height", "1");
                    e$$0(c$$1, "flashvars", d$$0);
                    e$$0(c$$1, "allowscriptaccess", "always");
                    e$$0(c$$1, "bgcolor", this.options.backgroundColor);
                    e$$0(c$$1, "wmode", this.options.wmode)
                }
                this.element.append(c$$1);
                this.internal.flash.jq = b$$1(c$$1)
            }
            if (this.html.used) {
                if (this.html.audio.available) {
                    this._addHtmlEventListeners(this.htmlElement.audio, this.html.audio);
                    this.element.append(this.htmlElement.audio);
                    this.internal.audio.jq = b$$1("#" +
                    this.internal.audio.id)
                }
                if (this.html.video.available) {
                    this._addHtmlEventListeners(this.htmlElement.video, this.html.video);
                    this.element.append(this.htmlElement.video);
                    this.internal.video.jq = b$$1("#" + this.internal.video.id);
                    this.status.nativeVideoControls ? this.internal.video.jq.css({
                        width: this.status.width,
                        height: this.status.height
                    }) : this.internal.video.jq.css({width: "0px", height: "0px"});
                    this.internal.video.jq.bind("click.jPlayer", function () {
                        a$$0._trigger(b$$1.jPlayer.event.click)
                    })
                }
            }
            this.options.emulateHtml &&
            this._emulateHtmlBridge();
            this.html.used && !this.flash.used && setTimeout(function () {
                a$$0.internal.ready = true;
                a$$0.version.flash = "n/a";
                a$$0._trigger(b$$1.jPlayer.event.repeat);
                a$$0._trigger(b$$1.jPlayer.event.ready)
            }, 100);
            this._updateNativeVideoControls();
            this._updateInterface();
            this._updateButtons(false);
            this._updateAutohide();
            this._updateVolume(this.options.volume);
            this._updateMute(this.options.muted);
            this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
            b$$1.jPlayer.prototype.count++
        },
        destroy: function () {
            this.clearMedia();
            this._removeUiClass();
            this.css.jq.currentTime.length && this.css.jq.currentTime.text("");
            this.css.jq.duration.length && this.css.jq.duration.text("");
            b$$1.each(this.css.jq, function (a, b) {
                b.length && b.unbind(".jPlayer")
            });
            this.internal.poster.jq.unbind(".jPlayer");
            this.internal.video.jq && this.internal.video.jq.unbind(".jPlayer");
            this.options.emulateHtml && this._destroyHtmlBridge();
            this.element.removeData("jPlayer");
            this.element.unbind(".jPlayer");
            this.element.empty();
            delete this.instances[this.internal.instance]
        },
        enable: function () {
        },
        disable: function () {
        },
        _testCanPlayType: function (a) {
            try {
                a.canPlayType(this.format.mp3.codec);
                return true
            } catch (b) {
                return false
            }
        },
        _uaBlocklist: function (a$$0) {
            var c = navigator.userAgent.toLowerCase();
            var d = false;
            b$$1.each(a$$0, function (a, b) {
                if (b && b.test(c)) {
                    d = true;
                    return false
                }
            });
            return d
        },
        _restrictNativeVideoControls: function () {
            if (this.require.audio && this.status.nativeVideoControls) {
                this.status.nativeVideoControls = false;
                this.status.noFullScreen = true
            }
        },
        _updateNativeVideoControls: function () {
            if (this.html.video.available &&
                this.html.used) {
                this.htmlElement.video.controls = this.status.nativeVideoControls;
                this._updateAutohide();
                if (this.status.nativeVideoControls && this.require.video) {
                    this.internal.poster.jq.hide();
                    this.internal.video.jq.css({width: this.status.width, height: this.status.height})
                } else if (this.status.waitForPlay && this.status.video) {
                    this.internal.poster.jq.show();
                    this.internal.video.jq.css({width: "0px", height: "0px"})
                }
            }
        },
        _addHtmlEventListeners: function (a, c) {
            var d = this;
            a.preload = this.options.preload;
            a.muted = this.options.muted;
            a.volume = this.options.volume;
            a.addEventListener("progress", function () {
                if (c.gate) {
                    d._getHtmlStatus(a);
                    d._updateInterface();
                    d._trigger(b$$1.jPlayer.event.progress)
                }
            }, false);
            a.addEventListener("timeupdate", function () {
                if (c.gate) {
                    d._getHtmlStatus(a);
                    d._updateInterface();
                    d._trigger(b$$1.jPlayer.event.timeupdate)
                }
            }, false);
            a.addEventListener("durationchange", function () {
                if (c.gate) {
                    d._getHtmlStatus(a);
                    d._updateInterface();
                    d._trigger(b$$1.jPlayer.event.durationchange)
                }
            }, false);
            a.addEventListener("play", function () {
                if (c.gate) {
                    d._updateButtons(true);
                    d._html_checkWaitForPlay();
                    d._trigger(b$$1.jPlayer.event.play)
                }
            }, false);
            a.addEventListener("playing", function () {
                if (c.gate) {
                    d._updateButtons(true);
                    d._seeked();
                    d._trigger(b$$1.jPlayer.event.playing)
                }
            }, false);
            a.addEventListener("pause", function () {
                if (c.gate) {
                    d._updateButtons(false);
                    d._trigger(b$$1.jPlayer.event.pause)
                }
            }, false);
            a.addEventListener("waiting", function () {
                if (c.gate) {
                    d._seeking();
                    d._trigger(b$$1.jPlayer.event.waiting)
                }
            }, false);
            a.addEventListener("seeking", function () {
                if (c.gate) {
                    d._seeking();
                    d._trigger(b$$1.jPlayer.event.seeking)
                }
            }, false);
            a.addEventListener("seeked", function () {
                if (c.gate) {
                    d._seeked();
                    d._trigger(b$$1.jPlayer.event.seeked)
                }
            }, false);
            a.addEventListener("volumechange", function () {
                if (c.gate) {
                    d.options.volume = a.volume;
                    d.options.muted = a.muted;
                    d._updateMute();
                    d._updateVolume();
                    d._trigger(b$$1.jPlayer.event.volumechange)
                }
            }, false);
            a.addEventListener("suspend", function () {
                if (c.gate) {
                    d._seeked();
                    d._trigger(b$$1.jPlayer.event.suspend)
                }
            }, false);
            a.addEventListener("ended", function () {
                if (c.gate) {
                    if (!b$$1.jPlayer.browser.webkit)d.htmlElement.media.currentTime =
                        0;
                    d.htmlElement.media.pause();
                    d._updateButtons(false);
                    d._getHtmlStatus(a, true);
                    d._updateInterface();
                    d._trigger(b$$1.jPlayer.event.ended)
                }
            }, false);
            a.addEventListener("error", function () {
                if (c.gate) {
                    d._updateButtons(false);
                    d._seeked();
                    if (d.status.srcSet) {
                        clearTimeout(d.internal.htmlDlyCmdId);
                        d.status.waitForLoad = true;
                        d.status.waitForPlay = true;
                        d.status.video && !d.status.nativeVideoControls && d.internal.video.jq.css({
                            width: "0px",
                            height: "0px"
                        });
                        d._validString(d.status.media.poster) && !d.status.nativeVideoControls &&
                        d.internal.poster.jq.show();
                        d.css.jq.videoPlay.length && d.css.jq.videoPlay.show();
                        d._error({
                            type: b$$1.jPlayer.error.URL,
                            context: d.status.src,
                            message: b$$1.jPlayer.errorMsg.URL,
                            hint: b$$1.jPlayer.errorHint.URL
                        })
                    }
                }
            }, false);
            b$$1.each(b$$1.jPlayer.htmlEvent, function (e, g) {
                a.addEventListener(this, function () {
                    c.gate && d._trigger(b$$1.jPlayer.event[g])
                }, false)
            })
        },
        _getHtmlStatus: function (a, b) {
            var d = 0;
            var e = 0;
            var g = 0;
            var f = 0;
            if (isFinite(a.duration))this.status.duration = a.duration;
            d = a.currentTime;
            e = this.status.duration >
            0 ? 100 * d / this.status.duration : 0;
            if (typeof a.seekable === "object" && a.seekable.length > 0) {
                g = this.status.duration > 0 ? 100 * a.seekable.end(a.seekable.length - 1) / this.status.duration : 100;
                f = this.status.duration > 0 ? 100 * a.currentTime / a.seekable.end(a.seekable.length - 1) : 0
            } else {
                g = 100;
                f = e
            }
            if (b)e = f = d = 0;
            this.status.seekPercent = g;
            this.status.currentPercentRelative = f;
            this.status.currentPercentAbsolute = e;
            this.status.currentTime = d;
            this.status.readyState = a.readyState;
            this.status.networkState = a.networkState;
            this.status.playbackRate =
                a.playbackRate;
            this.status.ended = a.ended
        },
        _resetStatus: function () {
            this.status = b$$1.extend({}, this.status, b$$1.jPlayer.prototype.status)
        },
        _trigger: function (a, c, d) {
            a = b$$1.Event(a);
            a.jPlayer = {};
            a.jPlayer.version = b$$1.extend({}, this.version);
            a.jPlayer.options = b$$1.extend(true, {}, this.options);
            a.jPlayer.status = b$$1.extend(true, {}, this.status);
            a.jPlayer.html = b$$1.extend(true, {}, this.html);
            a.jPlayer.flash = b$$1.extend(true, {}, this.flash);
            if (c)a.jPlayer.error = b$$1.extend({}, c);
            if (d)a.jPlayer.warning = b$$1.extend({},
                d);
            this.element.trigger(a)
        },
        jPlayerFlashEvent: function (a, c) {
            if (a === b$$1.jPlayer.event.ready)if (this.internal.ready) {
                if (this.flash.gate) {
                    if (this.status.srcSet) {
                        var d = this.status.currentTime;
                        var e = this.status.paused;
                        this.setMedia(this.status.media);
                        d > 0 && (e ? this.pause(d) : this.play(d))
                    }
                    this._trigger(b$$1.jPlayer.event.flashreset)
                }
            } else {
                this.internal.ready = true;
                this.internal.flash.jq.css({width: "0px", height: "0px"});
                this.version.flash = c.version;
                this.version.needFlash !== this.version.flash && this._error({
                    type: b$$1.jPlayer.error.VERSION,
                    context: this.version.flash,
                    message: b$$1.jPlayer.errorMsg.VERSION + this.version.flash,
                    hint: b$$1.jPlayer.errorHint.VERSION
                });
                this._trigger(b$$1.jPlayer.event.repeat);
                this._trigger(a)
            }
            if (this.flash.gate)switch (a) {
                case b$$1.jPlayer.event.progress:
                    this._getFlashStatus(c);
                    this._updateInterface();
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.timeupdate:
                    this._getFlashStatus(c);
                    this._updateInterface();
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.play:
                    this._seeked();
                    this._updateButtons(true);
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.pause:
                    this._updateButtons(false);
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.ended:
                    this._updateButtons(false);
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.click:
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.error:
                    this.status.waitForLoad = true;
                    this.status.waitForPlay = true;
                    this.status.video && this.internal.flash.jq.css({width: "0px", height: "0px"});
                    this._validString(this.status.media.poster) && this.internal.poster.jq.show();
                    this.css.jq.videoPlay.length && this.status.video &&
                    this.css.jq.videoPlay.show();
                    this.status.video ? this._flash_setVideo(this.status.media) : this._flash_setAudio(this.status.media);
                    this._updateButtons(false);
                    this._error({
                        type: b$$1.jPlayer.error.URL,
                        context: c.src,
                        message: b$$1.jPlayer.errorMsg.URL,
                        hint: b$$1.jPlayer.errorHint.URL
                    });
                    break;
                case b$$1.jPlayer.event.seeking:
                    this._seeking();
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.seeked:
                    this._seeked();
                    this._trigger(a);
                    break;
                case b$$1.jPlayer.event.ready:
                    break;
                default:
                    this._trigger(a)
            }
            return false
        },
        _getFlashStatus: function (a) {
            this.status.seekPercent =
                a.seekPercent;
            this.status.currentPercentRelative = a.currentPercentRelative;
            this.status.currentPercentAbsolute = a.currentPercentAbsolute;
            this.status.currentTime = a.currentTime;
            this.status.duration = a.duration;
            this.status.readyState = 4;
            this.status.networkState = 0;
            this.status.playbackRate = 1;
            this.status.ended = false
        },
        _updateButtons: function (a) {
            if (a !== f$$0) {
                this.status.paused = !a;
                if (this.css.jq.play.length && this.css.jq.pause.length)if (a) {
                    this.css.jq.play.hide();
                    this.css.jq.pause.show()
                } else {
                    this.css.jq.play.show();
                    this.css.jq.pause.hide()
                }
            }
            if (this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length)if (this.status.noFullScreen) {
                this.css.jq.fullScreen.hide();
                this.css.jq.restoreScreen.hide()
            } else if (this.options.fullScreen) {
                this.css.jq.fullScreen.hide();
                this.css.jq.restoreScreen.show()
            } else {
                this.css.jq.fullScreen.show();
                this.css.jq.restoreScreen.hide()
            }
            if (this.css.jq.repeat.length && this.css.jq.repeatOff.length)if (this.options.loop) {
                this.css.jq.repeat.hide();
                this.css.jq.repeatOff.show()
            } else {
                this.css.jq.repeat.show();
                this.css.jq.repeatOff.hide()
            }
        },
        _updateInterface: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.width(this.status.seekPercent + "%");
            this.css.jq.playBar.length && this.css.jq.playBar.width(this.status.currentPercentRelative + "%");
            this.css.jq.currentTime.length && this.css.jq.currentTime.text(b$$1.jPlayer.convertTime(this.status.currentTime));
            this.css.jq.duration.length && this.css.jq.duration.text(b$$1.jPlayer.convertTime(this.status.duration))
        },
        _seeking: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.addClass("jp-seeking-bg")
        },
        _seeked: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.removeClass("jp-seeking-bg")
        },
        _resetGate: function () {
            this.html.audio.gate = false;
            this.html.video.gate = false;
            this.flash.gate = false
        },
        _resetActive: function () {
            this.html.active = false;
            this.flash.active = false
        },
        setMedia: function (a) {
            var c = this;
            var d = false;
            var e$$1 = this.status.media.poster !== a.poster;
            this._resetMedia();
            this._resetGate();
            this._resetActive();
            b$$1.each(this.formats, function (e$$0, f) {
                var i = c.format[f].media === "video";
                b$$1.each(c.solutions,
                    function (b, e) {
                        if (c[e].support[f] && c._validString(a[f])) {
                            var g = e === "html";
                            if (i) {
                                if (g) {
                                    c.html.video.gate = true;
                                    c._html_setVideo(a);
                                    c.html.active = true
                                } else {
                                    c.flash.gate = true;
                                    c._flash_setVideo(a);
                                    c.flash.active = true
                                }
                                c.css.jq.videoPlay.length && c.css.jq.videoPlay.show();
                                c.status.video = true
                            } else {
                                if (g) {
                                    c.html.audio.gate = true;
                                    c._html_setAudio(a);
                                    c.html.active = true
                                } else {
                                    c.flash.gate = true;
                                    c._flash_setAudio(a);
                                    c.flash.active = true
                                }
                                c.css.jq.videoPlay.length && c.css.jq.videoPlay.hide();
                                c.status.video = false
                            }
                            d = true;
                            return false
                        }
                    });
                if (d)return false
            });
            if (d) {
                if ((!this.status.nativeVideoControls || !this.html.video.gate) && this._validString(a.poster))e$$1 ? this.htmlElement.poster.src = a.poster : this.internal.poster.jq.show();
                this.status.srcSet = true;
                this.status.media = b$$1.extend({}, a);
                this._updateButtons(false);
                this._updateInterface()
            } else this._error({
                type: b$$1.jPlayer.error.NO_SUPPORT,
                context: "{supplied:'" + this.options.supplied + "'}",
                message: b$$1.jPlayer.errorMsg.NO_SUPPORT,
                hint: b$$1.jPlayer.errorHint.NO_SUPPORT
            })
        },
        _resetMedia: function () {
            this._resetStatus();
            this._updateButtons(false);
            this._updateInterface();
            this._seeked();
            this.internal.poster.jq.hide();
            clearTimeout(this.internal.htmlDlyCmdId);
            this.html.active ? this._html_resetMedia() : this.flash.active && this._flash_resetMedia()
        },
        clearMedia: function () {
            this._resetMedia();
            this.html.active ? this._html_clearMedia() : this.flash.active && this._flash_clearMedia();
            this._resetGate();
            this._resetActive()
        },
        load: function () {
            this.status.srcSet ? this.html.active ? this._html_load() :
            this.flash.active && this._flash_load() : this._urlNotSetError("load")
        },
        play: function (a) {
            a = typeof a === "number" ? a : NaN;
            this.status.srcSet ? this.html.active ? this._html_play(a) : this.flash.active && this._flash_play(a) : this._urlNotSetError("play")
        },
        videoPlay: function () {
            this.play()
        },
        pause: function (a) {
            a = typeof a === "number" ? a : NaN;
            this.status.srcSet ? this.html.active ? this._html_pause(a) : this.flash.active && this._flash_pause(a) : this._urlNotSetError("pause")
        },
        pauseOthers: function () {
            var a = this;
            b$$1.each(this.instances,
                function (b, d) {
                    a.element !== d && d.data("jPlayer").status.srcSet && d.jPlayer("pause")
                })
        },
        stop: function () {
            this.status.srcSet ? this.html.active ? this._html_pause(0) : this.flash.active && this._flash_pause(0) : this._urlNotSetError("stop")
        },
        playHead: function (a) {
            a = this._limitValue(a, 0, 100);
            this.status.srcSet ? this.html.active ? this._html_playHead(a) : this.flash.active && this._flash_playHead(a) : this._urlNotSetError("playHead")
        },
        _muted: function (a) {
            this.options.muted = a;
            this.html.used && this._html_mute(a);
            this.flash.used &&
            this._flash_mute(a);
            if (!this.html.video.gate && !this.html.audio.gate) {
                this._updateMute(a);
                this._updateVolume(this.options.volume);
                this._trigger(b$$1.jPlayer.event.volumechange)
            }
        },
        mute: function (a) {
            a = a === f$$0 ? true : !!a;
            this._muted(a)
        },
        unmute: function (a) {
            a = a === f$$0 ? true : !!a;
            this._muted(!a)
        },
        _updateMute: function (a) {
            if (a === f$$0)a = this.options.muted;
            if (this.css.jq.mute.length && this.css.jq.unmute.length)if (this.status.noVolume) {
                this.css.jq.mute.hide();
                this.css.jq.unmute.hide()
            } else if (a) {
                this.css.jq.mute.hide();
                this.css.jq.unmute.show()
            } else {
                this.css.jq.mute.show();
                this.css.jq.unmute.hide()
            }
        },
        volume: function (a) {
            a = this._limitValue(a, 0, 1);
            this.options.volume = a;
            this.html.used && this._html_volume(a);
            this.flash.used && this._flash_volume(a);
            if (!this.html.video.gate && !this.html.audio.gate) {
                this._updateVolume(a);
                this._trigger(b$$1.jPlayer.event.volumechange)
            }
        },
        volumeBar: function (a) {
            if (this.css.jq.volumeBar.length) {
                var b = this.css.jq.volumeBar.offset();
                var d = a.pageX - b.left;
                var e = this.css.jq.volumeBar.width();
                a = this.css.jq.volumeBar.height() -
                a.pageY + b.top;
                b = this.css.jq.volumeBar.height();
                this.options.verticalVolume ? this.volume(a / b) : this.volume(d / e)
            }
            this.options.muted && this._muted(false)
        },
        volumeBarValue: function (a) {
            this.volumeBar(a)
        },
        _updateVolume: function (a) {
            if (a === f$$0)a = this.options.volume;
            a = this.options.muted ? 0 : a;
            if (this.status.noVolume) {
                this.css.jq.volumeBar.length && this.css.jq.volumeBar.hide();
                this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide();
                this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()
            } else {
                this.css.jq.volumeBar.length &&
                this.css.jq.volumeBar.show();
                if (this.css.jq.volumeBarValue.length) {
                    this.css.jq.volumeBarValue.show();
                    this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](a * 100 + "%")
                }
                this.css.jq.volumeMax.length && this.css.jq.volumeMax.show()
            }
        },
        volumeMax: function () {
            this.volume(1);
            this.options.muted && this._muted(false)
        },
        _cssSelectorAncestor: function (a$$0) {
            var c = this;
            this.options.cssSelectorAncestor = a$$0;
            this._removeUiClass();
            this.ancestorJq = a$$0 ? b$$1(a$$0) : [];
            a$$0 && this.ancestorJq.length !== 1 && this._warning({
                type: b$$1.jPlayer.warning.CSS_SELECTOR_COUNT,
                context: a$$0,
                message: b$$1.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
                hint: b$$1.jPlayer.warningHint.CSS_SELECTOR_COUNT
            });
            this._addUiClass();
            b$$1.each(this.options.cssSelector, function (a, b) {
                c._cssSelector(a, b)
            })
        },
        _cssSelector: function (a, c$$0) {
            var d = this;
            if (typeof c$$0 === "string")if (b$$1.jPlayer.prototype.options.cssSelector[a]) {
                this.css.jq[a] && this.css.jq[a].length && this.css.jq[a].unbind(".jPlayer");
                this.options.cssSelector[a] = c$$0;
                this.css.cs[a] =
                    this.options.cssSelectorAncestor + " " + c$$0;
                this.css.jq[a] = c$$0 ? b$$1(this.css.cs[a]) : [];
                this.css.jq[a].length && this.css.jq[a].bind("click.jPlayer", function (c) {
                    d[a](c);
                    b$$1(this).blur();
                    return false
                });
                c$$0 && this.css.jq[a].length !== 1 && this._warning({
                    type: b$$1.jPlayer.warning.CSS_SELECTOR_COUNT,
                    context: this.css.cs[a],
                    message: b$$1.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[a].length + " found for " + a + " method.",
                    hint: b$$1.jPlayer.warningHint.CSS_SELECTOR_COUNT
                })
            } else this._warning({
                type: b$$1.jPlayer.warning.CSS_SELECTOR_METHOD,
                context: a,
                message: b$$1.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
                hint: b$$1.jPlayer.warningHint.CSS_SELECTOR_METHOD
            }); else this._warning({
                type: b$$1.jPlayer.warning.CSS_SELECTOR_STRING,
                context: c$$0,
                message: b$$1.jPlayer.warningMsg.CSS_SELECTOR_STRING,
                hint: b$$1.jPlayer.warningHint.CSS_SELECTOR_STRING
            })
        },
        seekBar: function (a) {
            if (this.css.jq.seekBar) {
                var b = this.css.jq.seekBar.offset();
                a = a.pageX - b.left;
                b = this.css.jq.seekBar.width();
                this.playHead(100 * a / b)
            }
        },
        playBar: function (a) {
            this.seekBar(a)
        },
        repeat: function () {
            this._loop(true)
        },
        repeatOff: function () {
            this._loop(false)
        },
        _loop: function (a) {
            if (this.options.loop !== a) {
                this.options.loop = a;
                this._updateButtons();
                this._trigger(b$$1.jPlayer.event.repeat)
            }
        },
        currentTime: function () {
        },
        duration: function () {
        },
        gui: function () {
        },
        noSolution: function () {
        },
        option: function (a, c) {
            var d = a;
            if (arguments.length === 0)return b$$1.extend(true, {}, this.options);
            if (typeof a === "string") {
                var e = a.split(".");
                if (c === f$$0) {
                    d = b$$1.extend(true, {}, this.options);
                    for (var g = 0; g < e.length; g++)if (d[e[g]] !== f$$0)d = d[e[g]]; else {
                        this._warning({
                            type: b$$1.jPlayer.warning.OPTION_KEY,
                            context: a,
                            message: b$$1.jPlayer.warningMsg.OPTION_KEY,
                            hint: b$$1.jPlayer.warningHint.OPTION_KEY
                        });
                        return f$$0
                    }
                    return d
                }
                g = d = {};
                for (var h = 0; h < e.length; h++)if (h < e.length - 1) {
                    g[e[h]] = {};
                    g = g[e[h]]
                } else g[e[h]] = c
            }
            this._setOptions(d);
            return this
        },
        _setOptions: function (a$$0) {
            var c = this;
            b$$1.each(a$$0, function (a, b) {
                c._setOption(a, b)
            });
            return this
        },
        _setOption: function (a$$0, c) {
            var d = this;
            switch (a$$0) {
                case "volume":
                    this.volume(c);
                    break;
                case "muted":
                    this._muted(c);
                    break;
                case "cssSelectorAncestor":
                    this._cssSelectorAncestor(c);
                    break;
                case "cssSelector":
                    b$$1.each(c, function (a, b) {
                        d._cssSelector(a, b)
                    });
                    break;
                case "fullScreen":
                    if (this.options[a$$0] !== c) {
                        this._removeUiClass();
                        this.options[a$$0] = c;
                        this._refreshSize()
                    }
                    break;
                case "size":
                    !this.options.fullScreen && this.options[a$$0].cssClass !== c.cssClass && this._removeUiClass();
                    this.options[a$$0] = b$$1.extend({}, this.options[a$$0], c);
                    this._refreshSize();
                    break;
                case "sizeFull":
                    this.options.fullScreen && this.options[a$$0].cssClass !== c.cssClass && this._removeUiClass();
                    this.options[a$$0] =
                        b$$1.extend({}, this.options[a$$0], c);
                    this._refreshSize();
                    break;
                case "autohide":
                    this.options[a$$0] = b$$1.extend({}, this.options[a$$0], c);
                    this._updateAutohide();
                    break;
                case "loop":
                    this._loop(c);
                    break;
                case "nativeVideoControls":
                    this.options[a$$0] = b$$1.extend({}, this.options[a$$0], c);
                    this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                    this._restrictNativeVideoControls();
                    this._updateNativeVideoControls();
                    break;
                case "noFullScreen":
                    this.options[a$$0] = b$$1.extend({}, this.options[a$$0],
                        c);
                    this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                    this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
                    this._restrictNativeVideoControls();
                    this._updateButtons();
                    break;
                case "noVolume":
                    this.options[a$$0] = b$$1.extend({}, this.options[a$$0], c);
                    this.status.noVolume = this._uaBlocklist(this.options.noVolume);
                    this._updateVolume();
                    this._updateMute();
                    break;
                case "emulateHtml":
                    if (this.options[a$$0] !== c)(this.options[a$$0] = c) ? this._emulateHtmlBridge() : this._destroyHtmlBridge()
            }
            return this
        },
        _refreshSize: function () {
            this._setSize();
            this._addUiClass();
            this._updateSize();
            this._updateButtons();
            this._updateAutohide();
            this._trigger(b$$1.jPlayer.event.resize)
        },
        _setSize: function () {
            if (this.options.fullScreen) {
                this.status.width = this.options.sizeFull.width;
                this.status.height = this.options.sizeFull.height;
                this.status.cssClass = this.options.sizeFull.cssClass
            } else {
                this.status.width = this.options.size.width;
                this.status.height = this.options.size.height;
                this.status.cssClass = this.options.size.cssClass
            }
            this.element.css({
                width: this.status.width,
                height: this.status.height
            })
        },
        _addUiClass: function () {
            this.ancestorJq.length && this.ancestorJq.addClass(this.status.cssClass)
        },
        _removeUiClass: function () {
            this.ancestorJq.length && this.ancestorJq.removeClass(this.status.cssClass)
        },
        _updateSize: function () {
            this.internal.poster.jq.css({width: this.status.width, height: this.status.height});
            !this.status.waitForPlay && this.html.active && this.status.video || this.html.video.available && this.html.used && this.status.nativeVideoControls ? this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            }) : !this.status.waitForPlay && this.flash.active && this.status.video && this.internal.flash.jq.css({
                width: this.status.width,
                height: this.status.height
            })
        },
        _updateAutohide: function () {
            var a = this;
            var b = function () {
                a.css.jq.gui.fadeIn(a.options.autohide.fadeIn, function () {
                    clearTimeout(a.internal.autohideId);
                    a.internal.autohideId = setTimeout(function () {
                        a.css.jq.gui.fadeOut(a.options.autohide.fadeOut)
                    }, a.options.autohide.hold)
                })
            };
            if (this.css.jq.gui.length) {
                this.css.jq.gui.stop(true, true);
                clearTimeout(this.internal.autohideId);
                this.element.unbind(".jPlayerAutohide");
                this.css.jq.gui.unbind(".jPlayerAutohide");
                if (this.status.nativeVideoControls)this.css.jq.gui.hide(); else if (this.options.fullScreen && this.options.autohide.full || !this.options.fullScreen && this.options.autohide.restored) {
                    this.element.bind("mousemove.jPlayer.jPlayerAutohide", b);
                    this.css.jq.gui.bind("mousemove.jPlayer.jPlayerAutohide", b);
                    this.css.jq.gui.hide()
                } else this.css.jq.gui.show()
            }
        },
        fullScreen: function () {
            this._setOption("fullScreen",
                true)
        },
        restoreScreen: function () {
            this._setOption("fullScreen", false)
        },
        _html_initMedia: function () {
            this.htmlElement.media.src = this.status.src;
            this.options.preload !== "none" && this._html_load();
            this._trigger(b$$1.jPlayer.event.timeupdate)
        },
        _html_setAudio: function (a) {
            var c = this;
            b$$1.each(this.formats, function (b, e) {
                if (c.html.support[e] && a[e]) {
                    c.status.src = a[e];
                    c.status.format[e] = true;
                    c.status.formatType = e;
                    return false
                }
            });
            this.htmlElement.media = this.htmlElement.audio;
            this._html_initMedia()
        },
        _html_setVideo: function (a) {
            var c =
                this;
            b$$1.each(this.formats, function (b, e) {
                if (c.html.support[e] && a[e]) {
                    c.status.src = a[e];
                    c.status.format[e] = true;
                    c.status.formatType = e;
                    return false
                }
            });
            if (this.status.nativeVideoControls)this.htmlElement.video.poster = this._validString(a.poster) ? a.poster : "";
            this.htmlElement.media = this.htmlElement.video;
            this._html_initMedia()
        },
        _html_resetMedia: function () {
            if (this.htmlElement.media) {
                this.htmlElement.media.id === this.internal.video.id && !this.status.nativeVideoControls && this.internal.video.jq.css({
                    width: "0px",
                    height: "0px"
                });
                this.htmlElement.media.pause()
            }
        },
        _html_clearMedia: function () {
            if (this.htmlElement.media) {
                this.htmlElement.media.src = "";
                this.htmlElement.media.load()
            }
        },
        _html_load: function () {
            if (this.status.waitForLoad) {
                this.status.waitForLoad = false;
                this.htmlElement.media.load()
            }
            clearTimeout(this.internal.htmlDlyCmdId)
        },
        _html_play: function (a) {
            var b = this;
            this._html_load();
            this.htmlElement.media.play();
            if (!isNaN(a))try {
                this.htmlElement.media.currentTime = a
            } catch (d) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                        b.play(a)
                    },
                    100);
                return
            }
            this._html_checkWaitForPlay()
        },
        _html_pause: function (a) {
            var b = this;
            a > 0 ? this._html_load() : clearTimeout(this.internal.htmlDlyCmdId);
            this.htmlElement.media.pause();
            if (!isNaN(a))try {
                this.htmlElement.media.currentTime = a
            } catch (d) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    b.pause(a)
                }, 100);
                return
            }
            a > 0 && this._html_checkWaitForPlay()
        },
        _html_playHead: function (a) {
            var b = this;
            this._html_load();
            try {
                if (typeof this.htmlElement.media.seekable === "object" && this.htmlElement.media.seekable.length > 0)this.htmlElement.media.currentTime =
                    a * this.htmlElement.media.seekable.end(this.htmlElement.media.seekable.length - 1) / 100; else if (this.htmlElement.media.duration > 0 && !isNaN(this.htmlElement.media.duration))this.htmlElement.media.currentTime = a * this.htmlElement.media.duration / 100; else throw"e";
            } catch (d) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    b.playHead(a)
                }, 100);
                return
            }
            this.status.waitForLoad || this._html_checkWaitForPlay()
        },
        _html_checkWaitForPlay: function () {
            if (this.status.waitForPlay) {
                this.status.waitForPlay = false;
                this.css.jq.videoPlay.length &&
                this.css.jq.videoPlay.hide();
                if (this.status.video) {
                    this.internal.poster.jq.hide();
                    this.internal.video.jq.css({width: this.status.width, height: this.status.height})
                }
            }
        },
        _html_volume: function (a) {
            if (this.html.audio.available)this.htmlElement.audio.volume = a;
            if (this.html.video.available)this.htmlElement.video.volume = a
        },
        _html_mute: function (a) {
            if (this.html.audio.available)this.htmlElement.audio.muted = a;
            if (this.html.video.available)this.htmlElement.video.muted = a
        },
        _flash_setAudio: function (a) {
            var c = this;
            try {
                b$$1.each(this.formats,
                    function (b, d) {
                        if (c.flash.support[d] && a[d]) {
                            switch (d) {
                                case "m4a":
                                case "fla":
                                    c._getMovie().fl_setAudio_m4a(a[d]);
                                    break;
                                case "mp3":
                                    c._getMovie().fl_setAudio_mp3(a[d]);
                                    break;
                                case "rtmpa":
                                    c._getMovie().fl_setAudio_rtmp(a[d])
                            }
                            c.status.src = a[d];
                            c.status.format[d] = true;
                            c.status.formatType = d;
                            return false
                        }
                    });
                if (this.options.preload === "auto") {
                    this._flash_load();
                    this.status.waitForLoad = false
                }
            } catch (d$$0) {
                this._flashError(d$$0)
            }
        },
        _flash_setVideo: function (a) {
            var c = this;
            try {
                b$$1.each(this.formats, function (b, d) {
                    if (c.flash.support[d] &&
                        a[d]) {
                        switch (d) {
                            case "m4v":
                            case "flv":
                                c._getMovie().fl_setVideo_m4v(a[d]);
                                break;
                            case "rtmpv":
                                c._getMovie().fl_setVideo_rtmp(a[d])
                        }
                        c.status.src = a[d];
                        c.status.format[d] = true;
                        c.status.formatType = d;
                        return false
                    }
                });
                if (this.options.preload === "auto") {
                    this._flash_load();
                    this.status.waitForLoad = false
                }
            } catch (d$$0) {
                this._flashError(d$$0)
            }
        },
        _flash_resetMedia: function () {
            this.internal.flash.jq.css({width: "0px", height: "0px"});
            this._flash_pause(NaN)
        },
        _flash_clearMedia: function () {
            try {
                this._getMovie().fl_clearMedia()
            } catch (a) {
                this._flashError(a)
            }
        },
        _flash_load: function () {
            try {
                this._getMovie().fl_load()
            } catch (a) {
                this._flashError(a)
            }
            this.status.waitForLoad = false
        },
        _flash_play: function (a) {
            try {
                this._getMovie().fl_play(a)
            } catch (b) {
                this._flashError(b)
            }
            this.status.waitForLoad = false;
            this._flash_checkWaitForPlay()
        },
        _flash_pause: function (a) {
            try {
                this._getMovie().fl_pause(a)
            } catch (b) {
                this._flashError(b)
            }
            if (a > 0) {
                this.status.waitForLoad = false;
                this._flash_checkWaitForPlay()
            }
        },
        _flash_playHead: function (a) {
            try {
                this._getMovie().fl_play_head(a)
            } catch (b) {
                this._flashError(b)
            }
            this.status.waitForLoad ||
            this._flash_checkWaitForPlay()
        },
        _flash_checkWaitForPlay: function () {
            if (this.status.waitForPlay) {
                this.status.waitForPlay = false;
                this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
                if (this.status.video) {
                    this.internal.poster.jq.hide();
                    this.internal.flash.jq.css({width: this.status.width, height: this.status.height})
                }
            }
        },
        _flash_volume: function (a) {
            try {
                this._getMovie().fl_volume(a)
            } catch (b) {
                this._flashError(b)
            }
        },
        _flash_mute: function (a) {
            try {
                this._getMovie().fl_mute(a)
            } catch (b) {
                this._flashError(b)
            }
        },
        _getMovie: function () {
            return document[this.internal.flash.id]
        },
        _checkForFlash: function (a) {
            var b = false;
            var d;
            if (window.ActiveXObject)try {
                new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + a);
                b = true
            } catch (e) {
            } else if (navigator.plugins && navigator.mimeTypes.length > 0)(d = navigator.plugins["Shockwave Flash"]) && navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1") >= a && (b = true);
            return b
        },
        _validString: function (a) {
            return a && typeof a === "string"
        },
        _limitValue: function (a, b, d) {
            return a < b ? b : a > d ? d : a
        },
        _urlNotSetError: function (a) {
            this._error({
                type: b$$1.jPlayer.error.URL_NOT_SET,
                context: a, message: b$$1.jPlayer.errorMsg.URL_NOT_SET, hint: b$$1.jPlayer.errorHint.URL_NOT_SET
            })
        },
        _flashError: function (a) {
            var c;
            c = this.internal.ready ? "FLASH_DISABLED" : "FLASH";
            this._error({
                type: b$$1.jPlayer.error[c],
                context: this.internal.flash.swf,
                message: b$$1.jPlayer.errorMsg[c] + a.message,
                hint: b$$1.jPlayer.errorHint[c]
            });
            this.internal.flash.jq.css({width: "1px", height: "1px"})
        },
        _error: function (a) {
            this._trigger(b$$1.jPlayer.event.error, a);
            this.options.errorAlerts && this._alert("Error!" + (a.message ? "\n\n" +
            a.message : "") + (a.hint ? "\n\n" + a.hint : "") + "\n\nContext: " + a.context)
        },
        _warning: function (a) {
            this._trigger(b$$1.jPlayer.event.warning, f$$0, a);
            this.options.warningAlerts && this._alert("Warning!" + (a.message ? "\n\n" + a.message : "") + (a.hint ? "\n\n" + a.hint : "") + "\n\nContext: " + a.context)
        },
        _alert: function (a) {
            alert("jPlayer " + this.version.script + " : id\x3d'" + this.internal.self.id + "' : " + a)
        },
        _emulateHtmlBridge: function () {
            var a$$0 = this;
            b$$1.each(b$$1.jPlayer.emulateMethods.split(/\s+/g), function (b$$0, d) {
                a$$0.internal.domNode[d] =
                    function (b) {
                        a$$0[d](b)
                    }
            });
            b$$1.each(b$$1.jPlayer.event, function (c, d) {
                var e = true;
                b$$1.each(b$$1.jPlayer.reservedEvent.split(/\s+/g), function (a, b) {
                    if (b === c)return e = false
                });
                e && a$$0.element.bind(d + ".jPlayer.jPlayerHtml", function () {
                    a$$0._emulateHtmlUpdate();
                    var b = document.createEvent("Event");
                    b.initEvent(c, false, true);
                    a$$0.internal.domNode.dispatchEvent(b)
                })
            })
        },
        _emulateHtmlUpdate: function () {
            var a = this;
            b$$1.each(b$$1.jPlayer.emulateStatus.split(/\s+/g), function (b, d) {
                a.internal.domNode[d] = a.status[d]
            });
            b$$1.each(b$$1.jPlayer.emulateOptions.split(/\s+/g), function (b, d) {
                a.internal.domNode[d] = a.options[d]
            })
        },
        _destroyHtmlBridge: function () {
            var a = this;
            this.element.unbind(".jPlayerHtml");
            b$$1.each((b$$1.jPlayer.emulateMethods + " " + b$$1.jPlayer.emulateStatus + " " + b$$1.jPlayer.emulateOptions).split(/\s+/g), function (b, d) {
                delete a.internal.domNode[d]
            })
        }
    };
    b$$1.jPlayer.error = {
        FLASH: "e_flash",
        FLASH_DISABLED: "e_flash_disabled",
        NO_SOLUTION: "e_no_solution",
        NO_SUPPORT: "e_no_support",
        URL: "e_url",
        URL_NOT_SET: "e_url_not_set",
        VERSION: "e_version"
    };
    b$$1.jPlayer.errorMsg = {
        FLASH: "jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",
        FLASH_DISABLED: "jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",
        NO_SOLUTION: "No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",
        NO_SUPPORT: "It is not possible to play any media format provided in setMedia() on this browser using your current options.",
        URL: "Media URL could not be loaded.",
        URL_NOT_SET: "Attempt to issue media playback commands, while no media url is set.",
        VERSION: "jPlayer " + b$$1.jPlayer.prototype.version.script + " needs Jplayer.swf version " + b$$1.jPlayer.prototype.version.needFlash + " but found "
    };
    b$$1.jPlayer.errorHint = {
        FLASH: "Check your swfPath option and that Jplayer.swf is there.",
        FLASH_DISABLED: "Check that you have not display:none; the jPlayer entity or any ancestor.",
        NO_SOLUTION: "Review the jPlayer options: support and supplied.",
        NO_SUPPORT: "Video or audio formats defined in the supplied option are missing.",
        URL: "Check media URL is valid.",
        URL_NOT_SET: "Use setMedia() to set the media URL.",
        VERSION: "Update jPlayer files."
    };
    b$$1.jPlayer.warning = {
        CSS_SELECTOR_COUNT: "e_css_selector_count",
        CSS_SELECTOR_METHOD: "e_css_selector_method",
        CSS_SELECTOR_STRING: "e_css_selector_string",
        OPTION_KEY: "e_option_key"
    };
    b$$1.jPlayer.warningMsg = {
        CSS_SELECTOR_COUNT: "The number of css selectors found did not equal one: ",
        CSS_SELECTOR_METHOD: "The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",
        CSS_SELECTOR_STRING: "The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
        OPTION_KEY: "The option requested in jPlayer('option') is undefined."
    };
    b$$1.jPlayer.warningHint = {
        CSS_SELECTOR_COUNT: "Check your css selector and the ancestor.",
        CSS_SELECTOR_METHOD: "Check your method name.",
        CSS_SELECTOR_STRING: "Check your css selector is a string.",
        OPTION_KEY: "Check your option name."
    }
})(jQuery);
var module$jquery_cookie = {};
module$jquery;
(function (factory) {
    if (typeof define === "function" && define.amd)define(["jquery"], factory); else factory(jQuery)
})(function ($) {
    function raw(s) {
        return s
    }

    function decoded(s) {
        return decodeURIComponent(s.replace(pluses, " "))
    }

    function converted(s) {
        if (s.indexOf('"') === 0)s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\");
        try {
            return config.json ? JSON.parse(s) : s
        } catch (er) {
        }
    }

    var pluses = /\+/g;
    var config = $.cookie = function (key, value, options) {
        if (value !== undefined) {
            options = $.extend({}, config.defaults, options);
            if (typeof options.expires === "number") {
                var days = options.expires;
                var t = options.expires = new Date;
                t.setDate(t.getDate() + days)
            }
            value = config.json ? JSON.stringify(value) : String(value);
            return document.cookie = [config.raw ? key : encodeURIComponent(key), "\x3d", config.raw ? value : encodeURIComponent(value), options.expires ? "; expires\x3d" + options.expires.toUTCString() : "", options.path ? "; path\x3d" + options.path : "", options.domain ? "; domain\x3d" + options.domain : "", options.secure ? "; secure" : ""].join("")
        }
        var decode = config.raw ?
            raw : decoded;
        var cookies = document.cookie.split("; ");
        var result = key ? undefined : {};
        var i = 0;
        for (var l = cookies.length; i < l; i++) {
            var parts = cookies[i].split("\x3d");
            var name = decode(parts.shift());
            var cookie = decode(parts.join("\x3d"));
            if (key && key === name) {
                result = converted(cookie);
                break
            }
            if (!key)result[name] = converted(cookie)
        }
        return result
    };
    config.defaults = {};
    $.removeCookie = function (key, options) {
        if ($.cookie(key) !== undefined) {
            $.cookie(key, "", $.extend(options, {expires: -1}));
            return true
        }
        return false
    }
});
var module$jquery_cycle = {};
module$jquery;
(function ($, undefined) {
    function debug(s) {
        if ($.fn.cycle.debug)log(s)
    }

    function log() {
        if (window.console && console.log)console.log("[cycle] " + Array.prototype.join.call(arguments, " "))
    }

    function triggerPause(cont, byHover, onPager) {
        var opts = $(cont).data("cycle.opts");
        if (!opts)return;
        var paused = !!cont.cyclePause;
        if (paused && opts.paused)opts.paused(cont, opts, byHover, onPager); else if (!paused && opts.resumed)opts.resumed(cont, opts, byHover, onPager)
    }

    function handleArguments(cont$$0, options$$0, arg2) {
        function checkInstantResume(isPaused,
                                    arg2, cont) {
            if (!isPaused && arg2 === true) {
                var options = $(cont).data("cycle.opts");
                if (!options) {
                    log("options not found, can not resume");
                    return false
                }
                if (cont.cycleTimeout) {
                    clearTimeout(cont.cycleTimeout);
                    cont.cycleTimeout = 0
                }
                go(options.elements, options, 1, !options.backwards)
            }
        }

        if (cont$$0.cycleStop === undefined)cont$$0.cycleStop = 0;
        if (options$$0 === undefined || options$$0 === null)options$$0 = {};
        if (options$$0.constructor == String) {
            switch (options$$0) {
                case "destroy":
                case "stop":
                    var opts = $(cont$$0).data("cycle.opts");
                    if (!opts)return false;
                    cont$$0.cycleStop++;
                    if (cont$$0.cycleTimeout)clearTimeout(cont$$0.cycleTimeout);
                    cont$$0.cycleTimeout = 0;
                    if (opts.elements)$(opts.elements).stop();
                    $(cont$$0).removeData("cycle.opts");
                    if (options$$0 == "destroy")destroy(cont$$0, opts);
                    return false;
                case "toggle":
                    cont$$0.cyclePause = cont$$0.cyclePause === 1 ? 0 : 1;
                    checkInstantResume(cont$$0.cyclePause, arg2, cont$$0);
                    triggerPause(cont$$0);
                    return false;
                case "pause":
                    cont$$0.cyclePause = 1;
                    triggerPause(cont$$0);
                    return false;
                case "resume":
                    cont$$0.cyclePause =
                        0;
                    checkInstantResume(false, arg2, cont$$0);
                    triggerPause(cont$$0);
                    return false;
                case "prev":
                case "next":
                    opts = $(cont$$0).data("cycle.opts");
                    if (!opts) {
                        log('options not found, "prev/next" ignored');
                        return false
                    }
                    $.fn.cycle[options$$0](opts);
                    return false;
                default:
                    options$$0 = {fx: options$$0}
            }
            return options$$0
        } else if (options$$0.constructor == Number) {
            var num = options$$0;
            options$$0 = $(cont$$0).data("cycle.opts");
            if (!options$$0) {
                log("options not found, can not advance slide");
                return false
            }
            if (num < 0 || num >= options$$0.elements.length) {
                log("invalid slide index: " +
                num);
                return false
            }
            options$$0.nextSlide = num;
            if (cont$$0.cycleTimeout) {
                clearTimeout(cont$$0.cycleTimeout);
                cont$$0.cycleTimeout = 0
            }
            if (typeof arg2 == "string")options$$0.oneTimeFx = arg2;
            go(options$$0.elements, options$$0, 1, num >= options$$0.currSlide);
            return false
        }
        return options$$0
    }

    function removeFilter(el, opts) {
        if (!$.support.opacity && opts.cleartype && el.style.filter)try {
            el.style.removeAttribute("filter")
        } catch (smother) {
        }
    }

    function destroy(cont, opts) {
        if (opts.next)$(opts.next).unbind(opts.prevNextEvent);
        if (opts.prev)$(opts.prev).unbind(opts.prevNextEvent);
        if (opts.pager || opts.pagerAnchorBuilder)$.each(opts.pagerAnchors || [], function () {
            this.unbind().remove()
        });
        opts.pagerAnchors = null;
        $(cont).unbind("mouseenter.cycle mouseleave.cycle");
        if (opts.destroy)opts.destroy(opts)
    }

    function buildOptions($cont, $slides, els, options, o) {
        var startingSlideSpecified;
        var opts = $.extend({}, $.fn.cycle.defaults, options || {}, $.metadata ? $cont.metadata() : $.meta ? $cont.data() : {});
        var meta = $.isFunction($cont.data) ? $cont.data(opts.metaAttr) : null;
        if (meta)opts = $.extend(opts, meta);
        if (opts.autostop)opts.countdown =
            opts.autostopCount || els.length;
        var cont = $cont[0];
        $cont.data("cycle.opts", opts);
        opts.$cont = $cont;
        opts.stopCount = cont.cycleStop;
        opts.elements = els;
        opts.before = opts.before ? [opts.before] : [];
        opts.after = opts.after ? [opts.after] : [];
        if (!$.support.opacity && opts.cleartype)opts.after.push(function () {
            removeFilter(this, opts)
        });
        if (opts.continuous)opts.after.push(function () {
            go(els, opts, 0, !opts.backwards)
        });
        saveOriginalOpts(opts);
        if (!$.support.opacity && opts.cleartype && !opts.cleartypeNoBg)clearTypeFix($slides);
        if ($cont.css("position") ==
            "static")$cont.css("position", "relative");
        if (opts.width)$cont.width(opts.width);
        if (opts.height && opts.height != "auto")$cont.height(opts.height);
        if (opts.startingSlide !== undefined) {
            opts.startingSlide = parseInt(opts.startingSlide, 10);
            if (opts.startingSlide >= els.length || opts.startSlide < 0)opts.startingSlide = 0; else startingSlideSpecified = true
        } else if (opts.backwards)opts.startingSlide = els.length - 1; else opts.startingSlide = 0;
        if (opts.random) {
            opts.randomMap = [];
            for (var i$$0 = 0; i$$0 < els.length; i$$0++)opts.randomMap.push(i$$0);
            opts.randomMap.sort(function (a, b) {
                return Math.random() - 0.5
            });
            if (startingSlideSpecified)for (var cnt = 0; cnt < els.length; cnt++) {
                if (opts.startingSlide == opts.randomMap[cnt])opts.randomIndex = cnt
            } else {
                opts.randomIndex = 1;
                opts.startingSlide = opts.randomMap[1]
            }
        } else if (opts.startingSlide >= els.length)opts.startingSlide = 0;
        opts.currSlide = opts.startingSlide || 0;
        var first = opts.startingSlide;
        $slides.css({position: "absolute", top: 0, left: 0}).hide().each(function (i) {
            var z;
            if (opts.backwards)z = first ? i <= first ? els.length + (i -
            first) : first - i : els.length - i; else z = first ? i >= first ? els.length - (i - first) : first - i : els.length - i;
            $(this).css("z-index", z)
        });
        $(els[first]).css("opacity", 1).show();
        removeFilter(els[first], opts);
        if (opts.fit)if (!opts.aspect) {
            if (opts.width)$slides.width(opts.width);
            if (opts.height && opts.height != "auto")$slides.height(opts.height)
        } else $slides.each(function () {
            var $slide = $(this);
            var ratio = opts.aspect === true ? $slide.width() / $slide.height() : opts.aspect;
            if (opts.width && $slide.width() != opts.width) {
                $slide.width(opts.width);
                $slide.height(opts.width / ratio)
            }
            if (opts.height && $slide.height() < opts.height) {
                $slide.height(opts.height);
                $slide.width(opts.height * ratio)
            }
        });
        if (opts.center && (!opts.fit || opts.aspect))$slides.each(function () {
            var $slide = $(this);
            $slide.css({
                "margin-left": opts.width ? (opts.width - $slide.width()) / 2 + "px" : 0,
                "margin-top": opts.height ? (opts.height - $slide.height()) / 2 + "px" : 0
            })
        });
        if (opts.center && !opts.fit && !opts.slideResize)$slides.each(function () {
            var $slide = $(this);
            $slide.css({
                "margin-left": opts.width ? (opts.width -
                $slide.width()) / 2 + "px" : 0,
                "margin-top": opts.height ? (opts.height - $slide.height()) / 2 + "px" : 0
            })
        });
        var reshape = (opts.containerResize || opts.containerResizeHeight) && !$cont.innerHeight();
        if (reshape) {
            var maxw = 0;
            var maxh = 0;
            for (var j = 0; j < els.length; j++) {
                var $e = $(els[j]);
                var e = $e[0];
                var w = $e.outerWidth();
                var h = $e.outerHeight();
                if (!w)w = e.offsetWidth || e.width || $e.attr("width");
                if (!h)h = e.offsetHeight || e.height || $e.attr("height");
                maxw = w > maxw ? w : maxw;
                maxh = h > maxh ? h : maxh
            }
            if (opts.containerResize && maxw > 0 && maxh > 0)$cont.css({
                width: maxw +
                "px", height: maxh + "px"
            });
            if (opts.containerResizeHeight && maxh > 0)$cont.css({height: maxh + "px"})
        }
        var pauseFlag = false;
        if (opts.pause)$cont.bind("mouseenter.cycle", function () {
            pauseFlag = true;
            this.cyclePause++;
            triggerPause(cont, true)
        }).bind("mouseleave.cycle", function () {
            if (pauseFlag)this.cyclePause--;
            triggerPause(cont, true)
        });
        if (supportMultiTransitions(opts) === false)return false;
        var requeue = false;
        options.requeueAttempts = options.requeueAttempts || 0;
        $slides.each(function () {
            var $el = $(this);
            this.cycleH = opts.fit &&
            opts.height ? opts.height : $el.height() || this.offsetHeight || this.height || $el.attr("height") || 0;
            this.cycleW = opts.fit && opts.width ? opts.width : $el.width() || this.offsetWidth || this.width || $el.attr("width") || 0;
            if ($el.is("img")) {
                var loading = this.cycleH === 0 && this.cycleW === 0 && !this.complete;
                if (loading)if (o.s && opts.requeueOnImageNotLoaded && ++options.requeueAttempts < 100) {
                    log(options.requeueAttempts, " - img slide not loaded, requeuing slideshow: ", this.src, this.cycleW, this.cycleH);
                    setTimeout(function () {
                            $(o.s, o.c).cycle(options)
                        },
                        opts.requeueTimeout);
                    requeue = true;
                    return false
                } else log("could not determine size of image: " + this.src, this.cycleW, this.cycleH)
            }
            return true
        });
        if (requeue)return false;
        opts.cssBefore = opts.cssBefore || {};
        opts.cssAfter = opts.cssAfter || {};
        opts.cssFirst = opts.cssFirst || {};
        opts.animIn = opts.animIn || {};
        opts.animOut = opts.animOut || {};
        $slides.not(":eq(" + first + ")").css(opts.cssBefore);
        $($slides[first]).css(opts.cssFirst);
        if (opts.timeout) {
            opts.timeout = parseInt(opts.timeout, 10);
            if (opts.speed.constructor == String)opts.speed =
                $.fx.speeds[opts.speed] || parseInt(opts.speed, 10);
            if (!opts.sync)opts.speed = opts.speed / 2;
            for (var buffer = opts.fx == "none" ? 0 : opts.fx == "shuffle" ? 500 : 250; opts.timeout - opts.speed < buffer;)opts.timeout += opts.speed
        }
        if (opts.easing)opts.easeIn = opts.easeOut = opts.easing;
        if (!opts.speedIn)opts.speedIn = opts.speed;
        if (!opts.speedOut)opts.speedOut = opts.speed;
        opts.slideCount = els.length;
        opts.currSlide = opts.lastSlide = first;
        if (opts.random) {
            if (++opts.randomIndex == els.length)opts.randomIndex = 0;
            opts.nextSlide = opts.randomMap[opts.randomIndex]
        } else if (opts.backwards)opts.nextSlide =
            opts.startingSlide === 0 ? els.length - 1 : opts.startingSlide - 1; else opts.nextSlide = opts.startingSlide >= els.length - 1 ? 0 : opts.startingSlide + 1;
        if (!opts.multiFx) {
            var init = $.fn.cycle.transitions[opts.fx];
            if ($.isFunction(init))init($cont, $slides, opts); else if (opts.fx != "custom" && !opts.multiFx) {
                log("unknown transition: " + opts.fx, "; slideshow terminating");
                return false
            }
        }
        var e0 = $slides[first];
        if (!opts.skipInitializationCallbacks) {
            if (opts.before.length)opts.before[0].apply(e0, [e0, e0, opts, true]);
            if (opts.after.length)opts.after[0].apply(e0,
                [e0, e0, opts, true])
        }
        if (opts.next)$(opts.next).bind(opts.prevNextEvent, function () {
            return advance(opts, 1)
        });
        if (opts.prev)$(opts.prev).bind(opts.prevNextEvent, function () {
            return advance(opts, 0)
        });
        if (opts.pager || opts.pagerAnchorBuilder)buildPager(els, opts);
        exposeAddSlide(opts, els);
        return opts
    }

    function saveOriginalOpts(opts) {
        opts.original = {before: [], after: []};
        opts.original.cssBefore = $.extend({}, opts.cssBefore);
        opts.original.cssAfter = $.extend({}, opts.cssAfter);
        opts.original.animIn = $.extend({}, opts.animIn);
        opts.original.animOut = $.extend({}, opts.animOut);
        $.each(opts.before, function () {
            opts.original.before.push(this)
        });
        $.each(opts.after, function () {
            opts.original.after.push(this)
        })
    }

    function supportMultiTransitions(opts) {
        var i;
        var tx;
        var txs = $.fn.cycle.transitions;
        if (opts.fx.indexOf(",") > 0) {
            opts.multiFx = true;
            opts.fxs = opts.fx.replace(/\s*/g, "").split(",");
            for (i = 0; i < opts.fxs.length; i++) {
                var fx = opts.fxs[i];
                tx = txs[fx];
                if (!tx || !txs.hasOwnProperty(fx) || !$.isFunction(tx)) {
                    log("discarding unknown transition: ", fx);
                    opts.fxs.splice(i, 1);
                    i--
                }
            }
            if (!opts.fxs.length) {
                log("No valid transitions named; slideshow terminating.");
                return false
            }
        } else if (opts.fx == "all") {
            opts.multiFx = true;
            opts.fxs = [];
            for (var p in txs)if (txs.hasOwnProperty(p)) {
                tx = txs[p];
                if (txs.hasOwnProperty(p) && $.isFunction(tx))opts.fxs.push(p)
            }
        }
        if (opts.multiFx && opts.randomizeEffects) {
            var r1 = Math.floor(Math.random() * 20) + 30;
            for (i = 0; i < r1; i++) {
                var r2 = Math.floor(Math.random() * opts.fxs.length);
                opts.fxs.push(opts.fxs.splice(r2, 1)[0])
            }
            debug("randomized fx sequence: ",
                opts.fxs)
        }
        return true
    }

    function exposeAddSlide(opts, els) {
        opts.addSlide = function (newSlide, prepend) {
            var $s = $(newSlide);
            var s = $s[0];
            if (!opts.autostopCount)opts.countdown++;
            els[prepend ? "unshift" : "push"](s);
            if (opts.els)opts.els[prepend ? "unshift" : "push"](s);
            opts.slideCount = els.length;
            if (opts.random) {
                opts.randomMap.push(opts.slideCount - 1);
                opts.randomMap.sort(function (a, b) {
                    return Math.random() - 0.5
                })
            }
            $s.css("position", "absolute");
            $s[prepend ? "prependTo" : "appendTo"](opts.$cont);
            if (prepend) {
                opts.currSlide++;
                opts.nextSlide++
            }
            if (!$.support.opacity &&
                opts.cleartype && !opts.cleartypeNoBg)clearTypeFix($s);
            if (opts.fit && opts.width)$s.width(opts.width);
            if (opts.fit && opts.height && opts.height != "auto")$s.height(opts.height);
            s.cycleH = opts.fit && opts.height ? opts.height : $s.height();
            s.cycleW = opts.fit && opts.width ? opts.width : $s.width();
            $s.css(opts.cssBefore);
            if (opts.pager || opts.pagerAnchorBuilder)$.fn.cycle.createPagerAnchor(els.length - 1, s, $(opts.pager), els, opts);
            if ($.isFunction(opts.onAddSlide))opts.onAddSlide($s); else $s.hide()
        }
    }

    function go(els, opts, manual,
                fwd) {
        function queueNext() {
            var ms = 0;
            var timeout = opts.timeout;
            if (opts.timeout && !opts.continuous) {
                ms = getTimeout(els[opts.currSlide], els[opts.nextSlide], opts, fwd);
                if (opts.fx == "shuffle")ms -= opts.speedOut
            } else if (opts.continuous && p.cyclePause)ms = 10;
            if (ms > 0)p.cycleTimeout = setTimeout(function () {
                go(els, opts, 0, !opts.backwards)
            }, ms)
        }

        var p = opts.$cont[0];
        var curr = els[opts.currSlide];
        var next = els[opts.nextSlide];
        if (manual && opts.busy && opts.manualTrump) {
            debug("manualTrump in go(), stopping active transition");
            $(els).stop(true,
                true);
            opts.busy = 0;
            clearTimeout(p.cycleTimeout)
        }
        if (opts.busy) {
            debug("transition active, ignoring new tx request");
            return
        }
        if (p.cycleStop != opts.stopCount || p.cycleTimeout === 0 && !manual)return;
        if (!manual && !p.cyclePause && !opts.bounce && (opts.autostop && --opts.countdown <= 0 || opts.nowrap && !opts.random && opts.nextSlide < opts.currSlide)) {
            if (opts.end)opts.end(opts);
            return
        }
        var changed = false;
        if ((manual || !p.cyclePause) && opts.nextSlide != opts.currSlide) {
            changed = true;
            var fx = opts.fx;
            curr.cycleH = curr.cycleH || $(curr).height();
            curr.cycleW = curr.cycleW || $(curr).width();
            next.cycleH = next.cycleH || $(next).height();
            next.cycleW = next.cycleW || $(next).width();
            if (opts.multiFx) {
                if (fwd && (opts.lastFx === undefined || ++opts.lastFx >= opts.fxs.length))opts.lastFx = 0; else if (!fwd && (opts.lastFx === undefined || --opts.lastFx < 0))opts.lastFx = opts.fxs.length - 1;
                fx = opts.fxs[opts.lastFx]
            }
            if (opts.oneTimeFx) {
                fx = opts.oneTimeFx;
                opts.oneTimeFx = null
            }
            $.fn.cycle.resetState(opts, fx);
            if (opts.before.length)$.each(opts.before, function (i, o) {
                if (p.cycleStop != opts.stopCount)return;
                o.apply(next, [curr, next, opts, fwd])
            });
            var after = function () {
                opts.busy = 0;
                $.each(opts.after, function (i, o) {
                    if (p.cycleStop != opts.stopCount)return;
                    o.apply(next, [curr, next, opts, fwd])
                });
                if (!p.cycleStop)queueNext()
            };
            debug("tx firing(" + fx + "); currSlide: " + opts.currSlide + "; nextSlide: " + opts.nextSlide);
            opts.busy = 1;
            if (opts.fxFn)opts.fxFn(curr, next, opts, after, fwd, manual && opts.fastOnEvent); else if ($.isFunction($.fn.cycle[opts.fx]))$.fn.cycle[opts.fx](curr, next, opts, after, fwd, manual && opts.fastOnEvent); else $.fn.cycle.custom(curr,
                next, opts, after, fwd, manual && opts.fastOnEvent)
        } else queueNext();
        if (changed || opts.nextSlide == opts.currSlide) {
            var roll;
            opts.lastSlide = opts.currSlide;
            if (opts.random) {
                opts.currSlide = opts.nextSlide;
                if (++opts.randomIndex == els.length) {
                    opts.randomIndex = 0;
                    opts.randomMap.sort(function (a, b) {
                        return Math.random() - 0.5
                    })
                }
                opts.nextSlide = opts.randomMap[opts.randomIndex];
                if (opts.nextSlide == opts.currSlide)opts.nextSlide = opts.currSlide == opts.slideCount - 1 ? 0 : opts.currSlide + 1
            } else if (opts.backwards) {
                roll = opts.nextSlide -
                1 < 0;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = 1;
                    opts.currSlide = 0
                } else {
                    opts.nextSlide = roll ? els.length - 1 : opts.nextSlide - 1;
                    opts.currSlide = roll ? 0 : opts.nextSlide + 1
                }
            } else {
                roll = opts.nextSlide + 1 == els.length;
                if (roll && opts.bounce) {
                    opts.backwards = !opts.backwards;
                    opts.nextSlide = els.length - 2;
                    opts.currSlide = els.length - 1
                } else {
                    opts.nextSlide = roll ? 0 : opts.nextSlide + 1;
                    opts.currSlide = roll ? els.length - 1 : opts.nextSlide - 1
                }
            }
        }
        if (changed && opts.pager)opts.updateActivePagerLink(opts.pager, opts.currSlide,
            opts.activePagerClass)
    }

    function getTimeout(curr, next, opts, fwd) {
        if (opts.timeoutFn) {
            for (var t = opts.timeoutFn.call(curr, curr, next, opts, fwd); opts.fx != "none" && t - opts.speed < 250;)t += opts.speed;
            debug("calculated timeout: " + t + "; speed: " + opts.speed);
            if (t !== false)return t
        }
        return opts.timeout
    }

    function advance(opts, moveForward) {
        var val = moveForward ? 1 : -1;
        var els = opts.elements;
        var p = opts.$cont[0];
        var timeout = p.cycleTimeout;
        if (timeout) {
            clearTimeout(timeout);
            p.cycleTimeout = 0
        }
        if (opts.random && val < 0) {
            opts.randomIndex--;
            if (--opts.randomIndex == -2)opts.randomIndex = els.length - 2; else if (opts.randomIndex == -1)opts.randomIndex = els.length - 1;
            opts.nextSlide = opts.randomMap[opts.randomIndex]
        } else if (opts.random)opts.nextSlide = opts.randomMap[opts.randomIndex]; else {
            opts.nextSlide = opts.currSlide + val;
            if (opts.nextSlide < 0) {
                if (opts.nowrap)return false;
                opts.nextSlide = els.length - 1
            } else if (opts.nextSlide >= els.length) {
                if (opts.nowrap)return false;
                opts.nextSlide = 0
            }
        }
        var cb = opts.onPrevNextEvent || opts.prevNextClick;
        if ($.isFunction(cb))cb(val >
        0, opts.nextSlide, els[opts.nextSlide]);
        go(els, opts, 1, moveForward);
        return false
    }

    function buildPager(els, opts) {
        var $p = $(opts.pager);
        $.each(els, function (i, o) {
            $.fn.cycle.createPagerAnchor(i, o, $p, els, opts)
        });
        opts.updateActivePagerLink(opts.pager, opts.startingSlide, opts.activePagerClass)
    }

    function clearTypeFix($slides) {
        function hex(s) {
            s = parseInt(s, 10).toString(16);
            return s.length < 2 ? "0" + s : s
        }

        function getBg(e) {
            for (; e && e.nodeName.toLowerCase() != "html"; e = e.parentNode) {
                var v = $.css(e, "background-color");
                if (v && v.indexOf("rgb") >=
                    0) {
                    var rgb = v.match(/\d+/g);
                    return "#" + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2])
                }
                if (v && v != "transparent")return v
            }
            return "#ffffff"
        }

        debug("applying clearType background-color hack");
        $slides.each(function () {
            $(this).css("background-color", getBg(this))
        })
    }

    var ver = "2.9999.81";
    $.expr[":"].paused = function (el) {
        return el.cyclePause
    };
    $.fn.cycle = function (options, arg2) {
        var o = {s: this.selector, c: this.context};
        if (this.length === 0 && options != "stop") {
            if (!$.isReady && o.s) {
                log("DOM not ready, queuing slideshow");
                $(function () {
                    $(o.s,
                        o.c).cycle(options, arg2)
                });
                return this
            }
            log("terminating; zero elements found by selector" + ($.isReady ? "" : " (DOM not ready)"));
            return this
        }
        return this.each(function () {
            var opts = handleArguments(this, options, arg2);
            if (opts === false)return;
            opts.updateActivePagerLink = opts.updateActivePagerLink || $.fn.cycle.updateActivePagerLink;
            if (this.cycleTimeout)clearTimeout(this.cycleTimeout);
            this.cycleTimeout = this.cyclePause = 0;
            this.cycleStop = 0;
            var $cont = $(this);
            var $slides = opts.slideExpr ? $(opts.slideExpr, this) : $cont.children();
            var els = $slides.get();
            if (els.length < 2) {
                log("terminating; too few slides: " + els.length);
                return
            }
            var opts2 = buildOptions($cont, $slides, els, opts, o);
            if (opts2 === false)return;
            var startTime = opts2.continuous ? 10 : getTimeout(els[opts2.currSlide], els[opts2.nextSlide], opts2, !opts2.backwards);
            if (startTime) {
                startTime += opts2.delay || 0;
                if (startTime < 10)startTime = 10;
                debug("first timeout: " + startTime);
                this.cycleTimeout = setTimeout(function () {
                    go(els, opts2, 0, !opts.backwards)
                }, startTime)
            }
        })
    };
    $.fn.cycle.resetState = function (opts,
                                      fx) {
        fx = fx || opts.fx;
        opts.before = [];
        opts.after = [];
        opts.cssBefore = $.extend({}, opts.original.cssBefore);
        opts.cssAfter = $.extend({}, opts.original.cssAfter);
        opts.animIn = $.extend({}, opts.original.animIn);
        opts.animOut = $.extend({}, opts.original.animOut);
        opts.fxFn = null;
        $.each(opts.original.before, function () {
            opts.before.push(this)
        });
        $.each(opts.original.after, function () {
            opts.after.push(this)
        });
        var init = $.fn.cycle.transitions[fx];
        if ($.isFunction(init))init(opts.$cont, $(opts.elements), opts)
    };
    $.fn.cycle.updateActivePagerLink =
        function (pager, currSlide, clsName) {
            $(pager).each(function () {
                $(this).children().removeClass(clsName).eq(currSlide).addClass(clsName)
            })
        };
    $.fn.cycle.next = function (opts) {
        advance(opts, 1)
    };
    $.fn.cycle.prev = function (opts) {
        advance(opts, 0)
    };
    $.fn.cycle.createPagerAnchor = function (i, el, $p, els, opts) {
        var a;
        if ($.isFunction(opts.pagerAnchorBuilder)) {
            a = opts.pagerAnchorBuilder(i, el);
            debug("pagerAnchorBuilder(" + i + ", el) returned: " + a)
        } else a = '\x3ca href\x3d"#"\x3e' + (i + 1) + "\x3c/a\x3e";
        if (!a)return;
        var $a = $(a);
        if ($a.parents("body").length ===
            0) {
            var arr = [];
            if ($p.length > 1) {
                $p.each(function () {
                    var $clone = $a.clone(true);
                    $(this).append($clone);
                    arr.push($clone[0])
                });
                $a = $(arr)
            } else $a.appendTo($p)
        }
        opts.pagerAnchors = opts.pagerAnchors || [];
        opts.pagerAnchors.push($a);
        var pagerFn = function (e) {
            e.preventDefault();
            opts.nextSlide = i;
            var p = opts.$cont[0];
            var timeout = p.cycleTimeout;
            if (timeout) {
                clearTimeout(timeout);
                p.cycleTimeout = 0
            }
            var cb = opts.onPagerEvent || opts.pagerClick;
            if ($.isFunction(cb))cb(opts.nextSlide, els[opts.nextSlide]);
            go(els, opts, 1, opts.currSlide <
            i)
        };
        if (/mouseenter|mouseover/i.test(opts.pagerEvent))$a.hover(pagerFn, function () {
        }); else $a.bind(opts.pagerEvent, pagerFn);
        if (!/^click/.test(opts.pagerEvent) && !opts.allowPagerClickBubble)$a.bind("click.cycle", function () {
            return false
        });
        var cont = opts.$cont[0];
        var pauseFlag = false;
        if (opts.pauseOnPagerHover)$a.hover(function () {
            pauseFlag = true;
            cont.cyclePause++;
            triggerPause(cont, true, true)
        }, function () {
            if (pauseFlag)cont.cyclePause--;
            triggerPause(cont, true, true)
        })
    };
    $.fn.cycle.hopsFromLast = function (opts, fwd) {
        var hops;
        var l = opts.lastSlide;
        var c = opts.currSlide;
        if (fwd)hops = c > l ? c - l : opts.slideCount - l; else hops = c < l ? l - c : l + opts.slideCount - c;
        return hops
    };
    $.fn.cycle.commonReset = function (curr, next, opts, w, h, rev) {
        $(opts.elements).not(curr).hide();
        if (typeof opts.cssBefore.opacity == "undefined")opts.cssBefore.opacity = 1;
        opts.cssBefore.display = "block";
        if (opts.slideResize && w !== false && next.cycleW > 0)opts.cssBefore.width = next.cycleW;
        if (opts.slideResize && h !== false && next.cycleH > 0)opts.cssBefore.height = next.cycleH;
        opts.cssAfter = opts.cssAfter ||
        {};
        opts.cssAfter.display = "none";
        $(curr).css("zIndex", opts.slideCount + (rev === true ? 1 : 0));
        $(next).css("zIndex", opts.slideCount + (rev === true ? 0 : 1))
    };
    $.fn.cycle.custom = function (curr, next, opts, cb, fwd, speedOverride) {
        var $l = $(curr);
        var $n = $(next);
        var speedIn = opts.speedIn;
        var speedOut = opts.speedOut;
        var easeIn = opts.easeIn;
        var easeOut = opts.easeOut;
        $n.css(opts.cssBefore);
        if (speedOverride) {
            if (typeof speedOverride == "number")speedIn = speedOut = speedOverride; else speedIn = speedOut = 1;
            easeIn = easeOut = null
        }
        var fn = function () {
            $n.animate(opts.animIn,
                speedIn, easeIn, function () {
                    cb()
                })
        };
        $l.animate(opts.animOut, speedOut, easeOut, function () {
            $l.css(opts.cssAfter);
            if (!opts.sync)fn()
        });
        if (opts.sync)fn()
    };
    $.fn.cycle.transitions = {
        fade: function ($cont, $slides, opts$$0) {
            $slides.not(":eq(" + opts$$0.currSlide + ")").css("opacity", 0);
            opts$$0.before.push(function (curr, next, opts) {
                $.fn.cycle.commonReset(curr, next, opts);
                opts.cssBefore.opacity = 0
            });
            opts$$0.animIn = {opacity: 1};
            opts$$0.animOut = {opacity: 0};
            opts$$0.cssBefore = {top: 0, left: 0}
        }
    };
    $.fn.cycle.ver = function () {
        return ver
    };
    $.fn.cycle.defaults = {
        activePagerClass: "activeSlide",
        after: null,
        allowPagerClickBubble: false,
        animIn: null,
        animOut: null,
        aspect: false,
        autostop: 0,
        autostopCount: 0,
        backwards: false,
        before: null,
        center: null,
        cleartype: !$.support.opacity,
        cleartypeNoBg: false,
        containerResize: 1,
        containerResizeHeight: 0,
        continuous: 0,
        cssAfter: null,
        cssBefore: null,
        delay: 0,
        easeIn: null,
        easeOut: null,
        easing: null,
        end: null,
        fastOnEvent: 0,
        fit: 0,
        fx: "fade",
        fxFn: null,
        height: "auto",
        manualTrump: true,
        metaAttr: "cycle",
        next: null,
        nowrap: 0,
        onPagerEvent: null,
        onPrevNextEvent: null,
        pager: null,
        pagerAnchorBuilder: null,
        pagerEvent: "click.cycle",
        pause: 0,
        pauseOnPagerHover: 0,
        prev: null,
        prevNextEvent: "click.cycle",
        random: 0,
        randomizeEffects: 1,
        requeueOnImageNotLoaded: true,
        requeueTimeout: 250,
        rev: 0,
        shuffle: null,
        skipInitializationCallbacks: false,
        slideExpr: null,
        slideResize: 1,
        speed: 1E3,
        speedIn: null,
        speedOut: null,
        startingSlide: undefined,
        sync: 1,
        timeout: 4E3,
        timeoutFn: null,
        updateActivePagerLink: null,
        width: null
    }
})(jQuery);
(function ($) {
    $.fn.cycle.transitions.none = function ($cont, $slides, opts$$0) {
        opts$$0.fxFn = function (curr, next, opts, after) {
            $(next).show();
            $(curr).hide();
            after()
        }
    };
    $.fn.cycle.transitions.fadeout = function ($cont, $slides, opts$$0) {
        $slides.not(":eq(" + opts$$0.currSlide + ")").css({display: "block", "opacity": 1});
        opts$$0.before.push(function (curr, next, opts, w, h, rev) {
            $(curr).css("zIndex", opts.slideCount + (rev !== true ? 1 : 0));
            $(next).css("zIndex", opts.slideCount + (rev !== true ? 0 : 1))
        });
        opts$$0.animIn.opacity = 1;
        opts$$0.animOut.opacity =
            0;
        opts$$0.cssBefore.opacity = 1;
        opts$$0.cssBefore.display = "block";
        opts$$0.cssAfter.zIndex = 0
    };
    $.fn.cycle.transitions.scrollUp = function ($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssBefore.top = h;
        opts.cssBefore.left = 0;
        opts.cssFirst.top = 0;
        opts.animIn.top = 0;
        opts.animOut.top = -h
    };
    $.fn.cycle.transitions.scrollDown = function ($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var h = $cont.height();
        opts.cssFirst.top = 0;
        opts.cssBefore.top = -h;
        opts.cssBefore.left = 0;
        opts.animIn.top = 0;
        opts.animOut.top = h
    };
    $.fn.cycle.transitions.scrollLeft = function ($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var w = $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = 0 - w
    };
    $.fn.cycle.transitions.scrollRight = function ($cont, $slides, opts) {
        $cont.css("overflow", "hidden");
        opts.before.push($.fn.cycle.commonReset);
        var w =
            $cont.width();
        opts.cssFirst.left = 0;
        opts.cssBefore.left = -w;
        opts.cssBefore.top = 0;
        opts.animIn.left = 0;
        opts.animOut.left = w
    };
    $.fn.cycle.transitions.scrollHorz = function ($cont, $slides, opts$$0) {
        $cont.css("overflow", "hidden").width();
        opts$$0.before.push(function (curr, next, opts, fwd) {
            if (opts.rev)fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.left = fwd ? next.cycleW - 1 : 1 - next.cycleW;
            opts.animOut.left = fwd ? -curr.cycleW : curr.cycleW
        });
        opts$$0.cssFirst.left = 0;
        opts$$0.cssBefore.top = 0;
        opts$$0.animIn.left =
            0;
        opts$$0.animOut.top = 0
    };
    $.fn.cycle.transitions.scrollVert = function ($cont, $slides, opts$$0) {
        $cont.css("overflow", "hidden");
        opts$$0.before.push(function (curr, next, opts, fwd) {
            if (opts.rev)fwd = !fwd;
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssBefore.top = fwd ? 1 - next.cycleH : next.cycleH - 1;
            opts.animOut.top = fwd ? curr.cycleH : -curr.cycleH
        });
        opts$$0.cssFirst.top = 0;
        opts$$0.cssBefore.left = 0;
        opts$$0.animIn.top = 0;
        opts$$0.animOut.left = 0
    };
    $.fn.cycle.transitions.slideX = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr,
                                      next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.animIn.width = next.cycleW
        });
        opts$$0.cssBefore.left = 0;
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.width = 0;
        opts$$0.animIn.width = "show";
        opts$$0.animOut.width = 0
    };
    $.fn.cycle.transitions.slideY = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $(opts.elements).not(curr).hide();
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH
        });
        opts$$0.cssBefore.left =
            0;
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.height = 0;
        opts$$0.animIn.height = "show";
        opts$$0.animOut.height = 0
    };
    $.fn.cycle.transitions.shuffle = function ($cont, $slides, opts$$0) {
        var i$$0;
        var w = $cont.css("overflow", "visible").width();
        $slides.css({left: 0, top: 0});
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true)
        });
        if (!opts$$0.speedAdjusted) {
            opts$$0.speed = opts$$0.speed / 2;
            opts$$0.speedAdjusted = true
        }
        opts$$0.random = 0;
        opts$$0.shuffle = opts$$0.shuffle || {left: -w, top: 15};
        opts$$0.els = [];
        for (i$$0 = 0; i$$0 < $slides.length; i$$0++)opts$$0.els.push($slides[i$$0]);
        for (i$$0 = 0; i$$0 < opts$$0.currSlide; i$$0++)opts$$0.els.push(opts$$0.els.shift());
        opts$$0.fxFn = function (curr, next, opts, cb, fwd) {
            if (opts.rev)fwd = !fwd;
            var $el = fwd ? $(curr) : $(next);
            $(next).css(opts.cssBefore);
            var count = opts.slideCount;
            $el.animate(opts.shuffle, opts.speedIn, opts.easeIn, function () {
                var hops = $.fn.cycle.hopsFromLast(opts, fwd);
                for (var k = 0; k < hops; k++)if (fwd)opts.els.push(opts.els.shift()); else opts.els.unshift(opts.els.pop());
                if (fwd) {
                    var i = 0;
                    for (var len = opts.els.length; i < len; i++)$(opts.els[i]).css("z-index", len - i + count)
                } else {
                    var z = $(curr).css("z-index");
                    $el.css("z-index", parseInt(z, 10) + 1 + count)
                }
                $el.animate({left: 0, top: 0}, opts.speedOut, opts.easeOut, function () {
                    $(fwd ? this : curr).hide();
                    if (cb)cb()
                })
            })
        };
        $.extend(opts$$0.cssBefore, {display: "block", opacity: 1, top: 0, left: 0})
    };
    $.fn.cycle.transitions.turnUp = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = next.cycleH;
            opts.animIn.height = next.cycleH;
            opts.animOut.width = next.cycleW
        });
        opts$$0.cssFirst.top = 0;
        opts$$0.cssBefore.left = 0;
        opts$$0.cssBefore.height = 0;
        opts$$0.animIn.top = 0;
        opts$$0.animOut.height = 0
    };
    $.fn.cycle.transitions.turnDown = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH
        });
        opts$$0.cssFirst.top = 0;
        opts$$0.cssBefore.left = 0;
        opts$$0.cssBefore.top =
            0;
        opts$$0.cssBefore.height = 0;
        opts$$0.animOut.height = 0
    };
    $.fn.cycle.transitions.turnLeft = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = next.cycleW;
            opts.animIn.width = next.cycleW
        });
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.width = 0;
        opts$$0.animIn.left = 0;
        opts$$0.animOut.width = 0
    };
    $.fn.cycle.transitions.turnRight = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr,
                next, opts, false, true);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW
        });
        $.extend(opts$$0.cssBefore, {top: 0, left: 0, width: 0});
        opts$$0.animIn.left = 0;
        opts$$0.animOut.width = 0
    };
    $.fn.cycle.transitions.zoom = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.cssBefore.left = next.cycleW / 2;
            $.extend(opts.animIn, {top: 0, left: 0, width: next.cycleW, height: next.cycleH});
            $.extend(opts.animOut,
                {width: 0, height: 0, top: curr.cycleH / 2, left: curr.cycleW / 2})
        });
        opts$$0.cssFirst.top = 0;
        opts$$0.cssFirst.left = 0;
        opts$$0.cssBefore.width = 0;
        opts$$0.cssBefore.height = 0
    };
    $.fn.cycle.transitions.fadeZoom = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, false);
            opts.cssBefore.left = next.cycleW / 2;
            opts.cssBefore.top = next.cycleH / 2;
            $.extend(opts.animIn, {top: 0, left: 0, width: next.cycleW, height: next.cycleH})
        });
        opts$$0.cssBefore.width = 0;
        opts$$0.cssBefore.height =
            0;
        opts$$0.animOut.opacity = 0
    };
    $.fn.cycle.transitions.blindX = function ($cont, $slides, opts$$0) {
        var w = $cont.css("overflow", "hidden").width();
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.width = next.cycleW;
            opts.animOut.left = curr.cycleW
        });
        opts$$0.cssBefore.left = w;
        opts$$0.cssBefore.top = 0;
        opts$$0.animIn.left = 0;
        opts$$0.animOut.left = w
    };
    $.fn.cycle.transitions.blindY = function ($cont, $slides, opts$$0) {
        var h = $cont.css("overflow", "hidden").height();
        opts$$0.before.push(function (curr,
                                      next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH
        });
        opts$$0.cssBefore.top = h;
        opts$$0.cssBefore.left = 0;
        opts$$0.animIn.top = 0;
        opts$$0.animOut.top = h
    };
    $.fn.cycle.transitions.blindZ = function ($cont, $slides, opts$$0) {
        var h = $cont.css("overflow", "hidden").height();
        var w = $cont.width();
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH
        });
        opts$$0.cssBefore.top =
            h;
        opts$$0.cssBefore.left = w;
        opts$$0.animIn.top = 0;
        opts$$0.animIn.left = 0;
        opts$$0.animOut.top = h;
        opts$$0.animOut.left = w
    };
    $.fn.cycle.transitions.growX = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true);
            opts.cssBefore.left = this.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = 0
        });
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.width = 0
    };
    $.fn.cycle.transitions.growY = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr,
                                      next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false);
            opts.cssBefore.top = this.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = this.cycleH;
            opts.animOut.top = 0
        });
        opts$$0.cssBefore.height = 0;
        opts$$0.cssBefore.left = 0
    };
    $.fn.cycle.transitions.curtainX = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, false, true, true);
            opts.cssBefore.left = next.cycleW / 2;
            opts.animIn.left = 0;
            opts.animIn.width = this.cycleW;
            opts.animOut.left = curr.cycleW / 2;
            opts.animOut.width =
                0
        });
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.width = 0
    };
    $.fn.cycle.transitions.curtainY = function ($cont, $slides, opts$$0) {
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, false, true);
            opts.cssBefore.top = next.cycleH / 2;
            opts.animIn.top = 0;
            opts.animIn.height = next.cycleH;
            opts.animOut.top = curr.cycleH / 2;
            opts.animOut.height = 0
        });
        opts$$0.cssBefore.height = 0;
        opts$$0.cssBefore.left = 0
    };
    $.fn.cycle.transitions.cover = function ($cont, $slides, opts$$0) {
        var d = opts$$0.direction || "left";
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts);
            opts.cssAfter.display = "";
            if (d == "right")opts.cssBefore.left = -w; else if (d == "up")opts.cssBefore.top = h; else if (d == "down")opts.cssBefore.top = -h; else opts.cssBefore.left = w
        });
        opts$$0.animIn.left = 0;
        opts$$0.animIn.top = 0;
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.left = 0
    };
    $.fn.cycle.transitions.uncover = function ($cont, $slides, opts$$0) {
        var d = opts$$0.direction || "left";
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (d == "right")opts.animOut.left = w; else if (d == "up")opts.animOut.top = -h; else if (d == "down")opts.animOut.top = h; else opts.animOut.left = -w
        });
        opts$$0.animIn.left = 0;
        opts$$0.animIn.top = 0;
        opts$$0.cssBefore.top = 0;
        opts$$0.cssBefore.left = 0
    };
    $.fn.cycle.transitions.toss = function ($cont, $slides, opts$$0) {
        var w = $cont.css("overflow", "visible").width();
        var h =
            $cont.height();
        opts$$0.before.push(function (curr, next, opts) {
            $.fn.cycle.commonReset(curr, next, opts, true, true, true);
            if (!opts.animOut.left && !opts.animOut.top)$.extend(opts.animOut, {
                left: w * 2,
                top: -h / 2,
                opacity: 0
            }); else opts.animOut.opacity = 0
        });
        opts$$0.cssBefore.left = 0;
        opts$$0.cssBefore.top = 0;
        opts$$0.animIn.left = 0
    };
    $.fn.cycle.transitions.wipe = function ($cont, $slides, opts$$0) {
        var w = $cont.css("overflow", "hidden").width();
        var h = $cont.height();
        opts$$0.cssBefore = opts$$0.cssBefore || {};
        var clip;
        if (opts$$0.clip)if (/l2r/.test(opts$$0.clip))clip =
            "rect(0px 0px " + h + "px 0px)"; else if (/r2l/.test(opts$$0.clip))clip = "rect(0px " + w + "px " + h + "px " + w + "px)"; else if (/t2b/.test(opts$$0.clip))clip = "rect(0px " + w + "px 0px 0px)"; else if (/b2t/.test(opts$$0.clip))clip = "rect(" + h + "px " + w + "px " + h + "px 0px)"; else if (/zoom/.test(opts$$0.clip)) {
            var top = parseInt(h / 2, 10);
            var left = parseInt(w / 2, 10);
            clip = "rect(" + top + "px " + left + "px " + top + "px " + left + "px)"
        }
        opts$$0.cssBefore.clip = opts$$0.cssBefore.clip || clip || "rect(0px 0px 0px 0px)";
        var d = opts$$0.cssBefore.clip.match(/(\d+)/g);
        var t = parseInt(d[0], 10);
        var r = parseInt(d[1], 10);
        var b = parseInt(d[2], 10);
        var l = parseInt(d[3], 10);
        opts$$0.before.push(function (curr, next, opts) {
            if (curr == next)return;
            var $curr = $(curr);
            var $next = $(next);
            $.fn.cycle.commonReset(curr, next, opts, true, true, false);
            opts.cssAfter.display = "block";
            var step = 1;
            var count = parseInt(opts.speedIn / 13, 10) - 1;
            (function f() {
                var tt = t ? t - parseInt(step * (t / count), 10) : 0;
                var ll = l ? l - parseInt(step * (l / count), 10) : 0;
                var bb = b < h ? b + parseInt(step * ((h - b) / count || 1), 10) : h;
                var rr = r < w ? r + parseInt(step *
                ((w - r) / count || 1), 10) : w;
                $next.css({clip: "rect(" + tt + "px " + rr + "px " + bb + "px " + ll + "px)"});
                step++ <= count ? setTimeout(f, 13) : $curr.css("display", "none")
            })()
        });
        $.extend(opts$$0.cssBefore, {display: "block", opacity: 1, top: 0, left: 0});
        opts$$0.animIn = {left: 0};
        opts$$0.animOut = {left: 0}
    }
})(jQuery);
var module$jquery_easing = {};
module$jquery;
jQuery.easing["jswing"] = jQuery.easing["swing"];
jQuery.extend(jQuery.easing, {
    def: "easeOutQuad", swing: function (x, t, b, c, d) {
        return jQuery.easing[jQuery.easing.def](x, t, b, c, d)
    }, easeInQuad: function (x, t, b, c, d) {
        return c * (t /= d) * t + b
    }, easeOutQuad: function (x, t, b, c, d) {
        return -c * (t /= d) * (t - 2) + b
    }, easeInOutQuad: function (x, t, b, c, d) {
        if ((t /= d / 2) < 1)return c / 2 * t * t + b;
        return -c / 2 * (--t * (t - 2) - 1) + b
    }, easeInCubic: function (x, t, b, c, d) {
        return c * (t /= d) * t * t + b
    }, easeOutCubic: function (x, t, b, c, d) {
        return c * ((t = t / d - 1) * t * t + 1) + b
    }, easeInOutCubic: function (x, t, b, c, d) {
        if ((t /= d / 2) < 1)return c /
            2 * t * t * t + b;
        return c / 2 * ((t -= 2) * t * t + 2) + b
    }, easeInQuart: function (x, t, b, c, d) {
        return c * (t /= d) * t * t * t + b
    }, easeOutQuart: function (x, t, b, c, d) {
        return -c * ((t = t / d - 1) * t * t * t - 1) + b
    }, easeInOutQuart: function (x, t, b, c, d) {
        if ((t /= d / 2) < 1)return c / 2 * t * t * t * t + b;
        return -c / 2 * ((t -= 2) * t * t * t - 2) + b
    }, easeInQuint: function (x, t, b, c, d) {
        return c * (t /= d) * t * t * t * t + b
    }, easeOutQuint: function (x, t, b, c, d) {
        return c * ((t = t / d - 1) * t * t * t * t + 1) + b
    }, easeInOutQuint: function (x, t, b, c, d) {
        if ((t /= d / 2) < 1)return c / 2 * t * t * t * t * t + b;
        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b
    }, easeInSine: function (x,
                             t, b, c, d) {
        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b
    }, easeOutSine: function (x, t, b, c, d) {
        return c * Math.sin(t / d * (Math.PI / 2)) + b
    }, easeInOutSine: function (x, t, b, c, d) {
        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b
    }, easeInExpo: function (x, t, b, c, d) {
        return t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b
    }, easeOutExpo: function (x, t, b, c, d) {
        return t == d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b
    }, easeInOutExpo: function (x, t, b, c, d) {
        if (t == 0)return b;
        if (t == d)return b + c;
        if ((t /= d / 2) < 1)return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b
    },
    easeInCirc: function (x, t, b, c, d) {
        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b
    }, easeOutCirc: function (x, t, b, c, d) {
        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b
    }, easeInOutCirc: function (x, t, b, c, d) {
        if ((t /= d / 2) < 1)return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b
    }, easeInElastic: function (x, t, b, c, d) {
        var s = 1.70158;
        var p = 0;
        var a = c;
        if (t == 0)return b;
        if ((t /= d) == 1)return b + c;
        if (!p)p = d * 0.3;
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4
        } else s = p / (2 * Math.PI) * Math.asin(c / a);
        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * 2 * Math.PI /
            p)) + b
    }, easeOutElastic: function (x, t, b, c, d) {
        var s = 1.70158;
        var p = 0;
        var a = c;
        if (t == 0)return b;
        if ((t /= d) == 1)return b + c;
        if (!p)p = d * 0.3;
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4
        } else s = p / (2 * Math.PI) * Math.asin(c / a);
        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * 2 * Math.PI / p) + c + b
    }, easeInOutElastic: function (x, t, b, c, d) {
        var s = 1.70158;
        var p = 0;
        var a = c;
        if (t == 0)return b;
        if ((t /= d / 2) == 2)return b + c;
        if (!p)p = d * 0.3 * 1.5;
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4
        } else s = p / (2 * Math.PI) * Math.asin(c / a);
        if (t < 1)return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d -
            s) * 2 * Math.PI / p) + b;
        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * 2 * Math.PI / p) * 0.5 + c + b
    }, easeInBack: function (x, t, b, c, d, s) {
        if (s == undefined)s = 1.70158;
        return c * (t /= d) * t * ((s + 1) * t - s) + b
    }, easeOutBack: function (x, t, b, c, d, s) {
        if (s == undefined)s = 1.70158;
        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b
    }, easeInOutBack: function (x, t, b, c, d, s) {
        if (s == undefined)s = 1.70158;
        if ((t /= d / 2) < 1)return c / 2 * t * t * (((s *= 1.525) + 1) * t - s) + b;
        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b
    }, easeInBounce: function (x, t, b, c, d) {
        return c - jQuery.easing.easeOutBounce(x,
                d - t, 0, c, d) + b
    }, easeOutBounce: function (x, t, b, c, d) {
        if ((t /= d) < 1 / 2.75)return c * 7.5625 * t * t + b; else if (t < 2 / 2.75)return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b; else if (t < 2.5 / 2.75)return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b; else return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b
    }, easeInOutBounce: function (x, t, b, c, d) {
        if (t < d / 2)return jQuery.easing.easeInBounce(x, t * 2, 0, c, d) * 0.5 + b;
        return jQuery.easing.easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b
    }
});
var module$jquery_hoverintent = {};
module$jquery;
(function ($) {
    $.fn.hoverIntent = function (handlerIn, handlerOut, selector) {
        var cfg = {interval: 100, sensitivity: 7, timeout: 0};
        if (typeof handlerIn === "object")cfg = $.extend(cfg, handlerIn); else if ($.isFunction(handlerOut))cfg = $.extend(cfg, {
            over: handlerIn,
            out: handlerOut,
            selector: selector
        }); else cfg = $.extend(cfg, {over: handlerIn, out: handlerIn, selector: handlerOut});
        var cX;
        var cY;
        var pX;
        var pY;
        var track = function (ev) {
            cX = ev.pageX;
            cY = ev.pageY
        };
        var compare = function (ev, ob) {
            ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            if (Math.abs(pX - cX) + Math.abs(pY - cY) < cfg.sensitivity) {
                $(ob).off("mousemove.hoverIntent", track);
                ob.hoverIntent_s = 1;
                return cfg.over.apply(ob, [ev])
            } else {
                pX = cX;
                pY = cY;
                ob.hoverIntent_t = setTimeout(function () {
                    compare(ev, ob)
                }, cfg.interval)
            }
        };
        var delay = function (ev, ob) {
            ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            ob.hoverIntent_s = 0;
            return cfg.out.apply(ob, [ev])
        };
        var handleHover = function (e) {
            var ev = jQuery.extend({}, e);
            var ob = this;
            if (ob.hoverIntent_t)ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            if (e.type ==
                "mouseenter") {
                pX = ev.pageX;
                pY = ev.pageY;
                $(ob).on("mousemove.hoverIntent", track);
                if (ob.hoverIntent_s != 1)ob.hoverIntent_t = setTimeout(function () {
                    compare(ev, ob)
                }, cfg.interval)
            } else {
                $(ob).off("mousemove.hoverIntent", track);
                if (ob.hoverIntent_s == 1)ob.hoverIntent_t = setTimeout(function () {
                    delay(ev, ob)
                }, cfg.timeout)
            }
        };
        return this.on({"mouseenter.hoverIntent": handleHover, "mouseleave.hoverIntent": handleHover}, cfg.selector)
    }
})(jQuery);
var module$jquery_mobile_touch = {};
module$jquery;
(function (root, doc, factory) {
    if (typeof define === "function" && define.amd)define(["jquery"], function ($) {
        factory($, root, doc);
        return $.mobile
    }); else factory(root.jQuery, root, doc)
})(this, document, function (jQuery, window$$0, document$$0, undefined$$0) {
    (function ($, window, document, undefined) {
        function getNativeEvent(event) {
            for (; event && typeof event.originalEvent !== "undefined";)event = event.originalEvent;
            return event
        }

        function createVirtualEvent(event, eventType) {
            var t = event.type;
            var oe;
            var props;
            var ne;
            var prop;
            var ct;
            var touch;
            var i;
            var j;
            var len;
            event = $.Event(event);
            event.type = eventType;
            oe = event.originalEvent;
            props = $.event.props;
            if (t.search(/^(mouse|click)/) > -1)props = mouseEventProps;
            if (oe)for (i = props.length, prop; i;) {
                prop = props[--i];
                event[prop] = oe[prop]
            }
            if (t.search(/mouse(down|up)|click/) > -1 && !event.which)event.which = 1;
            if (t.search(/^touch/) !== -1) {
                ne = getNativeEvent(oe);
                t = ne.touches;
                ct = ne.changedTouches;
                touch = t && t.length ? t[0] : ct && ct.length ? ct[0] : undefined;
                if (touch)for (j = 0, len = touchEventProps.length; j < len; j++) {
                    prop =
                        touchEventProps[j];
                    event[prop] = touch[prop]
                }
            }
            return event
        }

        function getVirtualBindingFlags(element) {
            var flags = {};
            var b;
            for (var k; element;) {
                b = $.data(element, dataPropertyName);
                for (k in b)if (b[k])flags[k] = flags.hasVirtualBinding = true;
                element = element.parentNode
            }
            return flags
        }

        function getClosestElementWithVirtualBinding(element, eventType) {
            for (var b; element;) {
                b = $.data(element, dataPropertyName);
                if (b && (!eventType || b[eventType]))return element;
                element = element.parentNode
            }
            return null
        }

        function enableTouchBindings() {
            blockTouchTriggers =
                false
        }

        function disableTouchBindings() {
            blockTouchTriggers = true
        }

        function enableMouseBindings() {
            lastTouchID = 0;
            clickBlockList.length = 0;
            blockMouseTriggers = false;
            disableTouchBindings()
        }

        function disableMouseBindings() {
            enableTouchBindings()
        }

        function startResetTimer() {
            clearResetTimer();
            resetTimerID = setTimeout(function () {
                resetTimerID = 0;
                enableMouseBindings()
            }, $.vmouse.resetTimerDuration)
        }

        function clearResetTimer() {
            if (resetTimerID) {
                clearTimeout(resetTimerID);
                resetTimerID = 0
            }
        }

        function triggerVirtualEvent(eventType,
                                     event, flags) {
            var ve;
            if (flags && flags[eventType] || !flags && getClosestElementWithVirtualBinding(event.target, eventType)) {
                ve = createVirtualEvent(event, eventType);
                $(event.target).trigger(ve)
            }
            return ve
        }

        function mouseEventCallback(event) {
            var touchID = $.data(event.target, touchTargetPropertyName);
            var ve;
            if (!blockMouseTriggers && (!lastTouchID || lastTouchID !== touchID)) {
                ve = triggerVirtualEvent("v" + event.type, event);
                if (ve) {
                    if (ve.isDefaultPrevented())event.preventDefault();
                    if (ve.isPropagationStopped())event.stopPropagation();
                    if (ve.isImmediatePropagationStopped())event.stopImmediatePropagation()
                }
            }
        }

        function handleTouchStart(event) {
            var touches = getNativeEvent(event).touches;
            var target;
            var flags;
            var t;
            if (touches && touches.length === 1) {
                target = event.target;
                flags = getVirtualBindingFlags(target);
                if (flags.hasVirtualBinding) {
                    lastTouchID = nextTouchID++;
                    $.data(target, touchTargetPropertyName, lastTouchID);
                    clearResetTimer();
                    disableMouseBindings();
                    didScroll = false;
                    t = getNativeEvent(event).touches[0];
                    startX = t.pageX;
                    startY = t.pageY;
                    triggerVirtualEvent("vmouseover",
                        event, flags);
                    triggerVirtualEvent("vmousedown", event, flags)
                }
            }
        }

        function handleScroll(event) {
            if (blockTouchTriggers)return;
            if (!didScroll)triggerVirtualEvent("vmousecancel", event, getVirtualBindingFlags(event.target));
            didScroll = true;
            startResetTimer()
        }

        function handleTouchMove(event) {
            if (blockTouchTriggers)return;
            var t = getNativeEvent(event).touches[0];
            var didCancel = didScroll;
            var moveThreshold = $.vmouse.moveDistanceThreshold;
            var flags = getVirtualBindingFlags(event.target);
            didScroll = didScroll || Math.abs(t.pageX -
            startX) > moveThreshold || Math.abs(t.pageY - startY) > moveThreshold;
            if (didScroll && !didCancel)triggerVirtualEvent("vmousecancel", event, flags);
            triggerVirtualEvent("vmousemove", event, flags);
            startResetTimer()
        }

        function handleTouchEnd(event) {
            if (blockTouchTriggers)return;
            disableTouchBindings();
            var flags = getVirtualBindingFlags(event.target);
            var ve;
            var t;
            triggerVirtualEvent("vmouseup", event, flags);
            if (!didScroll) {
                ve = triggerVirtualEvent("vclick", event, flags);
                if (ve && ve.isDefaultPrevented()) {
                    t = getNativeEvent(event).changedTouches[0];
                    clickBlockList.push({touchID: lastTouchID, x: t.clientX, y: t.clientY});
                    blockMouseTriggers = true
                }
            }
            triggerVirtualEvent("vmouseout", event, flags);
            didScroll = false;
            startResetTimer()
        }

        function hasVirtualBindings(ele) {
            var bindings = $.data(ele, dataPropertyName);
            var k;
            if (bindings)for (k in bindings)if (bindings[k])return true;
            return false
        }

        function dummyMouseHandler() {
        }

        function getSpecialEventObject(eventType) {
            var realType = eventType.substr(1);
            return {
                setup: function () {
                    if (!hasVirtualBindings(this))$.data(this, dataPropertyName,
                        {});
                    var bindings = $.data(this, dataPropertyName);
                    bindings[eventType] = true;
                    activeDocHandlers[eventType] = (activeDocHandlers[eventType] || 0) + 1;
                    if (activeDocHandlers[eventType] === 1)$document.bind(realType, mouseEventCallback);
                    $(this).bind(realType, dummyMouseHandler);
                    if (eventCaptureSupported) {
                        activeDocHandlers["touchstart"] = (activeDocHandlers["touchstart"] || 0) + 1;
                        if (activeDocHandlers["touchstart"] === 1)$document.bind("touchstart", handleTouchStart).bind("touchend", handleTouchEnd).bind("touchmove", handleTouchMove).bind("scroll",
                            handleScroll)
                    }
                }, teardown: function () {
                    --activeDocHandlers[eventType];
                    if (!activeDocHandlers[eventType])$document.unbind(realType, mouseEventCallback);
                    if (eventCaptureSupported) {
                        --activeDocHandlers["touchstart"];
                        if (!activeDocHandlers["touchstart"])$document.unbind("touchstart", handleTouchStart).unbind("touchmove", handleTouchMove).unbind("touchend", handleTouchEnd).unbind("scroll", handleScroll)
                    }
                    var $this = $(this);
                    var bindings = $.data(this, dataPropertyName);
                    if (bindings)bindings[eventType] = false;
                    $this.unbind(realType,
                        dummyMouseHandler);
                    if (!hasVirtualBindings(this))$this.removeData(dataPropertyName)
                }
            }
        }

        var dataPropertyName = "virtualMouseBindings";
        var touchTargetPropertyName = "virtualTouchID";
        var virtualEventNames = "vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" ");
        var touchEventProps = "clientX clientY pageX pageY screenX screenY".split(" ");
        var mouseHookProps = $.event.mouseHooks ? $.event.mouseHooks.props : [];
        var mouseEventProps = $.event.props.concat(mouseHookProps);
        var activeDocHandlers =
        {};
        var resetTimerID = 0;
        var startX = 0;
        var startY = 0;
        var didScroll = false;
        var clickBlockList = [];
        var blockMouseTriggers = false;
        var blockTouchTriggers = false;
        var eventCaptureSupported = "addEventListener"in document;
        var $document = $(document);
        var nextTouchID = 1;
        var lastTouchID = 0;
        var threshold;
        var i$$0;
        $.vmouse = {moveDistanceThreshold: 10, clickDistanceThreshold: 10, resetTimerDuration: 1500};
        for (i$$0 = 0; i$$0 < virtualEventNames.length; i$$0++)$.event.special[virtualEventNames[i$$0]] = getSpecialEventObject(virtualEventNames[i$$0]);
        if (eventCaptureSupported)document.addEventListener("click", function (e) {
            var cnt = clickBlockList.length;
            var target = e.target;
            var x;
            var y;
            var ele;
            var i;
            var o;
            var touchID;
            if (cnt) {
                x = e.clientX;
                y = e.clientY;
                threshold = $.vmouse.clickDistanceThreshold;
                for (ele = target; ele;) {
                    for (i = 0; i < cnt; i++) {
                        o = clickBlockList[i];
                        touchID = 0;
                        if (ele === target && Math.abs(o.x - x) < threshold && Math.abs(o.y - y) < threshold || $.data(ele, touchTargetPropertyName) === o.touchID) {
                            e.preventDefault();
                            e.stopPropagation();
                            return
                        }
                    }
                    ele = ele.parentNode
                }
            }
        }, true)
    })(jQuery,
        window$$0, document$$0);
    (function ($) {
        $.mobile = {}
    })(jQuery);
    (function ($, undefined) {
        var support = {touch: "ontouchend"in document$$0};
        $.mobile.support = $.mobile.support || {};
        $.extend($.support, support);
        $.extend($.mobile.support, support)
    })(jQuery);
    (function ($, window, undefined) {
        function triggerCustomEvent(obj, eventType, event) {
            var originalType = event.type;
            event.type = eventType;
            $.event.dispatch.call(obj, event);
            event.type = originalType
        }

        var $document = $(document$$0);
        var supportTouch = $.mobile.support.touch;
        var scrollEvent =
            "touchmove scroll";
        var touchStartEvent = supportTouch ? "touchstart" : "mousedown";
        var touchStopEvent = supportTouch ? "touchend" : "mouseup";
        var touchMoveEvent = supportTouch ? "touchmove" : "mousemove";
        $.each(("touchstart touchmove touchend " + "tap taphold " + "swipe swipeleft swiperight " + "scrollstart scrollstop").split(" "), function (i, name) {
            $.fn[name] = function (fn) {
                return fn ? this.bind(name, fn) : this.trigger(name)
            };
            if ($.attrFn)$.attrFn[name] = true
        });
        $.event.special.scrollstart = {
            enabled: true, setup: function () {
                function trigger(event,
                                 state) {
                    scrolling = state;
                    triggerCustomEvent(thisObject, scrolling ? "scrollstart" : "scrollstop", event)
                }

                var thisObject = this;
                var $this = $(thisObject);
                var scrolling;
                var timer;
                $this.bind(scrollEvent, function (event) {
                    if (!$.event.special.scrollstart.enabled)return;
                    if (!scrolling)trigger(event, true);
                    clearTimeout(timer);
                    timer = setTimeout(function () {
                        trigger(event, false)
                    }, 50)
                })
            }
        };
        $.event.special.tap = {
            tapholdThreshold: 750, setup: function () {
                var thisObject = this;
                var $this = $(thisObject);
                $this.bind("vmousedown", function (event$$0) {
                    function clearTapTimer() {
                        clearTimeout(timer)
                    }

                    function clearTapHandlers() {
                        clearTapTimer();
                        $this.unbind("vclick", clickHandler).unbind("vmouseup", clearTapTimer);
                        $document.unbind("vmousecancel", clearTapHandlers)
                    }

                    function clickHandler(event) {
                        clearTapHandlers();
                        if (origTarget === event.target)triggerCustomEvent(thisObject, "tap", event)
                    }

                    if (event$$0.which && event$$0.which !== 1)return false;
                    var origTarget = event$$0.target;
                    var timer;
                    $this.bind("vmouseup", clearTapTimer).bind("vclick", clickHandler);
                    $document.bind("vmousecancel", clearTapHandlers);
                    timer = setTimeout(function () {
                        triggerCustomEvent(thisObject,
                            "taphold", $.Event("taphold", {target: origTarget}))
                    }, $.event.special.tap.tapholdThreshold)
                })
            }
        };
        $.event.special.swipe = {
            scrollSupressionThreshold: 30,
            durationThreshold: 1E3,
            horizontalDistanceThreshold: 30,
            verticalDistanceThreshold: 75,
            start: function (event) {
                var data = event.originalEvent.touches ? event.originalEvent.touches[0] : event;
                return {time: (new Date).getTime(), coords: [data.pageX, data.pageY], origin: $(event.target)}
            },
            stop: function (event) {
                var data = event.originalEvent.touches ? event.originalEvent.touches[0] :
                    event;
                return {time: (new Date).getTime(), coords: [data.pageX, data.pageY]}
            },
            handleSwipe: function (start, stop) {
                if (stop.time - start.time < $.event.special.swipe.durationThreshold && Math.abs(start.coords[0] - stop.coords[0]) > $.event.special.swipe.horizontalDistanceThreshold && Math.abs(start.coords[1] - stop.coords[1]) < $.event.special.swipe.verticalDistanceThreshold)start.origin.trigger("swipe").trigger(start.coords[0] > stop.coords[0] ? "swipeleft" : "swiperight")
            },
            setup: function () {
                var thisObject = this;
                var $this = $(thisObject);
                $this.bind(touchStartEvent, function (event$$0) {
                    function moveHandler(event) {
                        if (!start)return;
                        stop = $.event.special.swipe.stop(event);
                        if (Math.abs(start.coords[0] - stop.coords[0]) > $.event.special.swipe.scrollSupressionThreshold)event.preventDefault()
                    }

                    var start = $.event.special.swipe.start(event$$0);
                    var stop;
                    $this.bind(touchMoveEvent, moveHandler).one(touchStopEvent, function () {
                        $this.unbind(touchMoveEvent, moveHandler);
                        if (start && stop)$.event.special.swipe.handleSwipe(start, stop);
                        start = stop = undefined
                    })
                })
            }
        };
        $.each({
            scrollstop: "scrollstart",
            taphold: "tap", swipeleft: "swipe", swiperight: "swipe"
        }, function (event, sourceEvent) {
            $.event.special[event] = {
                setup: function () {
                    $(this).bind(sourceEvent, $.noop)
                }
            }
        })
    })(jQuery, this)
});
var module$jquery_tools = {};
module$jquery;
(function (a$$1, b$$1) {
    function h$$0(a, b) {
        return (new Date(a, b + 1, 0)).getDate()
    }

    function i$$0(a, b) {
        for (a = "" + a, b = b || 2; a.length < b;)a = "0" + a;
        return a
    }

    function k$$0(a, b, c, e) {
        var f = b.getDate();
        var h = b.getDay();
        var k = b.getMonth();
        var l = b.getFullYear();
        var m = {
            d: f,
            dd: i$$0(f),
            ddd: g$$0[e].shortDays[h],
            dddd: g$$0[e].days[h],
            m: k + 1,
            mm: i$$0(k + 1),
            mmm: g$$0[e].shortMonths[k],
            mmmm: g$$0[e].months[k],
            yy: String(l).slice(2),
            yyyy: l
        };
        var n = d$$2[a](c, b, m, e);
        return j$$0.html(n).html()
    }

    function l$$0(a) {
        return parseInt(a, 10)
    }

    function m$$0(a,
                  b) {
        return a.getFullYear() === b.getFullYear() && a.getMonth() == b.getMonth() && a.getDate() == b.getDate()
    }

    function n$$0(a) {
        if (a !== b$$1) {
            if (a.constructor == Date)return a;
            if (typeof a == "string") {
                var c = a.split("-");
                if (c.length == 3)return new Date(l$$0(c[0]), l$$0(c[1]) - 1, l$$0(c[2]));
                if (!/^-?\d+$/.test(a))return;
                a = l$$0(a)
            }
            var d = new Date;
            d.setDate(d.getDate() + a);
            return d
        }
    }

    function o$$1(d$$1, e$$0) {
        function M(b, c, e) {
            z = b, w = b.getFullYear(), x = b.getMonth(), y = b.getDate(), e || (e = a$$1.Event("api")), e.type == "click" && !a$$1.browser.msie &&
            d$$1.focus(), e.type = "beforeChange", G.trigger(e, [b]);
            e.isDefaultPrevented() || (d$$1.val(k$$0(c.formatter, b, c.format, c.lang)), e.type = "change", G.trigger(e), d$$1.data("date", b), i.hide(e))
        }

        function N(b$$0) {
            b$$0.type = "onShow", G.trigger(b$$0), a$$1(document).on("keydown.d", function (b) {
                if (b.ctrlKey)return !0;
                var c = b.keyCode;
                if (c == 8 || c == 46) {
                    d$$1.val("");
                    return i.hide(b)
                }
                if (c == 27 || c == 9)return i.hide(b);
                if (a$$1(f$$0).index(c) >= 0) {
                    if (!C) {
                        i.show(b);
                        return b.preventDefault()
                    }
                    var e = a$$1("#" + p.weeks + " a");
                    var g = a$$1("." +
                    p.focus);
                    var h = e.index(g);
                    g.removeClass(p.focus);
                    if (c == 74 || c == 40)h += 7; else if (c == 75 || c == 38)h -= 7; else if (c == 76 || c == 39)h += 1; else if (c == 72 || c == 37)h -= 1;
                    h > 41 ? (i.addMonth(), g = a$$1("#" + p.weeks + " a:eq(" + (h - 42) + ")")) : h < 0 ? (i.addMonth(-1), g = a$$1("#" + p.weeks + " a:eq(" + (h + 42) + ")")) : g = e.eq(h), g.addClass(p.focus);
                    return b.preventDefault()
                }
                if (c == 34)return i.addMonth();
                if (c == 33)return i.addMonth(-1);
                if (c == 36)return i.today();
                c == 13 && (a$$1(b.target).is("select") || a$$1("." + p.focus).click());
                return a$$1([16, 17, 18, 9]).index(c) >=
                    0
            }), a$$1(document).on("click.d", function (b) {
                var c = b.target;
                !a$$1(c).parents("#" + p.root).length && c != d$$1[0] && (!t$$0 || c != t$$0[0]) && i.hide(b)
            })
        }

        var i = this;
        var j = new Date;
        var o$$0 = j.getFullYear();
        var p = e$$0.css;
        var q = g$$0[e$$0.lang];
        var r$$0 = a$$1("#" + p.root);
        var s = r$$0.find("#" + p.title);
        var t$$0;
        var u;
        var v;
        var w;
        var x;
        var y;
        var z = d$$1.attr("data-value") || e$$0.value || d$$1.val();
        var A = d$$1.attr("min") || e$$0.min;
        var B = d$$1.attr("max") || e$$0.max;
        var C;
        var D;
        A === 0 && (A = "0"), z = n$$0(z) || j, A = n$$0(A || new Date(o$$0 +
        e$$0.yearRange[0], 1, 1)), B = n$$0(B || new Date(o$$0 + e$$0.yearRange[1] + 1, 1, -1));
        if (!q)throw"Dateinput: invalid language: " + e$$0.lang;
        if (d$$1.attr("type") == "date") {
            D = d$$1.clone();
            var E = D.wrap("\x3cdiv/\x3e").parent().html();
            var F = a$$1(E.replace(/type/i, "type\x3dtext data-orig-type"));
            e$$0.value && F.val(e$$0.value), d$$1.replaceWith(F), d$$1 = F
        }
        d$$1.addClass(p.input);
        var G = d$$1.add(i);
        if (!r$$0.length) {
            r$$0 = a$$1("\x3cdiv\x3e\x3cdiv\x3e\x3ca/\x3e\x3cdiv/\x3e\x3ca/\x3e\x3c/div\x3e\x3cdiv\x3e\x3cdiv/\x3e\x3cdiv/\x3e\x3c/div\x3e\x3c/div\x3e").hide().css({position: "absolute"}).attr("id",
                p.root), r$$0.children().eq(0).attr("id", p.head).end().eq(1).attr("id", p.body).children().eq(0).attr("id", p.days).end().eq(1).attr("id", p.weeks).end().end().end().find("a").eq(0).attr("id", p.prev).end().eq(1).attr("id", p.next), s = r$$0.find("#" + p.head).find("div").attr("id", p.title);
            if (e$$0.selectors) {
                var H = a$$1("\x3cselect/\x3e").attr("id", p.month);
                var I = a$$1("\x3cselect/\x3e").attr("id", p.year);
                s.html(H.add(I))
            }
            var J = r$$0.find("#" + p.days);
            for (var K = 0; K < 7; K++)J.append(a$$1("\x3cspan/\x3e").text(q.shortDays[(K +
            e$$0.firstDay) % 7]));
            a$$1("body").append(r$$0)
        }
        e$$0.trigger && (t$$0 = a$$1("\x3ca/\x3e").attr("href", "#").addClass(p.trigger).click(function (a) {
            e$$0.toggle ? i.toggle() : i.show();
            return a.preventDefault()
        }).insertAfter(d$$1));
        var L = r$$0.find("#" + p.weeks);
        I = r$$0.find("#" + p.year), H = r$$0.find("#" + p.month);
        a$$1.extend(i, {
            show: function (b) {
                if (!(d$$1.attr("readonly") || d$$1.attr("disabled") || C)) {
                    b = b || a$$1.Event(), b.type = "onBeforeShow", G.trigger(b);
                    if (b.isDefaultPrevented())return;
                    a$$1.each(c$$1, function () {
                        this.hide()
                    }),
                        C = !0, H.off("change").change(function () {
                        i.setValue(l$$0(I.val()), l$$0(a$$1(this).val()))
                    }), I.off("change").change(function () {
                        i.setValue(l$$0(a$$1(this).val()), l$$0(H.val()))
                    }), u = r$$0.find("#" + p.prev).off("click").click(function (a) {
                        u.hasClass(p.disabled) || i.addMonth(-1);
                        return !1
                    }), v = r$$0.find("#" + p.next).off("click").click(function (a) {
                        v.hasClass(p.disabled) || i.addMonth();
                        return !1
                    }), i.setValue(z);
                    var f = d$$1.offset();
                    /iPad/i.test(navigator.userAgent) && (f.top -= a$$1(window).scrollTop()), r$$0.css({
                        top: f.top +
                        d$$1.outerHeight({margins: !0}) + e$$0.offset[0], left: f.left + e$$0.offset[1]
                    }), e$$0.speed ? r$$0.show(e$$0.speed, function () {
                        N(b)
                    }) : (r$$0.show(), N(b));
                    return i
                }
            }, setValue: function (c$$0, d$$0, f) {
                var g = l$$0(d$$0) >= -1 ? new Date(l$$0(c$$0), l$$0(d$$0), l$$0(f == b$$1 || isNaN(f) ? 1 : f)) : c$$0 || z;
                g < A ? g = A : g > B && (g = B), typeof c$$0 == "string" && (g = n$$0(c$$0)), c$$0 = g.getFullYear(), d$$0 = g.getMonth(), f = g.getDate(), d$$0 == -1 ? (d$$0 = 11, c$$0--) : d$$0 == 12 && (d$$0 = 0, c$$0++);
                if (!C) {
                    M(g, e$$0);
                    return i
                }
                x = d$$0, w = c$$0, y = f;
                var k = new Date(c$$0,
                    d$$0, 1 - e$$0.firstDay);
                var o = k.getDay();
                var r = h$$0(c$$0, d$$0);
                var t = h$$0(c$$0, d$$0 - 1);
                var D;
                if (e$$0.selectors) {
                    H.empty(), a$$1.each(q.months, function (b, d) {
                        A < new Date(c$$0, b + 1, 1) && B > new Date(c$$0, b, 0) && H.append(a$$1("\x3coption/\x3e").html(d).attr("value", b))
                    }), I.empty();
                    var E = j.getFullYear();
                    for (var F = E + e$$0.yearRange[0]; F < E + e$$0.yearRange[1]; F++)A < new Date(F + 1, 0, 1) && B > new Date(F, 0, 0) && I.append(a$$1("\x3coption/\x3e").text(F));
                    H.val(d$$0), I.val(c$$0)
                } else s.html(q.months[d$$0] + " " + c$$0);
                L.empty(), u.add(v).removeClass(p.disabled);
                var G = o ? 0 : -7;
                var J;
                for (var K; G < (o ? 42 : 35); G++)J = a$$1("\x3ca/\x3e"), G % 7 === 0 && (D = a$$1("\x3cdiv/\x3e").addClass(p.week), L.append(D)), G < o ? (J.addClass(p.off), K = t - o + G + 1, g = new Date(c$$0, d$$0 - 1, K)) : G < o + r ? (K = G - o + 1, g = new Date(c$$0, d$$0, K), m$$0(z, g) ? J.attr("id", p.current).addClass(p.focus) : m$$0(j, g) && J.attr("id", p.today)) : (J.addClass(p.off), K = G - r - o + 1, g = new Date(c$$0, d$$0 + 1, K)), A && g < A && J.add(u).addClass(p.disabled), B && g > B && J.add(v).addClass(p.disabled), J.attr("href", "#" + K).text(K).data("date", g), D.append(J);
                L.find("a").click(function (b) {
                    var c =
                        a$$1(this);
                    c.hasClass(p.disabled) || (a$$1("#" + p.current).removeAttr("id"), c.attr("id", p.current), M(c.data("date"), e$$0, b));
                    return !1
                }), p.sunday && L.find("." + p.week).each(function () {
                    var b = e$$0.firstDay ? 7 - e$$0.firstDay : 0;
                    a$$1(this).children().slice(b, b + 1).addClass(p.sunday)
                });
                return i
            }, setMin: function (a, b) {
                A = n$$0(a), b && z < A && i.setValue(A);
                return i
            }, setMax: function (a, b) {
                B = n$$0(a), b && z > B && i.setValue(B);
                return i
            }, today: function () {
                return i.setValue(j)
            }, addDay: function (a) {
                return this.setValue(w, x, y + (a || 1))
            },
            addMonth: function (a) {
                var b = x + (a || 1);
                var c = h$$0(w, b);
                var d = y <= c ? y : c;
                return this.setValue(w, b, d)
            }, addYear: function (a) {
                return this.setValue(w + (a || 1), x, y)
            }, destroy: function () {
                d$$1.add(document).off("click.d keydown.d"), r$$0.add(t$$0).remove(), d$$1.removeData("dateinput").removeClass(p.input), D && d$$1.replaceWith(D)
            }, hide: function (b) {
                if (C) {
                    b = a$$1.Event(), b.type = "onHide", G.trigger(b);
                    if (b.isDefaultPrevented())return;
                    a$$1(document).off("click.d keydown.d"), r$$0.hide(), C = !1
                }
                return i
            }, toggle: function () {
                return i.isOpen() ?
                    i.hide() : i.show()
            }, getConf: function () {
                return e$$0
            }, getInput: function () {
                return d$$1
            }, getCalendar: function () {
                return r$$0
            }, getValue: function (a) {
                return a ? k$$0(e$$0.formatter, z, a, e$$0.lang) : z
            }, isOpen: function () {
                return C
            }
        }), a$$1.each(["onBeforeShow", "onShow", "change", "onHide"], function (b$$0, c) {
            a$$1.isFunction(e$$0[c]) && a$$1(i).on(c, e$$0[c]), i[c] = function (b) {
                b && a$$1(i).on(c, b);
                return i
            }
        }), e$$0.editable || d$$1.on("focus.d click.d", i.show).keydown(function (b) {
            var c = b.keyCode;
            if (C || a$$1(f$$0).index(c) < 0)(c ==
            8 || c == 46) && d$$1.val(""); else {
                i.show(b);
                return b.preventDefault()
            }
            return b.shiftKey || b.ctrlKey || b.altKey || c == 9 ? !0 : b.preventDefault()
        }), n$$0(d$$1.val()) && M(z, e$$0)
    }

    a$$1.tools = a$$1.tools || {version: "v1.2.7"};
    var c$$1 = [];
    var d$$2 = {};
    var e$$1;
    var f$$0 = [75, 76, 38, 39, 74, 72, 40, 37];
    var g$$0 = {};
    e$$1 = a$$1.tools.dateinput = {
        conf: {
            format: "mm/dd/yy",
            formatter: "default",
            selectors: !1,
            yearRange: [-5, 5],
            lang: "en",
            offset: [0, 0],
            speed: 0,
            firstDay: 0,
            min: b$$1,
            max: b$$1,
            trigger: 0,
            toggle: 0,
            editable: 0,
            css: {
                prefix: "cal",
                input: "date",
                root: 0,
                head: 0,
                title: 0,
                prev: 0,
                next: 0,
                month: 0,
                year: 0,
                days: 0,
                body: 0,
                weeks: 0,
                today: 0,
                current: 0,
                week: 0,
                off: 0,
                sunday: 0,
                focus: 0,
                disabled: 0,
                trigger: 0
            }
        }, addFormatter: function (a, b) {
            d$$2[a] = b
        }, localize: function (b$$0, c) {
            a$$1.each(c, function (a, b) {
                c[a] = b.split(",")
            }), g$$0[b$$0] = c
        }
    }, e$$1.localize("en", {
        months: "January,February,March,April,May,June,July,August,September,October,November,December",
        shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec",
        days: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday",
        shortDays: "Sun,Mon,Tue,Wed,Thu,Fri,Sat"
    });
    var j$$0 = a$$1("\x3ca/\x3e");
    e$$1.addFormatter("default", function (a$$0, b, c, d) {
        return a$$0.replace(/d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*'/g, function (a) {
            return a in c ? c[a] : a
        })
    }), e$$1.addFormatter("prefixed", function (a$$0, b$$0, c, d) {
        return a$$0.replace(/%(d{1,4}|m{1,4}|yy(?:yy)?|"[^"]*"|'[^']*')/g, function (a, b) {
            return b in c ? c[b] : a
        })
    });
    a$$1.expr[":"].date = function (b) {
        var c = b.getAttribute("type");
        return c && c == "date" || a$$1(b).data("dateinput")
    }, a$$1.fn.dateinput =
        function (b) {
            if (this.data("dateinput"))return this;
            b = a$$1.extend(!0, {}, e$$1.conf, b), a$$1.each(b.css, function (a, c) {
                !c && a != "prefix" && (b.css[a] = (b.css.prefix || "") + (c || a))
            });
            var d;
            this.each(function () {
                var e = new o$$1(a$$1(this), b);
                c$$1.push(e);
                var f = e.getInput().data("dateinput", e);
                d = d ? d.add(f) : f
            });
            return d ? d : this
        }
})(jQuery);
(function (a$$0) {
    function d$$1(d$$0, e) {
        var f = this;
        var g = d$$0.add(f);
        var h = a$$0(window);
        var i$$0;
        var j;
        var k;
        var l = a$$0.tools.expose && (e.mask || e.expose);
        var m = Math.random().toString().slice(10);
        l && (typeof l == "string" && (l = {color: l}), l.closeOnClick = l.closeOnEsc = !1);
        var n$$0 = e.target || d$$0.attr("rel");
        j = n$$0 ? a$$0(n$$0) : null || d$$0;
        if (!j.length)throw"Could not find Overlay: " + n$$0;
        d$$0 && d$$0.index(j) == -1 && d$$0.click(function (a) {
            f.load(a);
            return a.preventDefault()
        }), a$$0.extend(f, {
            load: function (d) {
                if (f.isOpened())return f;
                var i = c$$0[e.effect];
                if (!i)throw'Overlay: cannot find effect : "' + e.effect + '"';
                e.oneInstance && a$$0.each(b$$1, function () {
                    this.close(d)
                }), d = d || a$$0.Event(), d.type = "onBeforeLoad", g.trigger(d);
                if (d.isDefaultPrevented())return f;
                k = !0, l && a$$0(j).expose(l);
                var n = e.top;
                var o = e.left;
                var p = j.outerWidth({margin: !0});
                var q = j.outerHeight({margin: !0});
                typeof n == "string" && (n = n == "center" ? Math.max((h.height() - q) / 2, 0) : parseInt(n, 10) / 100 * h.height()), o == "center" && (o = Math.max((h.width() - p) / 2, 0)), i[0].call(f, {
                        top: n,
                        left: o
                    },
                    function () {
                        k && (d.type = "onLoad", g.trigger(d))
                    }), l && e.closeOnClick && a$$0.mask.getMask().one("click", f.close), e.closeOnClick && a$$0(document).on("click." + m, function (b) {
                    a$$0(b.target).parents(j).length || f.close(b)
                }), e.closeOnEsc && a$$0(document).on("keydown." + m, function (a) {
                    a.keyCode == 27 && f.close(a)
                });
                return f
            }, close: function (b) {
                if (!f.isOpened())return f;
                b = b || a$$0.Event(), b.type = "onBeforeClose", g.trigger(b);
                if (!b.isDefaultPrevented()) {
                    k = !1, c$$0[e.effect][1].call(f, function () {
                        b.type = "onClose", g.trigger(b)
                    }),
                        a$$0(document).off("click." + m + " keydown." + m), l && a$$0.mask.close();
                    return f
                }
            }, getOverlay: function () {
                return j
            }, getTrigger: function () {
                return d$$0
            }, getClosers: function () {
                return i$$0
            }, isOpened: function () {
                return k
            }, getConf: function () {
                return e
            }
        }), a$$0.each("onBeforeLoad,onStart,onLoad,onBeforeClose,onClose".split(","), function (b$$0, c) {
            a$$0.isFunction(e[c]) && a$$0(f).on(c, e[c]), f[c] = function (b) {
                b && a$$0(f).on(c, b);
                return f
            }
        }), i$$0 = j.find(e.close || ".close"), !i$$0.length && !e.close && (i$$0 = a$$0('\x3ca class\x3d"close"\x3e\x3c/a\x3e'),
            j.prepend(i$$0)), i$$0.click(function (a) {
            f.close(a)
        }), e.load && f.load()
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"}, a$$0.tools.overlay = {
        addEffect: function (a, b, d) {
            c$$0[a] = [b, d]
        },
        conf: {
            close: null,
            closeOnClick: !0,
            closeOnEsc: !0,
            closeSpeed: "fast",
            effect: "default",
            fixed: !a$$0.browser.msie || a$$0.browser.version > 6,
            left: "center",
            load: !1,
            mask: null,
            oneInstance: !0,
            speed: "normal",
            target: null,
            top: "10%"
        }
    };
    var b$$1 = [];
    var c$$0 = {};
    a$$0.tools.overlay.addEffect("default", function (b, c) {
        var d = this.getConf();
        var e = a$$0(window);
        d.fixed || (b.top += e.scrollTop(), b.left += e.scrollLeft()), b.position = d.fixed ? "fixed" : "absolute", this.getOverlay().css(b).fadeIn(d.speed, c)
    }, function (a) {
        this.getOverlay().fadeOut(this.getConf().closeSpeed, a)
    });
    a$$0.fn.overlay = function (c) {
        var e = this.data("overlay");
        if (e)return e;
        a$$0.isFunction(c) && (c = {onBeforeLoad: c}), c = a$$0.extend(!0, {}, a$$0.tools.overlay.conf, c), this.each(function () {
            e = new d$$1(a$$0(this), c), b$$1.push(e), a$$0(this).data("overlay", e)
        });
        return c.api ? e : this
    }
})(jQuery);
(function (a$$0) {
    function d(a) {
        var b = a.offset();
        return {top: b.top + a.height() / 2, left: b.left + a.width() / 2}
    }

    var b$$0 = a$$0.tools.overlay;
    var c = a$$0(window);
    a$$0.extend(b$$0.conf, {start: {top: null, left: null}, fadeInSpeed: "fast", zIndex: 9999});
    var e$$0 = function (b, e) {
        var f = this.getOverlay();
        var g = this.getConf();
        var h = this.getTrigger();
        var i = this;
        var j = f.outerWidth({margin: !0});
        var k = f.data("img");
        var l = g.fixed ? "fixed" : "absolute";
        if (!k) {
            var m = f.css("backgroundImage");
            if (!m)throw"background-image CSS property not set for overlay";
            m = m.slice(m.indexOf("(") + 1, m.indexOf(")")).replace(/\"/g, ""), f.css("backgroundImage", "none"), k = a$$0('\x3cimg src\x3d"' + m + '"/\x3e'), k.css({
                border: 0,
                display: "none"
            }).width(j), a$$0("body").append(k), f.data("img", k)
        }
        var n = g.start.top || Math.round(c.height() / 2);
        var o = g.start.left || Math.round(c.width() / 2);
        if (h) {
            var p = d(h);
            n = p.top, o = p.left
        }
        g.fixed ? (n -= c.scrollTop(), o -= c.scrollLeft()) : (b.top += c.scrollTop(), b.left += c.scrollLeft()), k.css({
            position: "absolute",
            top: n,
            left: o,
            width: 0,
            zIndex: g.zIndex
        }).show(), b.position =
            l, f.css(b), k.animate({top: b.top, left: b.left, width: j}, g.speed, function () {
            f.css("zIndex", g.zIndex + 1).fadeIn(g.fadeInSpeed, function () {
                i.isOpened() && !a$$0(this).index(f) ? e.call() : f.hide()
            })
        }).css("position", l)
    };
    var f$$0 = function (b) {
        var e = this.getOverlay().hide();
        var f = this.getConf();
        var g = this.getTrigger();
        var h = e.data("img");
        var i = {top: f.start.top, left: f.start.left, width: 0};
        g && a$$0.extend(i, d(g)), f.fixed && h.css({position: "absolute"}).animate({
            top: "+\x3d" + c.scrollTop(),
            left: "+\x3d" + c.scrollLeft()
        }, 0),
            h.animate(i, f.closeSpeed, b)
    };
    b$$0.addEffect("apple", e$$0, f$$0)
})(jQuery);
(function (a$$0) {
    function e$$1(a, b) {
        var c = Math.pow(10, b);
        return Math.round(a * c) / c
    }

    function f$$0(a, b) {
        var c = parseInt(a.css(b), 10);
        if (c)return c;
        var d = a[0].currentStyle;
        return d && d.width && parseInt(d.width, 10)
    }

    function g$$1(a) {
        var b = a.data("events");
        return b && b.onSlide
    }

    function h$$1(b$$1, c$$0) {
        function x(a, f, g, h) {
            g === undefined ? g = f / m * q : h && (g -= c$$0.min), r && (g = Math.round(g / r) * r);
            if (f === undefined || r)f = g * m / q;
            if (isNaN(g))return d$$0;
            f = Math.max(0, Math.min(f, m)), g = f / m * q;
            if (h || !j)g += c$$0.min;
            j && (h ? f = m - f : g = c$$0.max -
            g), g = e$$1(g, s);
            var i = a.type == "click";
            if (w && k !== undefined && !i) {
                a.type = "onSlide", v.trigger(a, [g, f]);
                if (a.isDefaultPrevented())return d$$0
            }
            var l = i ? c$$0.speed : 0;
            var t = i ? function () {
                a.type = "change", v.trigger(a, [g])
            } : null;
            j ? (o.animate({top: f}, l, t), c$$0.progress && p.animate({height: m - f + o.height() / 2}, l)) : (o.animate({left: f}, l, t), c$$0.progress && p.animate({width: f + o.width() / 2}, l)), k = g, n = f, b$$1.val(g);
            return d$$0
        }

        function y() {
            j = c$$0.vertical || f$$0(i$$0, "height") > f$$0(i$$0, "width"), j ? (m = f$$0(i$$0, "height") - f$$0(o,
                "height"), l$$0 = i$$0.offset().top + m) : (m = f$$0(i$$0, "width") - f$$0(o, "width"), l$$0 = i$$0.offset().left)
        }

        function z() {
            y(), d$$0.setValue(c$$0.value !== undefined ? c$$0.value : c$$0.min)
        }

        var d$$0 = this;
        var h$$0 = c$$0.css;
        var i$$0 = a$$0("\x3cdiv\x3e\x3cdiv/\x3e\x3ca href\x3d'#'/\x3e\x3c/div\x3e").data("rangeinput", d$$0);
        var j;
        var k;
        var l$$0;
        var m;
        var n;
        b$$1.before(i$$0);
        var o = i$$0.addClass(h$$0.slider).find("a").addClass(h$$0.handle);
        var p = i$$0.find("div").addClass(h$$0.progress);
        a$$0.each("min,max,step,value".split(","),
            function (a, d) {
                var e = b$$1.attr(d);
                parseFloat(e) && (c$$0[d] = parseFloat(e, 10))
            });
        var q = c$$0.max - c$$0.min;
        var r = c$$0.step == "any" ? 0 : c$$0.step;
        var s = c$$0.precision;
        s === undefined && (s = r.toString().split("."), s = s.length === 2 ? s[1].length : 0);
        if (b$$1.attr("type") == "range") {
            var t$$0 = b$$1.clone().wrap("\x3cdiv/\x3e").parent().html();
            var u = a$$0(t$$0.replace(/type/i, "type\x3dtext data-orig-type"));
            u.val(c$$0.value), b$$1.replaceWith(u), b$$1 = u
        }
        b$$1.addClass(h$$0.input);
        var v = a$$0(d$$0).add(b$$1);
        var w = !0;
        a$$0.extend(d$$0,
            {
                getValue: function () {
                    return k
                }, setValue: function (b, c) {
                y();
                return x(c || a$$0.Event("api"), undefined, b, !0)
            }, getConf: function () {
                return c$$0
            }, getProgress: function () {
                return p
            }, getHandle: function () {
                return o
            }, getInput: function () {
                return b$$1
            }, step: function (b, e) {
                e = e || a$$0.Event();
                var f = c$$0.step == "any" ? 1 : c$$0.step;
                d$$0.setValue(k + f * (b || 1), e)
            }, stepUp: function (a) {
                return d$$0.step(a || 1)
            }, stepDown: function (a) {
                return d$$0.step(-a || -1)
            }
            }), a$$0.each("onSlide,change".split(","), function (b$$0, e) {
            a$$0.isFunction(c$$0[e]) &&
            a$$0(d$$0).on(e, c$$0[e]), d$$0[e] = function (b) {
                b && a$$0(d$$0).on(e, b);
                return d$$0
            }
        }), o.drag({drag: !1}).on("dragStart", function () {
            y(), w = g$$1(a$$0(d$$0)) || g$$1(b$$1)
        }).on("drag", function (a, c, d) {
            if (b$$1.is(":disabled"))return !1;
            x(a, j ? c : d)
        }).on("dragEnd", function (a) {
            a.isDefaultPrevented() || (a.type = "change", v.trigger(a, [k]))
        }).click(function (a) {
            return a.preventDefault()
        }), i$$0.click(function (a) {
            if (b$$1.is(":disabled") || a.target == o[0])return a.preventDefault();
            y();
            var c = j ? o.height() / 2 : o.width() / 2;
            x(a, j ? m -
            l$$0 - c + a.pageY : a.pageX - l$$0 - c)
        }), c$$0.keyboard && b$$1.keydown(function (c) {
            if (!b$$1.attr("readonly")) {
                var e = c.keyCode;
                var f = a$$0([75, 76, 38, 33, 39]).index(e) != -1;
                var g = a$$0([74, 72, 40, 34, 37]).index(e) != -1;
                if ((f || g) && !(c.shiftKey || c.altKey || c.ctrlKey)) {
                    f ? d$$0.step(e == 33 ? 10 : 1, c) : g && d$$0.step(e == 34 ? -10 : -1, c);
                    return c.preventDefault()
                }
            }
        }), b$$1.blur(function (b) {
            var c = a$$0(this).val();
            c !== k && d$$0.setValue(c, b)
        }), a$$0.extend(b$$1[0], {stepUp: d$$0.stepUp, stepDown: d$$0.stepDown});
        z(), m || a$$0(window).load(z)
    }

    a$$0.tools =
        a$$0.tools || {version: "v1.2.7"};
    var b$$2;
    b$$2 = a$$0.tools.rangeinput = {
        conf: {
            min: 0,
            max: 100,
            step: "any",
            steps: 0,
            value: 0,
            precision: undefined,
            vertical: 0,
            keyboard: !0,
            progress: !1,
            speed: 100,
            css: {input: "range", slider: "slider", progress: "progress", handle: "handle"}
        }
    };
    var c$$1;
    var d$$1;
    a$$0.fn.drag = function (b) {
        document.ondragstart = function () {
            return !1
        }, b = a$$0.extend({
            x: !0,
            y: !0,
            drag: !0
        }, b), c$$1 = c$$1 || a$$0(document).on("mousedown mouseup", function (e$$0) {
            var f = a$$0(e$$0.target);
            if (e$$0.type == "mousedown" && f.data("drag")) {
                var g$$0 =
                    f.position();
                var h = e$$0.pageX - g$$0.left;
                var i = e$$0.pageY - g$$0.top;
                var j = !0;
                c$$1.on("mousemove.drag", function (a) {
                    var c = a.pageX - h;
                    var e = a.pageY - i;
                    var g = {};
                    b.x && (g.left = c), b.y && (g.top = e), j && (f.trigger("dragStart"), j = !1), b.drag && f.css(g), f.trigger("drag", [e, c]), d$$1 = f
                }), e$$0.preventDefault()
            } else try {
                d$$1 && d$$1.trigger("dragEnd")
            } finally {
                c$$1.off("mousemove.drag"), d$$1 = null
            }
        });
        return this.data("drag", !0)
    };
    a$$0.expr[":"].range = function (b) {
        var c = b.getAttribute("type");
        return c && c == "range" || a$$0(b).filter("input").data("rangeinput")
    },
        a$$0.fn.rangeinput = function (c) {
            if (this.data("rangeinput"))return this;
            c = a$$0.extend(!0, {}, b$$2.conf, c);
            var d;
            this.each(function () {
                var b = new h$$1(a$$0(this), a$$0.extend(!0, {}, c));
                var e = b.getInput().data("rangeinput", b);
                d = d ? d.add(e) : e
            });
            return d ? d : this
        }
})(jQuery);
(function (a$$0) {
    function b$$2(a, b) {
        var c = parseInt(a.css(b), 10);
        if (c)return c;
        var d = a[0].currentStyle;
        return d && d.width && parseInt(d.width, 10)
    }

    function c$$0(b, c) {
        var d = a$$0(c);
        return d.length < 2 ? d : b.parent().find(c)
    }

    function e$$0(b$$1, e) {
        var f = this;
        var g = b$$1.add(f);
        var h = b$$1.children();
        var i = 0;
        var j = e.vertical;
        d$$0 || (d$$0 = f), h.length > 1 && (h = a$$0(e.items, b$$1)), e.size > 1 && (e.circular = !1), a$$0.extend(f, {
            getConf: function () {
                return e
            }, getIndex: function () {
                return i
            }, getSize: function () {
                return f.getItems().size()
            },
            getNaviButtons: function () {
                return n$$0.add(o)
            }, getRoot: function () {
                return b$$1
            }, getItemWrap: function () {
                return h
            }, getItems: function () {
                return h.find(e.item).not("." + e.clonedClass)
            }, move: function (a, b) {
                return f.seekTo(i + a, b)
            }, next: function (a) {
                return f.move(e.size, a)
            }, prev: function (a) {
                return f.move(-e.size, a)
            }, begin: function (a) {
                return f.seekTo(0, a)
            }, end: function (a) {
                return f.seekTo(f.getSize() - 1, a)
            }, focus: function () {
                d$$0 = f;
                return f
            }, addItem: function (b) {
                b = a$$0(b), e.circular ? (h.children().last().before(b),
                    h.children().first().replaceWith(b.clone().addClass(e.clonedClass))) : (h.append(b), o.removeClass("disabled")), g.trigger("onAddItem", [b]);
                return f
            }, seekTo: function (b, c, k) {
                b.jquery || (b *= 1);
                if (e.circular && b === 0 && i == -1 && c !== 0)return f;
                if (!e.circular && b < 0 || b > f.getSize() || b < -1)return f;
                var l = b;
                b.jquery ? b = f.getItems().index(b) : l = f.getItems().eq(b);
                var m = a$$0.Event("onBeforeSeek");
                if (!k) {
                    g.trigger(m, [b, c]);
                    if (m.isDefaultPrevented() || !l.length)return f
                }
                var n = j ? {top: -l.position().top} : {left: -l.position().left};
                i = b, d$$0 = f, c === undefined && (c = e.speed), h.animate(n, c, e.easing, k || function () {
                    g.trigger("onSeek", [b])
                });
                return f
            }
        }), a$$0.each(["onBeforeSeek", "onSeek", "onAddItem"], function (b$$0, c) {
            a$$0.isFunction(e[c]) && a$$0(f).on(c, e[c]), f[c] = function (b) {
                b && a$$0(f).on(c, b);
                return f
            }
        });
        if (e.circular) {
            var k$$0 = f.getItems().slice(-1).clone().prependTo(h);
            var l$$0 = f.getItems().eq(1).clone().appendTo(h);
            k$$0.add(l$$0).addClass(e.clonedClass), f.onBeforeSeek(function (a, b, c) {
                if (!a.isDefaultPrevented()) {
                    if (b == -1) {
                        f.seekTo(k$$0,
                            c, function () {
                                f.end(0)
                            });
                        return a.preventDefault()
                    }
                    b == f.getSize() && f.seekTo(l$$0, c, function () {
                        f.begin(0)
                    })
                }
            });
            var m$$0 = b$$1.parents().add(b$$1).filter(function () {
                if (a$$0(this).css("display") === "none")return !0
            });
            m$$0.length ? (m$$0.show(), f.seekTo(0, 0, function () {
            }), m$$0.hide()) : f.seekTo(0, 0, function () {
            })
        }
        var n$$0 = c$$0(b$$1, e.prev).click(function (a) {
            a.stopPropagation(), f.prev()
        });
        var o = c$$0(b$$1, e.next).click(function (a) {
            a.stopPropagation(), f.next()
        });
        e.circular || (f.onBeforeSeek(function (a, b) {
            setTimeout(function () {
                a.isDefaultPrevented() ||
                (n$$0.toggleClass(e.disabledClass, b <= 0), o.toggleClass(e.disabledClass, b >= f.getSize() - 1))
            }, 1)
        }), e.initialIndex || n$$0.addClass(e.disabledClass)), f.getSize() < 2 && n$$0.add(o).addClass(e.disabledClass), e.mousewheel && a$$0.fn.mousewheel && b$$1.mousewheel(function (a, b) {
            if (e.mousewheel) {
                f.move(b < 0 ? 1 : -1, e.wheelSpeed || 50);
                return !1
            }
        });
        if (e.touch) {
            var p = {};
            h[0].ontouchstart = function (a) {
                var b = a.touches[0];
                p.x = b.clientX, p.y = b.clientY
            }, h[0].ontouchmove = function (a) {
                if (a.touches.length == 1 && !h.is(":animated")) {
                    var b =
                        a.touches[0];
                    var c = p.x - b.clientX;
                    var d = p.y - b.clientY;
                    f[j && d > 0 || !j && c > 0 ? "next" : "prev"](), a.preventDefault()
                }
            }
        }
        e.keyboard && a$$0(document).on("keydown.scrollable", function (b) {
            if (!(!e.keyboard || b.altKey || b.ctrlKey || b.metaKey || a$$0(b.target).is(":input"))) {
                if (e.keyboard != "static" && d$$0 != f)return;
                var c = b.keyCode;
                if (j && (c == 38 || c == 40)) {
                    f.move(c == 38 ? -1 : 1);
                    return b.preventDefault()
                }
                if (!j && (c == 37 || c == 39)) {
                    f.move(c == 37 ? -1 : 1);
                    return b.preventDefault()
                }
            }
        }), e.initialIndex && f.seekTo(e.initialIndex, 0, function () {
        })
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"}, a$$0.tools.scrollable = {
        conf: {
            activeClass: "active",
            circular: !1,
            clonedClass: "cloned",
            disabledClass: "disabled",
            easing: "swing",
            initialIndex: 0,
            item: "\x3e *",
            items: ".items",
            keyboard: !0,
            mousewheel: !1,
            next: ".next",
            prev: ".prev",
            size: 1,
            speed: 400,
            vertical: !1,
            touch: !0,
            wheelSpeed: 0
        }
    };
    var d$$0;
    a$$0.fn.scrollable = function (b) {
        var c = this.data("scrollable");
        if (c)return c;
        b = a$$0.extend({}, a$$0.tools.scrollable.conf, b), this.each(function () {
            c = new e$$0(a$$0(this), b), a$$0(this).data("scrollable",
                c)
        });
        return b.api ? c : this
    }
})(jQuery);
(function (a) {
    var b$$0 = a.tools.scrollable;
    b$$0.autoscroll = {conf: {autoplay: !0, interval: 3E3, autopause: !0}}, a.fn.autoscroll = function (c$$0) {
        typeof c$$0 == "number" && (c$$0 = {interval: c$$0});
        var d = a.extend({}, b$$0.autoscroll.conf, c$$0);
        var e;
        this.each(function () {
            function h() {
                f && clearTimeout(f), f = setTimeout(function () {
                    b.next()
                }, d.interval)
            }

            var b = a(this).data("scrollable");
            var c = b.getRoot();
            var f;
            var g = !1;
            b && (e = b), b.play = function () {
                f || (g = !1, c.on("onSeek", h), h())
            }, b.pause = function () {
                f = clearTimeout(f), c.off("onSeek",
                    h)
            }, b.resume = function () {
                g || b.play()
            }, b.stop = function () {
                g = !0, b.pause()
            }, d.autopause && c.add(b.getNaviButtons()).hover(b.pause, b.resume), d.autoplay && b.play()
        });
        return d.api ? e : this
    }
})(jQuery);
(function (a$$0) {
    function c$$1(b, c) {
        var d = a$$0(c);
        return d.length < 2 ? d : b.parent().find(c)
    }

    var b$$1 = a$$0.tools.scrollable;
    b$$1.navigator = {
        conf: {
            navi: ".navi",
            naviItem: null,
            activeClass: "active",
            indexed: !1,
            idPrefix: null,
            history: !1
        }
    };
    a$$0.fn.navigator = function (d$$0) {
        typeof d$$0 == "string" && (d$$0 = {navi: d$$0}), d$$0 = a$$0.extend({}, b$$1.navigator.conf, d$$0);
        var e;
        this.each(function () {
            function k(a, c, d) {
                b$$0.seekTo(c), d.preventDefault(), i && history.pushState({i: c}, "")
            }

            function l() {
                return f.find(d$$0.naviItem || "\x3e *")
            }

            function m(b) {
                var c$$0 = a$$0("\x3c" + (d$$0.naviItem || "a") + "/\x3e").click(function (c) {
                    k(a$$0(this), b, c)
                });
                b === 0 && c$$0.addClass(h), d$$0.indexed && c$$0.text(b + 1), d$$0.idPrefix && c$$0.attr("id", d$$0.idPrefix + b);
                return c$$0.appendTo(f)
            }

            var b$$0 = a$$0(this).data("scrollable");
            var f = d$$0.navi.jquery ? d$$0.navi : c$$1(b$$0.getRoot(), d$$0.navi);
            var g = b$$0.getNaviButtons();
            var h = d$$0.activeClass;
            var i = d$$0.history && history.pushState;
            var j = b$$0.getConf().size;
            b$$0 && (e = b$$0), b$$0.getNaviButtons = function () {
                return g.add(f)
            },
            i && (history.pushState({i: 0}, ""), a$$0(window).on("popstate", function (a) {
                var c = a.originalEvent.state;
                c && b$$0.seekTo(c.i)
            }));
            l().length ? l().each(function (b) {
                a$$0(this).click(function (c) {
                    k(a$$0(this), b, c)
                })
            }) : a$$0.each(b$$0.getItems(), function (a) {
                a % j == 0 && m(a)
            }), b$$0.onBeforeSeek(function (a, b) {
                setTimeout(function () {
                    if (!a.isDefaultPrevented()) {
                        var c = b / j;
                        var d = l().eq(c);
                        d.length && l().removeClass(h).eq(c).addClass(h)
                    }
                }, 1)
            }), b$$0.onAddItem(function (a, c) {
                var d = b$$0.getItems().index(c);
                d % j == 0 && m(d)
            })
        });
        return d$$0.api ?
            e : this
    }
})(jQuery);
(function (a$$0) {
    function e$$0(c$$0, d$$0, e) {
        var f = this;
        var g = c$$0.add(this);
        var h = c$$0.find(e.tabs);
        var i$$0 = d$$0.jquery ? d$$0 : c$$0.children(d$$0);
        var j;
        h.length || (h = c$$0.children()), i$$0.length || (i$$0 = c$$0.parent().find(d$$0)), i$$0.length || (i$$0 = a$$0(d$$0)), a$$0.extend(this, {
            click: function (d, i) {
                var k = h.eq(d);
                var l = !c$$0.data("tabs");
                typeof d == "string" && d.replace("#", "") && (k = h.filter('[href*\x3d"' + d.replace("#", "") + '"]'), d = Math.max(h.index(k), 0));
                if (e.rotate) {
                    var m = h.length - 1;
                    if (d < 0)return f.click(m,
                        i);
                    if (d > m)return f.click(0, i)
                }
                if (!k.length) {
                    if (j >= 0)return f;
                    d = e.initialIndex, k = h.eq(d)
                }
                if (d === j)return f;
                i = i || a$$0.Event(), i.type = "onBeforeClick", g.trigger(i, [d]);
                if (!i.isDefaultPrevented()) {
                    var n = l ? e.initialEffect && e.effect || "default" : e.effect;
                    b$$1[n].call(f, d, function () {
                        j = d, i.type = "onClick", g.trigger(i, [d])
                    }), h.removeClass(e.current), k.addClass(e.current);
                    return f
                }
            }, getConf: function () {
                return e
            }, getTabs: function () {
                return h
            }, getPanes: function () {
                return i$$0
            }, getCurrentPane: function () {
                return i$$0.eq(j)
            },
            getCurrentTab: function () {
                return h.eq(j)
            }, getIndex: function () {
                return j
            }, next: function () {
                return f.click(j + 1)
            }, prev: function () {
                return f.click(j - 1)
            }, destroy: function () {
                h.off(e.event).removeClass(e.current), i$$0.find('a[href^\x3d"#"]').off("click.T");
                return f
            }
        }), a$$0.each("onBeforeClick,onClick".split(","), function (b$$0, c) {
            a$$0.isFunction(e[c]) && a$$0(f).on(c, e[c]), f[c] = function (b) {
                b && a$$0(f).on(c, b);
                return f
            }
        }), e.history && a$$0.fn.history && (a$$0.tools.history.init(h), e.event = "history"), h.each(function (b) {
            a$$0(this).on(e.event,
                function (a) {
                    f.click(b, a);
                    return a.preventDefault()
                })
        }), i$$0.find('a[href^\x3d"#"]').on("click.T", function (b) {
            f.click(a$$0(this).attr("href"), b)
        }), location.hash && e.tabs == "a" && c$$0.find('[href\x3d"' + location.hash + '"]').length ? f.click(location.hash) : (e.initialIndex === 0 || e.initialIndex > 0) && f.click(e.initialIndex)
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"}, a$$0.tools.tabs = {
        conf: {
            tabs: "a",
            current: "current",
            onBeforeClick: null,
            onClick: null,
            effect: "default",
            initialEffect: !1,
            initialIndex: 0,
            event: "click",
            rotate: !1,
            slideUpSpeed: 400,
            slideDownSpeed: 400,
            history: !1
        }, addEffect: function (a, c) {
            b$$1[a] = c
        }
    };
    var b$$1 = {
        "default": function (a, b) {
            this.getPanes().hide().eq(a).show(), b.call()
        }, fade: function (a, b) {
            var c = this.getConf();
            var d = c.fadeOutSpeed;
            var e = this.getPanes();
            d ? e.fadeOut(d) : e.hide(), e.eq(a).fadeIn(c.fadeInSpeed, b)
        }, slide: function (a, b) {
            var c = this.getConf();
            this.getPanes().slideUp(c.slideUpSpeed), this.getPanes().eq(a).slideDown(c.slideDownSpeed, b)
        }, ajax: function (a, b) {
            this.getPanes().eq(0).load(this.getTabs().eq(a).attr("href"),
                b)
        }
    };
    var c$$1;
    var d$$1;
    a$$0.tools.tabs.addEffect("horizontal", function (b, e) {
        if (!c$$1) {
            var f = this.getPanes().eq(b);
            var g = this.getCurrentPane();
            d$$1 || (d$$1 = this.getPanes().eq(0).width()), c$$1 = !0, f.show(), g.animate({width: 0}, {
                step: function (a) {
                    f.css("width", d$$1 - a)
                }, complete: function () {
                    a$$0(this).hide(), e.call(), c$$1 = !1
                }
            }), g.length || (e.call(), c$$1 = !1)
        }
    });
    a$$0.fn.tabs = function (b, c) {
        var d = this.data("tabs");
        d && (d.destroy(), this.removeData("tabs")), a$$0.isFunction(c) && (c = {onBeforeClick: c}), c = a$$0.extend({},
            a$$0.tools.tabs.conf, c), this.each(function () {
            d = new e$$0(a$$0(this), b, c), a$$0(this).data("tabs", d)
        });
        return c.api ? d : this
    }
})(jQuery);
(function (a$$0) {
    function c$$1(b$$1, c$$0) {
        function i(c) {
            var d = a$$0(c);
            return d.length < 2 ? d : b$$1.parent().find(c)
        }

        function l() {
            g = setTimeout(function () {
                f.next()
            }, c$$0.interval)
        }

        var d$$0 = this;
        var e$$0 = b$$1.add(this);
        var f = b$$1.data("tabs");
        var g;
        var h = !0;
        var j = i(c$$0.next).click(function () {
            f.next()
        });
        var k = i(c$$0.prev).click(function () {
            f.prev()
        });
        a$$0.extend(d$$0, {
            getTabs: function () {
                return f
            }, getConf: function () {
                return c$$0
            }, play: function () {
                if (g)return d$$0;
                var b = a$$0.Event("onBeforePlay");
                e$$0.trigger(b);
                if (b.isDefaultPrevented())return d$$0;
                h = !1, e$$0.trigger("onPlay"), e$$0.on("onClick", l), l();
                return d$$0
            }, pause: function () {
                if (!g)return d$$0;
                var b = a$$0.Event("onBeforePause");
                e$$0.trigger(b);
                if (b.isDefaultPrevented())return d$$0;
                g = clearTimeout(g), e$$0.trigger("onPause"), e$$0.off("onClick", l);
                return d$$0
            }, resume: function () {
                h || d$$0.play()
            }, stop: function () {
                d$$0.pause(), h = !0
            }
        }), a$$0.each("onBeforePlay,onPlay,onBeforePause,onPause".split(","), function (b$$0, e) {
            a$$0.isFunction(c$$0[e]) && a$$0(d$$0).on(e, c$$0[e]),
                d$$0[e] = function (b) {
                    return a$$0(d$$0).on(e, b)
                }
        }), c$$0.autopause && f.getTabs().add(j).add(k).add(f.getPanes()).hover(d$$0.pause, d$$0.resume), c$$0.autoplay && d$$0.play(), c$$0.clickable && f.getPanes().click(function () {
            f.next()
        });
        if (!f.getConf().rotate) {
            var m = c$$0.disabledClass;
            f.getIndex() || k.addClass(m), f.onBeforeClick(function (a, b) {
                k.toggleClass(m, !b), j.toggleClass(m, b == f.getTabs().length - 1)
            })
        }
    }

    var b$$2;
    b$$2 = a$$0.tools.tabs.slideshow = {
        conf: {
            next: ".forward", prev: ".backward", disabledClass: "disabled", autoplay: !1,
            autopause: !0, interval: 3E3, clickable: !0, api: !1
        }
    };
    a$$0.fn.slideshow = function (d) {
        var e = this.data("slideshow");
        if (e)return e;
        d = a$$0.extend({}, b$$2.conf, d), this.each(function () {
            e = new c$$1(a$$0(this), d), a$$0(this).data("slideshow", e)
        });
        return d.api ? e : this
    }
})(jQuery);
(function (a$$0) {
    function c$$0() {
        if (a$$0.browser.msie) {
            var b = a$$0(document).height();
            var c = a$$0(window).height();
            return [window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, b - c < 20 ? c : b]
        }
        return [a$$0(document).width(), a$$0(document).height()]
    }

    function d(b) {
        if (b)return b.call(a$$0.mask)
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"};
    var b$$0;
    b$$0 = a$$0.tools.expose = {
        conf: {
            maskId: "exposeMask",
            loadSpeed: "slow",
            closeSpeed: "fast",
            closeOnClick: !0,
            closeOnEsc: !0,
            zIndex: 9998,
            opacity: 0.8,
            startOpacity: 0,
            color: "#fff",
            onLoad: null,
            onClose: null
        }
    };
    var e;
    var f;
    var g;
    var h;
    var i;
    a$$0.mask = {
        load: function (j, k) {
            if (g)return this;
            typeof j == "string" && (j = {color: j}), j = j || h, h = j = a$$0.extend(a$$0.extend({}, b$$0.conf), j), e = a$$0("#" + j.maskId), e.length || (e = a$$0("\x3cdiv/\x3e").attr("id", j.maskId), a$$0("body").append(e));
            var l = c$$0();
            e.css({
                position: "absolute",
                top: 0,
                left: 0,
                width: l[0],
                height: l[1],
                display: "none",
                opacity: j.startOpacity,
                zIndex: j.zIndex
            }), j.color && e.css("backgroundColor", j.color);
            if (d(j.onBeforeLoad) === !1)return this;
            j.closeOnEsc && a$$0(document).on("keydown.mask", function (b) {
                b.keyCode == 27 && a$$0.mask.close(b)
            }), j.closeOnClick && e.on("click.mask", function (b) {
                a$$0.mask.close(b)
            }), a$$0(window).on("resize.mask", function () {
                a$$0.mask.fit()
            }), k && k.length && (i = k.eq(0).css("zIndex"), a$$0.each(k, function () {
                var b = a$$0(this);
                /relative|absolute|fixed/i.test(b.css("position")) || b.css("position", "relative")
            }), f = k.css({zIndex: Math.max(j.zIndex + 1, i == "auto" ? 0 : i)})), e.css({display: "block"}).fadeTo(j.loadSpeed, j.opacity,
                function () {
                    a$$0.mask.fit(), d(j.onLoad), g = "full"
                }), g = !0;
            return this
        }, close: function () {
            if (g) {
                if (d(h.onBeforeClose) === !1)return this;
                e.fadeOut(h.closeSpeed, function () {
                    d(h.onClose), f && f.css({zIndex: i}), g = !1
                }), a$$0(document).off("keydown.mask"), e.off("click.mask"), a$$0(window).off("resize.mask")
            }
            return this
        }, fit: function () {
            if (g) {
                var a = c$$0();
                e.css({width: a[0], height: a[1]})
            }
        }, getMask: function () {
            return e
        }, isLoaded: function (a) {
            return a ? g == "full" : g
        }, getConf: function () {
            return h
        }, getExposed: function () {
            return f
        }
    },
        a$$0.fn.mask = function (b) {
            a$$0.mask.load(b);
            return this
        }, a$$0.fn.expose = function (b) {
        a$$0.mask.load(b, this);
        return this
    }
})(jQuery);
(function () {
    function f$$0(a, b) {
        if (b)for (var c in b)b.hasOwnProperty(c) && (a[c] = b[c]);
        return a
    }

    function g$$0(a, b) {
        var c = [];
        for (var d in a)a.hasOwnProperty(d) && (c[d] = b(a[d]));
        return c
    }

    function j$$0(c, d, e) {
        if (h.isSupported(d.version))c.innerHTML = h.getHTML(d, e); else if (d.expressInstall && h.isSupported([6, 65]))c.innerHTML = h.getHTML(f$$0(d, {src: d.expressInstall}), {
            MMredirectURL: location.href,
            MMplayerType: "PlugIn",
            MMdoctitle: document.title
        }); else {
            c.innerHTML.replace(/\s/g, "") || (c.innerHTML = "\x3ch2\x3eFlash version " +
            d.version + " or greater is required\x3c/h2\x3e\x3ch3\x3e" + (i$$0[0] > 0 ? "Your version is " + i$$0 : "You have no flash plugin installed") + "\x3c/h3\x3e" + (c.tagName == "A" ? "\x3cp\x3eClick here to download latest version\x3c/p\x3e" : "\x3cp\x3eDownload latest version from \x3ca href\x3d'" + b$$0 + "'\x3ehere\x3c/a\x3e\x3c/p\x3e"), c.tagName == "A" && (c.onclick = function () {
                location.href = b$$0
            }));
            if (d.onFail) {
                var g = d.onFail.call(this);
                typeof g == "string" && (c.innerHTML = g)
            }
        }
        a$$1 && (window[d.id] = document.getElementById(d.id)), f$$0(this,
            {
                getRoot: function () {
                    return c
                }, getOptions: function () {
                return d
            }, getConf: function () {
                return e
            }, getApi: function () {
                return c.firstChild
            }
            })
    }

    var a$$1 = document.all;
    var b$$0 = "http://www.adobe.com/go/getflashplayer";
    var c$$0 = typeof jQuery == "function";
    var d$$0 = /(\d+)[^\d]+(\d+)[^\d]*(\d*)/;
    var e$$0 = {
        width: "100%",
        height: "100%",
        id: "_" + ("" + Math.random()).slice(9),
        allowfullscreen: !0,
        allowscriptaccess: "always",
        quality: "high",
        version: [3, 0],
        onFail: null,
        expressInstall: null,
        w3c: !1,
        cachebusting: !1
    };
    window.attachEvent &&
    window.attachEvent("onbeforeunload", function () {
        __flash_unloadHandler = function () {
        }, __flash_savedUnloadHandler = function () {
        }
    });
    window.flashembed = function (a, b, c) {
        typeof a == "string" && (a = document.getElementById(a.replace("#", "")));
        if (a) {
            typeof b == "string" && (b = {src: b});
            return new j$$0(a, f$$0(f$$0({}, e$$0), b), c)
        }
    };
    var h = f$$0(window.flashembed, {
        conf: e$$0, getVersion: function () {
            var a;
            var b;
            try {
                b = navigator.plugins["Shockwave Flash"].description.slice(16)
            } catch (c) {
                try {
                    a = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7"),
                        b = a && a.GetVariable("$version")
                } catch (e) {
                    try {
                        a = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6"), b = a && a.GetVariable("$version")
                    } catch (f) {
                    }
                }
            }
            b = d$$0.exec(b);
            return b ? [b[1], b[3]] : [0, 0]
        }, asString: function (a$$0) {
            if (a$$0 === null || a$$0 === undefined)return null;
            var b = typeof a$$0;
            b == "object" && a$$0.push && (b = "array");
            switch (b) {
                case "string":
                    a$$0 = a$$0.replace(new RegExp('(["\\\\])', "g"), "\\$1"), a$$0 = a$$0.replace(/^\s?(\d+\.?\d*)%/, "$1pct");
                    return '"' + a$$0 + '"';
                case "array":
                    return "[" + g$$0(a$$0, function (a) {
                            return h.asString(a)
                        }).join(",") +
                        "]";
                case "function":
                    return '"function()"';
                case "object":
                    var c = [];
                    for (var d in a$$0)a$$0.hasOwnProperty(d) && c.push('"' + d + '":' + h.asString(a$$0[d]));
                    return "{" + c.join(",") + "}"
            }
            return String(a$$0).replace(/\s/g, " ").replace(/\'/g, '"')
        }, getHTML: function (b, c) {
            b = f$$0({}, b);
            var d = '\x3cobject width\x3d"' + b.width + '" height\x3d"' + b.height + '" id\x3d"' + b.id + '" name\x3d"' + b.id + '"';
            b.cachebusting && (b.src += (b.src.indexOf("?") != -1 ? "\x26" : "?") + Math.random()), b.w3c || !a$$1 ? d += ' data\x3d"' + b.src + '" type\x3d"application/x-shockwave-flash"' :
                d += ' classid\x3d"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"', d += "\x3e";
            if (b.w3c || a$$1)d += '\x3cparam name\x3d"movie" value\x3d"' + b.src + '" /\x3e';
            b.width = b.height = b.id = b.w3c = b.src = null, b.onFail = b.version = b.expressInstall = null;
            for (var e in b)b[e] && (d += '\x3cparam name\x3d"' + e + '" value\x3d"' + b[e] + '" /\x3e');
            var g = "";
            if (c) {
                for (var i in c)if (c[i]) {
                    var j = c[i];
                    g += i + "\x3d" + encodeURIComponent(/function|object/.test(typeof j) ? h.asString(j) : j) + "\x26"
                }
                g = g.slice(0, -1), d += '\x3cparam name\x3d"flashvars" value\x3d\'' +
                g + "' /\x3e"
            }
            d += "\x3c/object\x3e";
            return d
        }, isSupported: function (a) {
            return i$$0[0] > a[0] || i$$0[0] == a[0] && i$$0[1] >= a[1]
        }
    });
    var i$$0 = h.getVersion();
    c$$0 && (jQuery.tools = jQuery.tools || {version: "v1.2.7"}, jQuery.tools.flashembed = {conf: e$$0}, jQuery.fn.flashembed = function (a, b) {
        return this.each(function () {
            jQuery(this).data("flashembed", flashembed(this, a, b))
        })
    })
})();
(function (a$$0) {
    function f(a) {
        if (a) {
            var b = c$$0.contentWindow.document;
            b.open().close(), b.location.hash = a
        }
    }

    var b$$0;
    var c$$0;
    var d$$0;
    var e$$0;
    a$$0.tools = a$$0.tools || {version: "v1.2.7"}, a$$0.tools.history = {
        init: function (g) {
            e$$0 || (a$$0.browser.msie && a$$0.browser.version < "8" ? c$$0 || (c$$0 = a$$0("\x3ciframe/\x3e").attr("src", "javascript:false;").hide().get(0), a$$0("body").append(c$$0), setInterval(function () {
                    var d = c$$0.contentWindow.document;
                    var e = d.location.hash;
                    b$$0 !== e && a$$0(window).trigger("hash", e)
                },
                100), f(location.hash || "#")) : setInterval(function () {
                var c = location.hash;
                c !== b$$0 && a$$0(window).trigger("hash", c)
            }, 100), d$$0 = d$$0 ? d$$0.add(g) : g, g.click(function (b) {
                var d = a$$0(this).attr("href");
                c$$0 && f(d);
                if (d.slice(0, 1) != "#") {
                    location.href = "#" + d;
                    return b.preventDefault()
                }
            }), e$$0 = !0)
        }
    };
    a$$0(window).on("hash", function (c, e) {
        e ? d$$0.filter(function () {
            var b = a$$0(this).attr("href");
            return b == e || b == e.replace("#", "")
        }).trigger("history", [e]) : d$$0.eq(0).trigger("history", [e]), b$$0 = e
    }), a$$0.fn.history = function (b) {
        a$$0.tools.history.init(this);
        return this.on("history", b)
    }
})(jQuery);
(function (a$$0) {
    function c(b) {
        switch (b.type) {
            case "mousemove":
                return a$$0.extend(b.data, {clientX: b.clientX, clientY: b.clientY, pageX: b.pageX, pageY: b.pageY});
            case "DOMMouseScroll":
                a$$0.extend(b, b.data), b.delta = -b.detail / 3;
                break;
            case "mousewheel":
                b.delta = b.wheelDelta / 120
        }
        b.type = "wheel";
        return a$$0.event.handle.call(this, b, b.delta)
    }

    a$$0.fn.mousewheel = function (a) {
        return this[a ? "on" : "trigger"]("wheel", a)
    }, a$$0.event.special.wheel = {
        setup: function () {
            a$$0.event.add(this, b$$0, c, {})
        }, teardown: function () {
            a$$0.event.remove(this,
                b$$0, c)
        }
    };
    var b$$0 = a$$0.browser.mozilla ? "DOMMouseScroll" + (a$$0.browser.version < "1.9" ? " mousemove" : "") : "mousewheel"
})(jQuery);
(function (a$$0) {
    function c$$0(b, c, d) {
        var e = d.relative ? b.position().top : b.offset().top;
        var f = d.relative ? b.position().left : b.offset().left;
        var g = d.position[0];
        e -= c.outerHeight() - d.offset[0], f += b.outerWidth() + d.offset[1], /notiPad/i.test(navigator.userAgent) && (e -= a$$0(window).scrollTop());
        var h = c.outerHeight() + b.outerHeight();
        g == "center" && (e += h / 2), g == "bottom" && (e += h), g = d.position[1];
        var i = c.outerWidth() + b.outerWidth();
        g == "center" && (f -= i / 2), g == "left" && (f -= i);
        return {top: e, left: f}
    }

    function d$$0(d, e) {
        var f =
            this;
        var g = d.add(f);
        var h;
        var i = 0;
        var j = 0;
        var k = d.attr("title");
        var l = d.attr("data-tooltip");
        var m = b$$1[e.effect];
        var n;
        var o$$0 = d.is(":input");
        var p$$0 = o$$0 && d.is(":checkbox, :radio, select, :button, :submit");
        var q = d.attr("type");
        var r = e.events[q] || e.events[o$$0 ? p$$0 ? "widget" : "input" : "def"];
        if (!m)throw'Nonexistent effect "' + e.effect + '"';
        r = r.split(/,\s*/);
        if (r.length != 2)throw"Tooltip: bad events configuration for " + q;
        d.on(r[0], function (a) {
            clearTimeout(i), e.predelay ? j = setTimeout(function () {
                    f.show(a)
                },
                e.predelay) : f.show(a)
        }).on(r[1], function (a) {
            clearTimeout(j), e.delay ? i = setTimeout(function () {
                f.hide(a)
            }, e.delay) : f.hide(a)
        }), k && e.cancelDefault && (d.removeAttr("title"), d.data("title", k)), a$$0.extend(f, {
            show: function (b) {
                if (!h) {
                    l ? h = a$$0(l) : e.tip ? h = a$$0(e.tip).eq(0) : k ? h = a$$0(e.layout).addClass(e.tipClass).appendTo(document.body).hide().append(k) : (h = d.next(), h.length || (h = d.parent().next()));
                    if (!h.length)throw"Cannot find tooltip for " + d;
                }
                if (f.isShown())return f;
                h.stop(!0, !0);
                var o = c$$0(d, h, e);
                e.tip && h.html(d.data("title")),
                    b = a$$0.Event(), b.type = "onBeforeShow", g.trigger(b, [o]);
                if (b.isDefaultPrevented())return f;
                o = c$$0(d, h, e), h.css({
                    position: "absolute",
                    top: o.top,
                    left: o.left
                }), n = !0, m[0].call(f, function () {
                    b.type = "onShow", n = "full", g.trigger(b)
                });
                var p = e.events.tooltip.split(/,\s*/);
                h.data("__set") || (h.off(p[0]).on(p[0], function () {
                    clearTimeout(i), clearTimeout(j)
                }), p[1] && !d.is("input:not(:checkbox, :radio), textarea") && h.off(p[1]).on(p[1], function (a) {
                    a.relatedTarget != d[0] && d.trigger(r[1].split(" ")[0])
                }), e.tip || h.data("__set",
                    !0));
                return f
            }, hide: function (c) {
                if (!h || !f.isShown())return f;
                c = a$$0.Event(), c.type = "onBeforeHide", g.trigger(c);
                if (!c.isDefaultPrevented()) {
                    n = !1, b$$1[e.effect][1].call(f, function () {
                        c.type = "onHide", g.trigger(c)
                    });
                    return f
                }
            }, isShown: function (a) {
                return a ? n == "full" : n
            }, getConf: function () {
                return e
            }, getTip: function () {
                return h
            }, getTrigger: function () {
                return d
            }
        }), a$$0.each("onHide,onBeforeShow,onShow,onBeforeHide".split(","), function (b$$0, c) {
            a$$0.isFunction(e[c]) && a$$0(f).on(c, e[c]), f[c] = function (b) {
                b && a$$0(f).on(c,
                    b);
                return f
            }
        })
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"}, a$$0.tools.tooltip = {
        conf: {
            effect: "toggle",
            fadeOutSpeed: "fast",
            predelay: 0,
            delay: 30,
            opacity: 1,
            tip: 0,
            fadeIE: !1,
            position: ["top", "center"],
            offset: [0, 0],
            relative: !1,
            cancelDefault: !0,
            events: {
                def: "mouseenter,mouseleave",
                input: "focus,blur",
                widget: "focus mouseenter,blur mouseleave",
                tooltip: "mouseenter,mouseleave"
            },
            layout: "\x3cdiv/\x3e",
            tipClass: "tooltip"
        }, addEffect: function (a, c, d) {
            b$$1[a] = [c, d]
        }
    };
    var b$$1 = {
        toggle: [function (a) {
            var b = this.getConf();
            var c =
                this.getTip();
            var d = b.opacity;
            d < 1 && c.css({opacity: d}), c.show(), a.call()
        }, function (a) {
            this.getTip().hide(), a.call()
        }], fade: [function (b) {
            var c = this.getConf();
            !a$$0.browser.msie || c.fadeIE ? this.getTip().fadeTo(c.fadeInSpeed, c.opacity, b) : (this.getTip().show(), b())
        }, function (b) {
            var c = this.getConf();
            !a$$0.browser.msie || c.fadeIE ? this.getTip().fadeOut(c.fadeOutSpeed, b) : (this.getTip().hide(), b())
        }]
    };
    a$$0.fn.tooltip = function (b) {
        var c = this.data("tooltip");
        if (c)return c;
        b = a$$0.extend(!0, {}, a$$0.tools.tooltip.conf,
            b), typeof b.position == "string" && (b.position = b.position.split(/,?\s/)), this.each(function () {
            c = new d$$0(a$$0(this), b), a$$0(this).data("tooltip", c)
        });
        return b.api ? c : this
    }
})(jQuery);
(function (a$$0) {
    function c$$0(b) {
        var c = a$$0(window);
        var d = c.width() + c.scrollLeft();
        var e = c.height() + c.scrollTop();
        return [b.offset().top <= c.scrollTop(), d <= b.offset().left + b.width(), e <= b.offset().top + b.height(), c.scrollLeft() >= b.offset().left]
    }

    function d$$0(a) {
        for (var b = a.length; b--;)if (a[b])return !1;
        return !0
    }

    var b$$1 = a$$0.tools.tooltip;
    b$$1.dynamic = {conf: {classNames: "top right bottom left"}};
    a$$0.fn.dynamic = function (e$$0) {
        typeof e$$0 == "number" && (e$$0 = {speed: e$$0}), e$$0 = a$$0.extend({}, b$$1.dynamic.conf,
            e$$0);
        var f = a$$0.extend(!0, {}, e$$0);
        var g = e$$0.classNames.split(/\s/);
        var h;
        this.each(function () {
            var b$$0 = a$$0(this).tooltip().onBeforeShow(function (b, e) {
                var i = this.getTip();
                var j = this.getConf();
                h || (h = [j.position[0], j.position[1], j.offset[0], j.offset[1], a$$0.extend({}, j)]), a$$0.extend(j, h[4]), j.position = [h[0], h[1]], j.offset = [h[2], h[3]], i.css({
                    visibility: "hidden",
                    position: "absolute",
                    top: e.top,
                    left: e.left
                }).show();
                var k = a$$0.extend(!0, {}, f);
                var l = c$$0(i);
                if (!d$$0(l)) {
                    l[2] && (a$$0.extend(j, k.top), j.position[0] =
                        "top", i.addClass(g[0])), l[3] && (a$$0.extend(j, k.right), j.position[1] = "right", i.addClass(g[1])), l[0] && (a$$0.extend(j, k.bottom), j.position[0] = "bottom", i.addClass(g[2])), l[1] && (a$$0.extend(j, k.left), j.position[1] = "left", i.addClass(g[3]));
                    if (l[0] || l[2])j.offset[0] *= -1;
                    if (l[1] || l[3])j.offset[1] *= -1
                }
                i.css({visibility: "visible"}).hide()
            });
            b$$0.onBeforeShow(function () {
                var a = this.getConf();
                var b = this.getTip();
                setTimeout(function () {
                    a.position = [h[0], h[1]], a.offset = [h[2], h[3]]
                }, 0)
            }), b$$0.onHide(function () {
                var a =
                    this.getTip();
                a.removeClass(e$$0.classNames)
            }), ret = b$$0
        });
        return e$$0.api ? ret : this
    }
})(jQuery);
(function (a$$0) {
    var b$$0 = a$$0.tools.tooltip;
    a$$0.extend(b$$0.conf, {
        direction: "up",
        bounce: !1,
        slideOffset: 10,
        slideInSpeed: 200,
        slideOutSpeed: 200,
        slideFade: !a$$0.browser.msie
    });
    var c = {up: ["-", "top"], down: ["+", "top"], left: ["-", "left"], right: ["+", "left"]};
    b$$0.addEffect("slide", function (a) {
        var b = this.getConf();
        var d = this.getTip();
        var e = b.slideFade ? {opacity: b.opacity} : {};
        var f = c[b.direction] || c.up;
        e[f[1]] = f[0] + "\x3d" + b.slideOffset, b.slideFade && d.css({opacity: 0}), d.show().animate(e, b.slideInSpeed, a)
    }, function (b) {
        var d =
            this.getConf();
        var e = d.slideOffset;
        var f = d.slideFade ? {opacity: 0} : {};
        var g = c[d.direction] || c.up;
        var h = "" + g[0];
        d.bounce && (h = h == "+" ? "-" : "+"), f[g[1]] = h + "\x3d" + e, this.getTip().animate(f, d.slideOutSpeed, function () {
            a$$0(this).hide(), b.call()
        })
    })
})(jQuery);
(function (a$$0) {
    function h$$2(b, c, d) {
        c = a$$0(c).first() || c;
        var e = b.offset().top;
        var f = b.offset().left;
        var g = d.position.split(/,?\s+/);
        var h = g[0];
        var i = g[1];
        e -= c.outerHeight() - d.offset[0], f += b.outerWidth() + d.offset[1], /iPad/i.test(navigator.userAgent) && (e -= a$$0(window).scrollTop());
        var j = c.outerHeight() + b.outerHeight();
        h == "center" && (e += j / 2), h == "bottom" && (e += j);
        var k = b.outerWidth();
        i == "center" && (f -= (k + c.outerWidth()) / 2), i == "left" && (f -= k);
        return {top: e, left: f}
    }

    function i$$0(a) {
        function b() {
            return this.getAttribute("type") ==
                a
        }

        b.key = '[type\x3d"' + a + '"]';
        return b
    }

    function l$$0(b$$1, c$$1, e) {
        function l(b, c, d) {
            if (e.grouped || !b.length) {
                var f;
                if (d === !1 || a$$0.isArray(d)) {
                    f = g$$0.messages[c.key || c] || g$$0.messages["*"], f = f[e.lang] || g$$0.messages["*"].en;
                    var h = f.match(/\$\d/g);
                    h && a$$0.isArray(d) && a$$0.each(h, function (a) {
                        f = f.replace(this, d[a])
                    })
                } else f = d[e.lang] || d;
                b.push(f)
            }
        }

        var f$$0 = this;
        var i = c$$1.add(f$$0);
        b$$1 = b$$1.not(":button, :image, :reset, :submit"), c$$1.attr("novalidate", "novalidate");
        a$$0.extend(f$$0, {
            getConf: function () {
                return e
            },
            getForm: function () {
                return c$$1
            }, getInputs: function () {
                return b$$1
            }, reflow: function () {
                b$$1.each(function () {
                    var b = a$$0(this);
                    var c = b.data("msg.el");
                    if (c) {
                        var d = h$$2(b, c, e);
                        c.css({top: d.top, left: d.left})
                    }
                });
                return f$$0
            }, invalidate: function (c$$0, d$$0) {
                if (!d$$0) {
                    var g = [];
                    a$$0.each(c$$0, function (a, c) {
                        var d = b$$1.filter("[name\x3d'" + a + "']");
                        d.length && (d.trigger("OI", [c]), g.push({input: d, messages: [c]}))
                    }), c$$0 = g, d$$0 = a$$0.Event()
                }
                d$$0.type = "onFail", i.trigger(d$$0, [c$$0]), d$$0.isDefaultPrevented() || k$$0[e.effect][0].call(f$$0,
                    c$$0, d$$0);
                return f$$0
            }, reset: function (c) {
                c = c || b$$1, c.removeClass(e.errorClass).each(function () {
                    var b = a$$0(this).data("msg.el");
                    b && (b.remove(), a$$0(this).data("msg.el", null))
                }).off(e.errorInputEvent + ".v");
                return f$$0
            }, destroy: function () {
                c$$1.off(e.formEvent + ".V reset.V"), b$$1.off(e.inputEvent + ".V change.V");
                return f$$0.reset()
            }, checkValidity: function (c$$0, g) {
                c$$0 = c$$0 || b$$1, c$$0 = c$$0.not(":disabled");
                var h$$1 = {};
                c$$0 = c$$0.filter(function () {
                    var b = a$$0(this).attr("name");
                    if (!h$$1[b]) {
                        h$$1[b] = !0;
                        return a$$0(this)
                    }
                });
                if (!c$$0.length)return !0;
                g = g || a$$0.Event(), g.type = "onBeforeValidate", i.trigger(g, [c$$0]);
                if (g.isDefaultPrevented())return g.result;
                var m = [];
                c$$0.each(function () {
                    var b = [];
                    var c = a$$0(this).data("messages", b);
                    var h$$0 = d$$1 && c.is(":date") ? "onHide.v" : e.errorInputEvent + ".v";
                    c.off(h$$0), a$$0.each(j$$0, function () {
                        var a = this;
                        var d = a[0];
                        if (c.filter(d).length) {
                            var h = a[1].call(f$$0, c, c.val());
                            if (h !== !0) {
                                g.type = "onBeforeFail", i.trigger(g, [c, d]);
                                if (g.isDefaultPrevented())return !1;
                                var j = c.attr(e.messageAttr);
                                if (j) {
                                    b =
                                        [j];
                                    return !1
                                }
                                l(b, d, h)
                            }
                        }
                    }), b.length && (m.push({
                        input: c,
                        messages: b
                    }), c.trigger("OI", [b]), e.errorInputEvent && c.on(h$$0, function (a) {
                        f$$0.checkValidity(c, a)
                    }));
                    if (e.singleError && m.length)return !1
                });
                var n = k$$0[e.effect];
                if (!n)throw'Validator: cannot find effect "' + e.effect + '"';
                if (m.length) {
                    f$$0.invalidate(m, g);
                    return !1
                }
                n[1].call(f$$0, c$$0, g), g.type = "onSuccess", i.trigger(g, [c$$0]), c$$0.off(e.errorInputEvent + ".v");
                return !0
            }
        }), a$$0.each("onBeforeValidate,onBeforeFail,onFail,onSuccess".split(","), function (b$$0,
                                                                                             c) {
            a$$0.isFunction(e[c]) && a$$0(f$$0).on(c, e[c]), f$$0[c] = function (b) {
                b && a$$0(f$$0).on(c, b);
                return f$$0
            }
        }), e.formEvent && c$$1.on(e.formEvent + ".V", function (a) {
            if (!f$$0.checkValidity(null, a))return a.preventDefault();
            a.target = c$$1, a.type = e.formEvent
        }), c$$1.on("reset.V", function () {
            f$$0.reset()
        }), b$$1[0] && b$$1[0].validity && b$$1.each(function () {
            this.oninvalid = function () {
                return !1
            }
        }), c$$1[0] && (c$$1[0].checkValidity = f$$0.checkValidity), e.inputEvent && b$$1.on(e.inputEvent + ".V", function (b) {
            f$$0.checkValidity(a$$0(this),
                b)
        }), b$$1.filter(":checkbox, select").filter("[required]").on("change.V", function (b) {
            var c = a$$0(this);
            (this.checked || c.is("select") && a$$0(this).val()) && k$$0[e.effect][1].call(f$$0, c, b)
        }), b$$1.filter(":radio[required]").on("change.V", function (b) {
            var c = a$$0("[name\x3d'" + a$$0(b.srcElement).attr("name") + "']");
            c != null && c.length != 0 && f$$0.checkValidity(c, b)
        }), a$$0(window).resize(function () {
            f$$0.reflow()
        })
    }

    a$$0.tools = a$$0.tools || {version: "v1.2.7"};
    var b$$2 = /\[type=([a-z]+)\]/;
    var c$$2 = /^-?[0-9]*(\.[0-9]+)?$/;
    var d$$1 = a$$0.tools.dateinput;
    var e$$0 = /^([a-z0-9_\.\-\+]+)@([\da-z\.\-]+)\.([a-z\.]{2,6})$/i;
    var f$$1 = /^(https?:\/\/)?[\da-z\.\-]+\.[a-z\.]{2,6}[#&+_\?\/\w \.\-=]*$/i;
    var g$$0;
    g$$0 = a$$0.tools.validator = {
        conf: {
            grouped: !1,
            effect: "default",
            errorClass: "invalid",
            inputEvent: null,
            errorInputEvent: "keyup",
            formEvent: "submit",
            lang: "en",
            message: "\x3cdiv/\x3e",
            messageAttr: "data-message",
            messageClass: "error",
            offset: [0, 0],
            position: "center right",
            singleError: !1,
            speed: "normal"
        }, messages: {"*": {en: "Please correct this value"}},
        localize: function (b, c$$0) {
            a$$0.each(c$$0, function (a, c) {
                g$$0.messages[a] = g$$0.messages[a] || {}, g$$0.messages[a][b] = c
            })
        }, localizeFn: function (b, c) {
            g$$0.messages[b] = g$$0.messages[b] || {}, a$$0.extend(g$$0.messages[b], c)
        }, fn: function (c, d, e) {
            a$$0.isFunction(d) ? e = d : (typeof d == "string" && (d = {en: d}), this.messages[c.key || c] = d);
            var f = b$$2.exec(c);
            f && (c = i$$0(f[1])), j$$0.push([c, e])
        }, addEffect: function (a, b, c) {
            k$$0[a] = [b, c]
        }
    };
    var j$$0 = [];
    var k$$0 = {
        "default": [function (b$$1) {
            var c$$0 = this.getConf();
            a$$0.each(b$$1, function (b$$0,
                                      d) {
                var e = d.input;
                e.addClass(c$$0.errorClass);
                var f = e.data("msg.el");
                f || (f = a$$0(c$$0.message).addClass(c$$0.messageClass).appendTo(document.body), e.data("msg.el", f)), f.css({visibility: "hidden"}).find("p").remove(), a$$0.each(d.messages, function (b, c) {
                    a$$0("\x3cp/\x3e").html(c).appendTo(f)
                }), f.outerWidth() == f.parent().width() && f.add(f.find("p")).css({display: "inline"});
                var g = h$$2(e, f, c$$0);
                f.css({visibility: "visible", position: "absolute", top: g.top, left: g.left}).fadeIn(c$$0.speed)
            })
        }, function (b$$0) {
            var c =
                this.getConf();
            b$$0.removeClass(c.errorClass).each(function () {
                var b = a$$0(this).data("msg.el");
                b && b.css({visibility: "hidden"})
            })
        }]
    };
    a$$0.each("email,url,number".split(","), function (b, c) {
        a$$0.expr[":"][c] = function (a) {
            return a.getAttribute("type") === c
        }
    }), a$$0.fn.oninvalid = function (a) {
        return this[a ? "on" : "trigger"]("OI", a)
    }, g$$0.fn(":email", "Please enter a valid email address", function (a, b) {
        return !b || e$$0.test(b)
    }), g$$0.fn(":url", "Please enter a valid URL", function (a, b) {
        return !b || f$$1.test(b)
    }), g$$0.fn(":number",
        "Please enter a numeric value.", function (a, b) {
            return c$$2.test(b)
        }), g$$0.fn("[max]", "Please enter a value no larger than $1", function (a, b) {
        if (b === "" || d$$1 && a.is(":date"))return !0;
        var c = a.attr("max");
        return parseFloat(b) <= parseFloat(c) ? !0 : [c]
    }), g$$0.fn("[min]", "Please enter a value of at least $1", function (a, b) {
        if (b === "" || d$$1 && a.is(":date"))return !0;
        var c = a.attr("min");
        return parseFloat(b) >= parseFloat(c) ? !0 : [c]
    }), g$$0.fn("[required]", "Please complete this mandatory field.", function (a, b) {
        if (a.is(":checkbox"))return a.is(":checked");
        return b
    }), g$$0.fn("[pattern]", function (a, b) {
        return b === "" || (new RegExp("^" + a.attr("pattern") + "$")).test(b)
    }), g$$0.fn(":radio", "Please select an option.", function (b$$0) {
        var c = !1;
        var d$$0 = a$$0("[name\x3d'" + b$$0.attr("name") + "']").each(function (b, d) {
            a$$0(d).is(":checked") && (c = !0)
        });
        return c ? !0 : !1
    });
    a$$0.fn.validator = function (b) {
        var c = this.data("validator");
        c && (c.destroy(), this.removeData("validator")), b = a$$0.extend(!0, {}, g$$0.conf, b);
        if (this.is("form"))return this.each(function () {
            var d = a$$0(this);
            c =
                new l$$0(d.find(":input"), d, b), d.data("validator", c)
        });
        c = new l$$0(this, this.eq(0).closest("form"), b);
        return this.data("validator", c)
    }
})(jQuery);
var module$flickrImport = {};
module$jquery;
module$jquery_tools;
if (!window.themeForest)window.themeForest = {};
function FlickrImport$$module$flickrImport(jsonArgs) {
    flickrImportObj = this;
    this.args = {
        "calls": [],
        "perPage": "9",
        "perRow": "3",
        "baseApiUrl": "https://api.flickr.com/services/rest/",
        "size": "s",
        "target": "_blank",
        "imageLink": "flickr",
        "imageZoom": "disabled"
    };
    this.callKey = 0;
    for (var key in jsonArgs)if (typeof jsonArgs[key] !== "function")this.args[key] = jsonArgs[key];
    if (!this.args.apiKey) {
        alert("FlickrImport: You did not pass an apiKey.");
        return false
    }
    if (!this.args.secret) {
        alert("FlickrImport: You did not pass a secret.");
        return false
    }
    try {
        method = this.args.calls[this.callKey].method.replace(/\./g, "");
        this[method]()
    } catch (error) {
        alert("FlickrImport: You did not pass a valid Flickr API method.")
    }
}
FlickrImport$$module$flickrImport.prototype.makeNextCall = function () {
    try {
        this.args.calls[this.callKey].callback()
    } catch (err) {
    }
    this.callKey++;
    if (this.callKey < this.args.calls.length)try {
        method = this.args.calls[this.callKey].method.replace(/\./g, "");
        this[method]()
    } catch (error) {
        alert("FlickrImport: You did not pass a valid Flickr API method.")
    }
};
FlickrImport$$module$flickrImport.prototype.flickrpeoplegetPublicPhotos = function () {
    perPage = this.args.perPage;
    if (this.args.calls[this.callKey].perPage)perPage = this.args.calls[this.callKey].perPage;
    if (!this.args.calls[this.callKey].userId && !this.args.calls[this.callKey].username) {
        alert("FlickrImport: You need to pass a valid userId or username");
        return false
    } else if (!this.args.calls[this.callKey].userId && this.args.calls[this.callKey].username)this.flickrpeoplefindByUsername("flickrpeoplegetPublicPhotos");
    else {
        url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26user_id\x3d" + this.args.calls[this.callKey].userId + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrpeoplegetPublicPhotos_cb\x26method\x3dflickr.people.getPublicPhotos\x26sort\x3dinterestingness-asc\x26per_page\x3d" + perPage;
        this.addScript(url);
        this.flickrpeoplegetPublicPhotos_cb = function (result) {
            if (result.stat == "ok") {
                photos = result.photos.photo;
                this.buildPhotosHTML(photos, this.args.calls[this.callKey])
            } else alert("FlickrImport: " +
            result.message)
        }
    }
};
FlickrImport$$module$flickrImport.prototype.flickrfavoritesgetPublicList = function () {
    perPage = this.args.perPage;
    if (this.args.calls[this.callKey].perPage)perPage = this.args.calls[this.callKey].perPage;
    if (!this.args.calls[this.callKey].userId && !this.args.calls[this.callKey].username) {
        alert("FlickrImport: You need to pass a valid userId or username");
        return false
    } else if (!this.args.calls[this.callKey].userId && this.args.calls[this.callKey].username)this.flickrpeoplefindByUsername("flickrfavoritesgetPublicList"); else {
        url =
            this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26user_id\x3d" + this.args.calls[this.callKey].userId + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrfavoritesgetPublicList_cb\x26method\x3dflickr.favorites.getPublicList\x26per_page\x3d" + perPage;
        this.addScript(url);
        this.flickrfavoritesgetPublicList_cb = function (result) {
            if (result.stat == "ok") {
                photos = result.photos.photo;
                this.buildPhotosHTML(photos, this.args.calls[this.callKey])
            } else alert("FlickrImport: " + result.message)
        }
    }
};
FlickrImport$$module$flickrImport.prototype.flickrinterestingnessgetList = function () {
    perPage = this.args.perPage;
    if (this.args.calls[this.callKey].perPage)perPage = this.args.calls[this.callKey].perPage;
    url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrinterestingnessgetList_cb\x26method\x3dflickr.interestingness.getList\x26per_page\x3d" + perPage;
    this.addScript(url);
    this.flickrinterestingnessgetList_cb = function (result) {
        if (result.stat == "ok") {
            photos =
                result.photos.photo;
            this.buildPhotosHTML(photos, this.args.calls[this.callKey])
        } else alert("FlickrImport: " + result.message)
    }
};
FlickrImport$$module$flickrImport.prototype.flickrgroupspoolsgetPhotos = function () {
    if (!this.args.calls[this.callKey].groupId) {
        alert("FlickrImport: You need to pass a valid groupId");
        return false
    }
    perPage = this.args.perPage;
    if (this.args.calls[this.callKey].perPage)perPage = this.args.calls[this.callKey].perPage;
    url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrgroupspoolsgetPhotos_cb\x26method\x3dflickr.groups.pools.getPhotos\x26per_page\x3d" + perPage +
    "\x26group_id\x3d" + this.args.calls[this.callKey].groupId;
    this.addScript(url);
    this.flickrgroupspoolsgetPhotos_cb = function (result) {
        if (result.stat == "ok") {
            photos = result.photos.photo;
            this.buildPhotosHTML(photos, this.args.calls[this.callKey])
        } else alert("FlickrImport: " + result.message)
    }
};
FlickrImport$$module$flickrImport.prototype.flickrphotosetsgetList = function () {
    if (!this.args.calls[this.callKey].userId && !this.args.calls[this.callKey].username) {
        alert("FlickrImport: You need to pass a valid userId or username");
        return false
    } else if (!this.args.calls[this.callKey].userId && this.args.calls[this.callKey].username)this.flickrpeoplefindByUsername("flickrphotosetsgetList"); else {
        url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26user_id\x3d" + this.args.calls[this.callKey].userId +
        "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrphotosetsgetList_cb\x26sort\x3ddate-posted-desc\x26method\x3dflickr.photosets.getList";
        this.addScript(url);
        this.flickrphotosetsgetList_cb = function (result) {
            if (result.stat == "ok") {
                photosets = result.photosets.photoset;
                this.buildPhotosetsHTML(photosets)
            } else alert("FlickrImport: " + result.message)
        }
    }
};
FlickrImport$$module$flickrImport.prototype.flickrphotosetsgetPhotos = function () {
    if (!this.args.calls[this.callKey].photosetId) {
        alert("ThemeForestFlick: You did not pass a photoset id");
        return false
    }
    perPage = this.args.perPage;
    if (this.args.calls[this.callKey].perPage)perPage = this.args.calls[this.callKey].perPage;
    url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26photoset_id\x3d" + this.args.calls[this.callKey].photosetId + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrphotosetsgetPhotos_cb\x26method\x3dflickr.photosets.getPhotos\x26per_page\x3d" +
    perPage;
    this.addScript(url);
    this.flickrphotosetsgetPhotos_cb = function (result) {
        if (result.stat == "ok") {
            photos = result.photoset.photo;
            this.args.calls[this.callKey].userId = result.photoset.owner;
            this.buildPhotosHTML(photos, this.args.calls[this.callKey])
        } else alert("FlickrImport:  " + result.message)
    }
};
FlickrImport$$module$flickrImport.prototype.flickrpeoplefindByUsername = function (callMethod) {
    url = this.args.baseApiUrl + "?api_key\x3d" + this.args.apiKey + "\x26username\x3d" + this.args.calls[this.callKey].username + "\x26format\x3djson\x26jsoncallback\x3dflickrImportObj.flickrpeoplefindByUsername_cb\x26method\x3dflickr.people.findByUsername";
    this.addScript(url);
    this.flickrpeoplefindByUsername_cb = function (result) {
        if (result.stat == "ok") {
            this.args.calls[this.callKey].userId = result.user.nsid;
            this[callMethod]()
        } else alert("FlickrImport:  " +
        result.message)
    }
};
FlickrImport$$module$flickrImport.prototype.buildPhotosHTML = function (photos) {
    size = this.args.size;
    target = this.args.target;
    perRow = this.args.perRow;
    imageLink = this.args.imageLink;
    linkClass = "";
    onClickVar = "";
    if (this.args.calls[this.callKey].onClick)onClickVar = 'onclick\x3d"' + this.args.calls[this.callKey].onClick + '"';
    if (this.args.calls[this.callKey].className)linkClass = this.args.calls[this.callKey].className;
    if (this.args.calls[this.callKey].size)size = this.args.calls[this.callKey].size;
    if (this.args.calls[this.callKey].target)target = this.args.calls[this.callKey].target;
    if (this.args.calls[this.callKey].perRow)perRow = this.args.calls[this.callKey].perRow;
    if (this.args.calls[this.callKey].imageLink)imageLink = this.args.calls[this.callKey].imageLink;
    output = '\x3cul class\x3d"' + this.args.calls[this.callKey].method.replace(/\./g, " ") + " _" + this.callKey + '"\x3e';
    for (var i in photos)if (typeof photos[i] !== "function") {
        photo = photos[i];
        className = "";
        relTag = "";
        if (perRow == 1)className = ' class\x3d"start end"';
        if (i % perRow == perRow - 1)className = ' class\x3d"end"'; else if (i % perRow === 0)className =
            ' class\x3d"start"';
        if (!this.args.calls[this.callKey].userId && photo.owner)owner = photo.owner; else owner = this.args.calls[this.callKey].userId;
        link = "http://www.flickr.com/photos/" + owner + "/" + photo.id;
        if (imageLink == "preview")link = "http://farm" + photo.farm + ".static.flickr.com/" + photo.server + "/" + photo.id + "_" + photo.secret + ".jpg";
        if (this.args.calls[this.callKey].rel)relTag = 'rel\x3d"' + this.args.calls[this.callKey].rel + '"';
        var thumbPath = "http://d1jcy68tgito8q.cloudfront.net/flickr/0.0.2/" + photo.server + "/" + photo.id +
            "_" + photo.secret + "_" + size + ".jpg";
        output += "\x3cli" + className + '\x3e\x3ca href\x3d"' + link + '" id\x3d"photo_id_' + photo.id + '" target\x3d"' + target + '" ' + relTag + ' class\x3d"flickr" ' + onClickVar + ' title\x3d"' + photo.title + '"\x3e\x3cimg src\x3d"' + thumbPath + '" alt\x3d"' + photo.title + '" /\x3e\x3c/a\x3e\x3c/li\x3e'
    }
    output += '\x3cspan class\x3d"clear"\x3e\x3c/span\x3e\x3c/ul\x3e';
    currentHTML = document.getElementById(this.args.calls[this.callKey].id).innerHTML;
    document.getElementById(this.args.calls[this.callKey].id).innerHTML =
        currentHTML + output;
    if ($("#flickrOverlay").length <= 0)$("body").append($('\x3cdiv id\x3d"flickrOverlay" class\x3d"overlay"\x3e\x3cdiv class\x3d"content_wrap"\x3e\x3cimg /\x3e\x3c/div\x3e\x3c/div\x3e'));
    $("a.flickr").overlay({
        mask: "#333", oneInstance: false, target: "#flickrOverlay", onBeforeLoad: function () {
            var img = this.getOverlay().find(".content_wrap img");
            $(img).attr("src", this.getTrigger().attr("href"))
        }
    });
    this.makeNextCall()
};
FlickrImport$$module$flickrImport.prototype.buildPhotosetsHTML = function (photosets) {
    target = this.args.target;
    perRow = this.args.perRow;
    size = this.args.size;
    if (this.args.calls[this.callKey].target)target = this.args.calls[this.callKey].target;
    if (this.args.calls[this.callKey].perRow)perRow = this.args.calls[this.callKey].perRow;
    if (this.args.calls[this.callKey].size)size = this.args.calls[this.callKey].size;
    output = '\x3cul class\x3d"' + this.args.calls[this.callKey].method.replace(/\./g, " ") + " _" + this.callKey + '"\x3e';
    for (var i in photosets)if (typeof photosets[i] !== "function") {
        photoset = photosets[i];
        className = "";
        relTag = "";
        if (this.args.calls[this.callKey].perPage)if (i >= this.args.calls[this.callKey].perPage)break;
        if (perRow == 1)className = ' class\x3d"start end"'; else if (i % perRow == perRow - 1)className = ' class\x3d"end"'; else if (i % perRow === 0)className = ' class\x3d"start"';
        if (this.args.calls[this.callKey].rel)relTag = 'rel\x3d"' + this.args.calls[this.callKey].rel + '"';
        output += "\x3cli" + className + '\x3e\x3ca class\x3d"modal" href\x3d"http://www.flickr.com/photos/' +
        this.args.calls[this.callKey].userId + "/sets/" + photoset.id + '" ' + relTag + ' id\x3d"photoset_id_' + photoset.id + '" target\x3d"' + target + '"\x3e\x3cimg src\x3d"http://d1jcy68tgito8q.cloudfront.net/flickr/0.0.2/' + photoset.server + "/" + photoset.primary + "_" + photoset.secret + "_" + size + '.jpg" /\x3e\x3c/a\x3e\x3cp class\x3d"title" id\x3d"photoset_' + photoset.id + '_title"\x3e\x3ca href\x3d"http://www.flickr.com/photos/' + this.args.calls[this.callKey].userId + "/sets/" + photoset.id + '" target\x3d"' + target + '"\x3e' + photoset.title._content +
        '\x3c/a\x3e\x3c/p\x3e\x3cp class\x3d"description" id\x3d"photoset_' + photoset.id + '_description"\x3e' + photoset.description._content + "\x3c/p\x3e\x3c/li\x3e"
    }
    output += '\x3cspan class\x3d"clear"\x3e\x3c/span\x3e\x3c/ul\x3e';
    currentHTML = document.getElementById(this.args.calls[this.callKey].id).innerHTML;
    document.getElementById(this.args.calls[this.callKey].id).innerHTML = currentHTML + output;
    this.makeNextCall()
};
FlickrImport$$module$flickrImport.prototype.addScript = function (url) {
    var headTag = document.getElementsByTagName("head")[0];
    var scriptTag = document.createElement("script");
    scriptTag.type = "text/javascript";
    scriptTag.src = url;
    if (!headTag)headTag = document.body.parentNode.appendChild(document.createElement("head"));
    headTag.appendChild(scriptTag)
};
$(window).load(function () {
    themeForest.flickrImport = new FlickrImport$$module$flickrImport({
        "calls": [{
            "method": "flickr.photosets.getPhotos",
            "username": "mjamery",
            "id": "flickr",
            "perPage": "8",
            "perRow": "4",
            "imageLink": "preview",
            "photosetId": "72157634055485220"
        }], "apiKey": "a4e79f79573995d03e193ed01fb7a3a3", "secret": "9c09c872210b8dec"
    })
});
var module$modernizr = {};
window.Modernizr = function (window$$0, document$$0, undefined) {
    function setCss(str) {
        mStyle.cssText = str
    }

    function setCssAll(str1, str2) {
        return setCss(prefixes.join(str1 + ";") + (str2 || ""))
    }

    function is(obj, type) {
        return typeof obj === type
    }

    function contains(str, substr) {
        return !!~("" + str).indexOf(substr)
    }

    function testProps(props, prefixed) {
        for (var i in props) {
            var prop = props[i];
            if (!contains(prop, "-") && mStyle[prop] !== undefined)return prefixed == "pfx" ? prop : true
        }
        return false
    }

    function testDOMProps(props, obj, elem) {
        for (var i in props) {
            var item =
                obj[props[i]];
            if (item !== undefined) {
                if (elem === false)return props[i];
                if (is(item, "function"))return item.bind(elem || obj);
                return item
            }
        }
        return false
    }

    function testPropsAll(prop, prefixed, elem) {
        var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1);
        var props = (prop + " " + cssomPrefixes.join(ucProp + " ") + ucProp).split(" ");
        if (is(prefixed, "string") || is(prefixed, "undefined"))return testProps(props, prefixed); else {
            props = (prop + " " + domPrefixes.join(ucProp + " ") + ucProp).split(" ");
            return testDOMProps(props, prefixed, elem)
        }
    }

    function webforms() {
        Modernizr["input"] = function (props) {
            var i = 0;
            for (var len = props.length; i < len; i++)attrs[props[i]] = !!(props[i]in inputElem);
            if (attrs.list)attrs.list = !!(document$$0.createElement("datalist") && window$$0.HTMLDataListElement);
            return attrs
        }("autocomplete autofocus list placeholder max min multiple pattern required step".split(" "));
        Modernizr["inputtypes"] = function (props) {
            var i = 0;
            var bool;
            var inputElemType;
            var defaultView;
            for (var len = props.length; i < len; i++) {
                inputElem.setAttribute("type",
                    inputElemType = props[i]);
                bool = inputElem.type !== "text";
                if (bool) {
                    inputElem.value = smile;
                    inputElem.style.cssText = "position:absolute;visibility:hidden;";
                    if (/^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined) {
                        docElement.appendChild(inputElem);
                        defaultView = document$$0.defaultView;
                        bool = defaultView.getComputedStyle && defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== "textfield" && inputElem.offsetHeight !== 0;
                        docElement.removeChild(inputElem)
                    } else if (/^(search|tel)$/.test(inputElemType));
                    else if (/^(url|email)$/.test(inputElemType))bool = inputElem.checkValidity && inputElem.checkValidity() === false; else bool = inputElem.value != smile
                }
                inputs[props[i]] = !!bool
            }
            return inputs
        }("search tel url email datetime date month week time datetime-local number range color".split(" "))
    }

    var version = "2.6.2";
    var Modernizr = {};
    var enableClasses = true;
    var docElement = document$$0.documentElement;
    var mod = "modernizr";
    var modElem = document$$0.createElement(mod);
    var mStyle = modElem.style;
    var inputElem = document$$0.createElement("input");
    var smile = ":)";
    var toString = {}.toString;
    var prefixes = " -webkit- -moz- -o- -ms- ".split(" ");
    var omPrefixes = "Webkit Moz O ms";
    var cssomPrefixes = omPrefixes.split(" ");
    var domPrefixes = omPrefixes.toLowerCase().split(" ");
    var ns = {"svg": "http://www.w3.org/2000/svg"};
    var tests = {};
    var inputs = {};
    var attrs = {};
    var classes = [];
    var slice = classes.slice;
    var featureName;
    var injectElementWithStyles = function (rule, callback, nodes, testnames) {
        var style;
        var ret;
        var node;
        var docOverflow;
        var div = document$$0.createElement("div");
        var body = document$$0.body;
        var fakeBody = body || document$$0.createElement("body");
        if (parseInt(nodes, 10))for (; nodes--;) {
            node = document$$0.createElement("div");
            node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
            div.appendChild(node)
        }
        style = ["\x26#173;", '\x3cstyle id\x3d"s', mod, '"\x3e', rule, "\x3c/style\x3e"].join("");
        div.id = mod;
        (body ? div : fakeBody).innerHTML += style;
        fakeBody.appendChild(div);
        if (!body) {
            fakeBody.style.background = "";
            fakeBody.style.overflow = "hidden";
            docOverflow = docElement.style.overflow;
            docElement.style.overflow =
                "hidden";
            docElement.appendChild(fakeBody)
        }
        ret = callback(div, rule);
        if (!body) {
            fakeBody.parentNode.removeChild(fakeBody);
            docElement.style.overflow = docOverflow
        } else div.parentNode.removeChild(div);
        return !!ret
    };
    var isEventSupported = function () {
        function isEventSupported(eventName, element) {
            element = element || document$$0.createElement(TAGNAMES[eventName] || "div");
            eventName = "on" + eventName;
            var isSupported = eventName in element;
            if (!isSupported) {
                if (!element.setAttribute)element = document$$0.createElement("div");
                if (element.setAttribute &&
                    element.removeAttribute) {
                    element.setAttribute(eventName, "");
                    isSupported = is(element[eventName], "function");
                    if (!is(element[eventName], "undefined"))element[eventName] = undefined;
                    element.removeAttribute(eventName)
                }
            }
            element = null;
            return isSupported
        }

        var TAGNAMES = {
            "select": "input",
            "change": "input",
            "submit": "form",
            "reset": "form",
            "error": "img",
            "load": "img",
            "abort": "img"
        };
        return isEventSupported
    }();
    var _hasOwnProperty = {}.hasOwnProperty;
    var hasOwnProp;
    if (!is(_hasOwnProperty, "undefined") && !is(_hasOwnProperty.call,
            "undefined"))hasOwnProp = function (object, property) {
        return _hasOwnProperty.call(object, property)
    }; else hasOwnProp = function (object, property) {
        return property in object && is(object.constructor.prototype[property], "undefined")
    };
    if (!Function.prototype.bind)Function.prototype.bind = function bind(that) {
        var target = this;
        if (typeof target != "function")throw new TypeError;
        var args = slice.call(arguments, 1);
        var bound = function () {
            if (this instanceof bound) {
                var F = function () {
                };
                F.prototype = target.prototype;
                var self = new F;
                var result = target.apply(self, args.concat(slice.call(arguments)));
                if (Object(result) === result)return result;
                return self
            } else return target.apply(that, args.concat(slice.call(arguments)))
        };
        return bound
    };
    tests["flexbox"] = function () {
        return testPropsAll("flexWrap")
    };
    tests["canvas"] = function () {
        var elem = document$$0.createElement("canvas");
        return !!(elem.getContext && elem.getContext("2d"))
    };
    tests["canvastext"] = function () {
        return !!(Modernizr["canvas"] && is(document$$0.createElement("canvas").getContext("2d").fillText,
            "function"))
    };
    tests["webgl"] = function () {
        return !!window$$0.WebGLRenderingContext
    };
    tests["touch"] = function () {
        var bool;
        if ("ontouchstart"in window$$0 || window$$0.DocumentTouch && document$$0 instanceof DocumentTouch)bool = true; else injectElementWithStyles(["@media (", prefixes.join("touch-enabled),("), mod, ")", "{#modernizr{top:9px;position:absolute}}"].join(""), function (node) {
            bool = node.offsetTop === 9
        });
        return bool
    };
    tests["geolocation"] = function () {
        return "geolocation"in navigator
    };
    tests["postmessage"] = function () {
        return !!window$$0.postMessage
    };
    tests["websqldatabase"] = function () {
        return !!window$$0.openDatabase
    };
    tests["indexedDB"] = function () {
        return !!testPropsAll("indexedDB", window$$0)
    };
    tests["hashchange"] = function () {
        return isEventSupported("hashchange", window$$0) && (document$$0.documentMode === undefined || document$$0.documentMode > 7)
    };
    tests["history"] = function () {
        return !!(window$$0.history && history.pushState)
    };
    tests["draganddrop"] = function () {
        var div = document$$0.createElement("div");
        return "draggable"in div || "ondragstart"in div && "ondrop"in div
    };
    tests["websockets"] = function () {
        return "WebSocket"in window$$0 || "MozWebSocket"in window$$0
    };
    tests["rgba"] = function () {
        setCss("background-color:rgba(150,255,150,.5)");
        return contains(mStyle.backgroundColor, "rgba")
    };
    tests["hsla"] = function () {
        setCss("background-color:hsla(120,40%,100%,.5)");
        return contains(mStyle.backgroundColor, "rgba") || contains(mStyle.backgroundColor, "hsla")
    };
    tests["multiplebgs"] = function () {
        setCss("background:url(https://),url(https://),red url(https://)");
        return /(url\s*\(.*?){3}/.test(mStyle.background)
    };
    tests["backgroundsize"] = function () {
        return testPropsAll("backgroundSize")
    };
    tests["borderimage"] = function () {
        return testPropsAll("borderImage")
    };
    tests["borderradius"] = function () {
        return testPropsAll("borderRadius")
    };
    tests["boxshadow"] = function () {
        return testPropsAll("boxShadow")
    };
    tests["textshadow"] = function () {
        return document$$0.createElement("div").style.textShadow === ""
    };
    tests["opacity"] = function () {
        setCssAll("opacity:.55");
        return /^0.55$/.test(mStyle.opacity)
    };
    tests["cssanimations"] = function () {
        return testPropsAll("animationName")
    };
    tests["csscolumns"] = function () {
        return testPropsAll("columnCount")
    };
    tests["cssgradients"] = function () {
        var str1 = "background-image:";
        var str2 = "gradient(linear,left top,right bottom,from(#9f9),to(white));";
        var str3 = "linear-gradient(left top,#9f9, white);";
        setCss((str1 + "-webkit- ".split(" ").join(str2 + str1) + prefixes.join(str3 + str1)).slice(0, -str1.length));
        return contains(mStyle.backgroundImage, "gradient")
    };
    tests["cssreflections"] = function () {
        return testPropsAll("boxReflect")
    };
    tests["csstransforms"] = function () {
        return !!testPropsAll("transform")
    };
    tests["csstransforms3d"] = function () {
        var ret = !!testPropsAll("perspective");
        if (ret && "webkitPerspective"in docElement.style)injectElementWithStyles("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}", function (node, rule) {
            ret = node.offsetLeft === 9 && node.offsetHeight === 3
        });
        return ret
    };
    tests["csstransitions"] = function () {
        return testPropsAll("transition")
    };
    tests["fontface"] = function () {
        var bool;
        injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}',
            function (node, rule) {
                var style = document$$0.getElementById("smodernizr");
                var sheet = style.sheet || style.styleSheet;
                var cssText = sheet ? sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || "" : "";
                bool = /src/i.test(cssText) && cssText.indexOf(rule.split(" ")[0]) === 0
            });
        return bool
    };
    tests["generatedcontent"] = function () {
        var bool;
        injectElementWithStyles(["#", mod, "{font:0/0 a}#", mod, ':after{content:"', smile, '";visibility:hidden;font:3px/1 a}'].join(""), function (node) {
            bool = node.offsetHeight >=
            3
        });
        return bool
    };
    tests["video"] = function () {
        var elem = document$$0.createElement("video");
        var bool = false;
        try {
            if (bool = !!elem.canPlayType) {
                bool = new Boolean(bool);
                bool.ogg = elem.canPlayType('video/ogg; codecs\x3d"theora"').replace(/^no$/, "");
                bool.h264 = elem.canPlayType('video/mp4; codecs\x3d"avc1.42E01E"').replace(/^no$/, "");
                bool.webm = elem.canPlayType('video/webm; codecs\x3d"vp8, vorbis"').replace(/^no$/, "")
            }
        } catch (e) {
        }
        return bool
    };
    tests["audio"] = function () {
        var elem = document$$0.createElement("audio");
        var bool =
            false;
        try {
            if (bool = !!elem.canPlayType) {
                bool = new Boolean(bool);
                bool.ogg = elem.canPlayType('audio/ogg; codecs\x3d"vorbis"').replace(/^no$/, "");
                bool.mp3 = elem.canPlayType("audio/mpeg;").replace(/^no$/, "");
                bool.wav = elem.canPlayType('audio/wav; codecs\x3d"1"').replace(/^no$/, "");
                bool.m4a = (elem.canPlayType("audio/x-m4a;") || elem.canPlayType("audio/aac;")).replace(/^no$/, "")
            }
        } catch (e) {
        }
        return bool
    };
    tests["localstorage"] = function () {
        try {
            localStorage.setItem(mod, mod);
            localStorage.removeItem(mod);
            return true
        } catch (e) {
            return false
        }
    };
    tests["sessionstorage"] = function () {
        try {
            sessionStorage.setItem(mod, mod);
            sessionStorage.removeItem(mod);
            return true
        } catch (e) {
            return false
        }
    };
    tests["webworkers"] = function () {
        return !!window$$0.Worker
    };
    tests["applicationcache"] = function () {
        return !!window$$0.applicationCache
    };
    tests["svg"] = function () {
        return !!document$$0.createElementNS && !!document$$0.createElementNS(ns.svg, "svg").createSVGRect
    };
    tests["inlinesvg"] = function () {
        var div = document$$0.createElement("div");
        div.innerHTML = "\x3csvg/\x3e";
        return (div.firstChild &&
            div.firstChild.namespaceURI) == ns.svg
    };
    tests["smil"] = function () {
        return !!document$$0.createElementNS && /SVGAnimate/.test(toString.call(document$$0.createElementNS(ns.svg, "animate")))
    };
    tests["svgclippaths"] = function () {
        return !!document$$0.createElementNS && /SVGClipPath/.test(toString.call(document$$0.createElementNS(ns.svg, "clipPath")))
    };
    for (var feature in tests)if (hasOwnProp(tests, feature)) {
        featureName = feature.toLowerCase();
        Modernizr[featureName] = tests[feature]();
        classes.push((Modernizr[featureName] ? "" :
            "no-") + featureName)
    }
    Modernizr.input || webforms();
    Modernizr.addTest = function (feature, test) {
        if (typeof feature == "object")for (var key in feature) {
            if (hasOwnProp(feature, key))Modernizr.addTest(key, feature[key])
        } else {
            feature = feature.toLowerCase();
            if (Modernizr[feature] !== undefined)return Modernizr;
            test = typeof test == "function" ? test() : test;
            if (typeof enableClasses !== "undefined" && enableClasses)docElement.className += " " + (test ? "" : "no-") + feature;
            Modernizr[feature] = test
        }
        return Modernizr
    };
    setCss("");
    modElem = inputElem =
        null;
    (function (window, document) {
        function addStyleSheet(ownerDocument, cssText) {
            var p = ownerDocument.createElement("p");
            var parent = ownerDocument.getElementsByTagName("head")[0] || ownerDocument.documentElement;
            p.innerHTML = "x\x3cstyle\x3e" + cssText + "\x3c/style\x3e";
            return parent.insertBefore(p.lastChild, parent.firstChild)
        }

        function getElements() {
            var elements = html5.elements;
            return typeof elements == "string" ? elements.split(" ") : elements
        }

        function getExpandoData(ownerDocument) {
            var data = expandoData[ownerDocument[expando]];
            if (!data) {
                data = {};
                expanID++;
                ownerDocument[expando] = expanID;
                expandoData[expanID] = data
            }
            return data
        }

        function createElement(nodeName, ownerDocument, data) {
            if (!ownerDocument)ownerDocument = document;
            if (supportsUnknownElements)return ownerDocument.createElement(nodeName);
            if (!data)data = getExpandoData(ownerDocument);
            var node;
            if (data.cache[nodeName])node = data.cache[nodeName].cloneNode(); else if (saveClones.test(nodeName))node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode(); else node = data.createElem(nodeName);
            return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node
        }

        function createDocumentFragment(ownerDocument, data) {
            if (!ownerDocument)ownerDocument = document;
            if (supportsUnknownElements)return ownerDocument.createDocumentFragment();
            data = data || getExpandoData(ownerDocument);
            var clone = data.frag.cloneNode();
            var i = 0;
            var elems = getElements();
            for (var l = elems.length; i < l; i++)clone.createElement(elems[i]);
            return clone
        }

        function shivMethods(ownerDocument, data) {
            if (!data.cache) {
                data.cache = {};
                data.createElem = ownerDocument.createElement;
                data.createFrag = ownerDocument.createDocumentFragment;
                data.frag = data.createFrag()
            }
            ownerDocument.createElement = function (nodeName) {
                if (!html5.shivMethods)return data.createElem(nodeName);
                return createElement(nodeName, ownerDocument, data)
            };
            ownerDocument.createDocumentFragment = Function("h,f", "return function(){" + "var n\x3df.cloneNode(),c\x3dn.createElement;" + "h.shivMethods\x26\x26(" + getElements().join().replace(/\w+/g, function (nodeName) {
                data.createElem(nodeName);
                data.frag.createElement(nodeName);
                return 'c("' + nodeName + '")'
            }) + ");return n}")(html5, data.frag)
        }

        function shivDocument(ownerDocument) {
            if (!ownerDocument)ownerDocument = document;
            var data = getExpandoData(ownerDocument);
            if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS)data.hasCSS = !!addStyleSheet(ownerDocument, "article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}" + "mark{background:#FF0;color:#000}");
            if (!supportsUnknownElements)shivMethods(ownerDocument, data);
            return ownerDocument
        }

        var options = window.html5 || {};
        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;
        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;
        var supportsHtml5Styles;
        var expando = "_html5shiv";
        var expanID = 0;
        var expandoData = {};
        var supportsUnknownElements;
        (function () {
            try {
                var a = document.createElement("a");
                a.innerHTML = "\x3cxyz\x3e\x3c/xyz\x3e";
                supportsHtml5Styles = "hidden"in a;
                supportsUnknownElements = a.childNodes.length ==
                1 || function () {
                    document.createElement("a");
                    var frag = document.createDocumentFragment();
                    return typeof frag.cloneNode == "undefined" || typeof frag.createDocumentFragment == "undefined" || typeof frag.createElement == "undefined"
                }()
            } catch (e) {
                supportsHtml5Styles = true;
                supportsUnknownElements = true
            }
        })();
        var html5 = {
            "elements": options.elements || "abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",
            "shivCSS": options.shivCSS !==
            false,
            "supportsUnknownElements": supportsUnknownElements,
            "shivMethods": options.shivMethods !== false,
            "type": "default",
            "shivDocument": shivDocument,
            createElement: createElement,
            createDocumentFragment: createDocumentFragment
        };
        window.html5 = html5;
        shivDocument(document)
    })(this, document$$0);
    Modernizr._version = version;
    Modernizr._prefixes = prefixes;
    Modernizr._domPrefixes = domPrefixes;
    Modernizr._cssomPrefixes = cssomPrefixes;
    Modernizr.hasEvent = isEventSupported;
    Modernizr.testProp = function (prop) {
        return testProps([prop])
    };
    Modernizr.testAllProps = testPropsAll;
    Modernizr.testStyles = injectElementWithStyles;
    Modernizr.prefixed = function (prop, obj, elem) {
        if (!obj)return testPropsAll(prop, "pfx"); else return testPropsAll(prop, obj, elem)
    };
    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, "$1$2") + (enableClasses ? " js " + classes.join(" ") : "");
    return Modernizr
}(this, this.document);
(function (a$$3, b$$2, c$$2) {
    function d$$1(a) {
        return "[object Function]" == o$$0.call(a)
    }

    function e$$0(a) {
        return "string" == typeof a
    }

    function f$$0() {
    }

    function g$$1(a) {
        return !a || "loaded" == a || "complete" == a || "uninitialized" == a
    }

    function h$$1() {
        var a = p.shift();
        q = 1, a ? a.t ? m$$0(function () {
            ("c" == a.t ? B.injectCss : B.injectJs)(a.s, 0, a.a, a.x, a.e, 1)
        }, 0) : (a(), h$$1()) : q = 0
    }

    function i$$1(a, c, d$$0, e, f, i, j) {
        function k(b) {
            if (!o && g$$1(l.readyState) && (u.r = o = 1, !q && h$$1(), l.onload = l.onreadystatechange = null, b)) {
                "img" != a && m$$0(function () {
                        t.removeChild(l)
                    },
                    50);
                for (var d in y[c])y[c].hasOwnProperty(d) && y[c][d].onload()
            }
        }

        j = j || B.errorTimeout;
        var l = b$$2.createElement(a);
        var o = 0;
        var r = 0;
        var u = {t: d$$0, s: c, e: f, a: i, x: j};
        1 === y[c] && (r = 1, y[c] = []), "object" == a ? l.data = c : (l.src = c, l.type = a), l.width = l.height = "0", l.onerror = l.onload = l.onreadystatechange = function () {
            k.call(this, r)
        }, p.splice(e, 0, u), "img" != a && (r || 2 === y[c] ? (t.insertBefore(l, s ? null : n$$0), m$$0(k, j)) : y[c].push(l))
    }

    function j$$1(a, b, c, d, f) {
        return q = 0, b = b || "j", e$$0(a) ? i$$1("c" == b ? v : u$$0, a, b, this.i++, c, d, f) : (p.splice(this.i++,
            0, a), 1 == p.length && h$$1()), this
    }

    function k$$0() {
        var a = B;
        return a.loader = {load: j$$1, i: 0}, a
    }

    var l$$1 = b$$2.documentElement;
    var m$$0 = a$$3.setTimeout;
    var n$$0 = b$$2.getElementsByTagName("script")[0];
    var o$$0 = {}.toString;
    var p = [];
    var q = 0;
    var r$$0 = "MozAppearance"in l$$1.style;
    var s = r$$0 && !!b$$2.createRange().compareNode;
    var t = s ? l$$1 : n$$0.parentNode;
    l$$1 = a$$3.opera && "[object Opera]" == o$$0.call(a$$3.opera);
    l$$1 = !!b$$2.attachEvent && !l$$1;
    var u$$0 = r$$0 ? "object" : l$$1 ? "script" : "img";
    var v = l$$1 ? "script" : u$$0;
    var w =
        Array.isArray || function (a) {
            return "[object Array]" == o$$0.call(a)
        };
    var x = [];
    var y = {};
    var z = {
        timeout: function (a, b) {
            return b.length && (a.timeout = b[0]), a
        }
    };
    var A;
    var B;
    B = function (a$$2) {
        function b$$1(a) {
            a = a.split("!");
            var b = x.length;
            var c = a.pop();
            var d = a.length;
            c = {url: c, origUrl: c, prefixes: a};
            var e;
            var f;
            var g;
            for (f = 0; f < d; f++)g = a[f].split("\x3d"), (e = z[g.shift()]) && (c = e(c, g));
            for (f = 0; f < b; f++)c = x[f](c);
            return c
        }

        function g$$0(a, e, f, g, h) {
            var i = b$$1(a);
            var j = i.autoCallback;
            i.url.split(".").pop().split("?").shift(),
            i.bypass || (e && (e = d$$1(e) ? e : e[a] || e[g] || e[a.split("/").pop().split("?")[0]]), i.instead ? i.instead(a, e, f, g, h) : (y[i.url] ? i.noexec = !0 : y[i.url] = 1, f.load(i.url, i.forceCSS || !i.forceJS && "css" == i.url.split(".").pop().split("?").shift() ? "c" : c$$2, i.noexec, i.attrs, i.timeout), (d$$1(e) || d$$1(j)) && f.load(function () {
                k$$0(), e && e(i.origUrl, h, g), j && j(i.origUrl, h, g), y[i.url] = 2
            })))
        }

        function h$$0(a$$1, b$$0) {
            function c$$1(a$$0, c$$0) {
                if (a$$0)if (e$$0(a$$0))c$$0 || (j = function () {
                    var a = [].slice.call(arguments);
                    k.apply(this, a),
                        l()
                }), g$$0(a$$0, j, b$$0, 0, h); else {
                    if (Object(a$$0) === a$$0)for (n in m = function () {
                        var b = 0;
                        for (var c in a$$0)a$$0.hasOwnProperty(c) && b++;
                        return b
                    }(), a$$0)a$$0.hasOwnProperty(n) && (!c$$0 && !--m && (d$$1(j) ? j = function () {
                        var a = [].slice.call(arguments);
                        k.apply(this, a), l()
                    } : j[n] = function (a) {
                        return function () {
                            var b = [].slice.call(arguments);
                            a && a.apply(this, b), l()
                        }
                    }(k[n])), g$$0(a$$0[n], j, b$$0, n, h))
                } else!c$$0 && l()
            }

            var h = !!a$$1.test;
            var i = a$$1.load || a$$1.both;
            var j = a$$1.callback || f$$0;
            var k = j;
            var l = a$$1.complete || f$$0;
            var m;
            var n;
            c$$1(h ? a$$1.yep : a$$1.nope, !!i), i && c$$1(i)
        }

        var i$$0;
        var j$$0;
        var l$$0 = this.yepnope.loader;
        if (e$$0(a$$2))g$$0(a$$2, 0, l$$0, 0); else if (w(a$$2))for (i$$0 = 0; i$$0 < a$$2.length; i$$0++)j$$0 = a$$2[i$$0], e$$0(j$$0) ? g$$0(j$$0, 0, l$$0, 0) : w(j$$0) ? B(j$$0) : Object(j$$0) === j$$0 && h$$0(j$$0, l$$0); else Object(a$$2) === a$$2 && h$$0(a$$2, l$$0)
    }, B.addPrefix = function (a, b) {
        z[a] = b
    }, B.addFilter = function (a) {
        x.push(a)
    }, B.errorTimeout = 1E4, null == b$$2.readyState && b$$2.addEventListener && (b$$2.readyState = "loading", b$$2.addEventListener("DOMContentLoaded",
        A = function () {
            b$$2.removeEventListener("DOMContentLoaded", A, 0), b$$2.readyState = "complete"
        }, 0)), a$$3.yepnope = k$$0(), a$$3.yepnope.executeStack = h$$1, a$$3.yepnope.injectJs = function (a, c, d, e, i, j) {
        var k = b$$2.createElement("script");
        var l;
        var o;
        e = e || B.errorTimeout;
        k.src = a;
        for (o in d)k.setAttribute(o, d[o]);
        c = j ? h$$1 : c || f$$0, k.onreadystatechange = k.onload = function () {
            !l && g$$1(k.readyState) && (l = 1, c(), k.onload = k.onreadystatechange = null)
        }, m$$0(function () {
            l || (l = 1, c(1))
        }, e), i ? k.onload() : n$$0.parentNode.insertBefore(k,
            n$$0)
    }, a$$3.yepnope.injectCss = function (a, c, d, e, g, i) {
        e = b$$2.createElement("link");
        var j;
        c = i ? h$$1 : c || f$$0;
        e.href = a, e.rel = "stylesheet", e.type = "text/css";
        for (j in d)e.setAttribute(j, d[j]);
        g || (n$$0.parentNode.insertBefore(e, n$$0), m$$0(c, 0))
    }
})(this, document);
Modernizr.load = function () {
    yepnope.apply(window, [].slice.call(arguments, 0))
};
var module$decoration = {};
module$jquery;
module$jquery_easing;
module$jquery_cookie;
module$modernizr;
module$jquery_tools;
module$jquery_cookie;
var musicPausedForModal$$module$decoration = false;
$(window).load(function () {
    $("#header").append('\x3cdiv id\x3d"aaa" /\x3e');
    if (typeof greyBarRR === "object")$("#greystrip").append('\x3cdiv id\x3d"here"\x3e\x3cdiv class\x3d"left"\x3e\x3cdiv class\x3d"icon-pool-hotel"\x3e\x3ca href\x3d"/new-hope/pool.php"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"fb_icon"\x3e\x3ca href\x3d"https://www.facebook.com/BowmansHillInn" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"tw_icon"\x3e\x3ca href\x3d"https://twitter.com/BowmansHillInn" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"yt_icon"\x3e\x3ca href\x3d"https://www.youtube.com/user/theinnatbowmanshill" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"right"\x3e\x3cdiv class\x3d"reservations"\x3eBOOK NOW \x26gt;\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e'); else $("#greystrip").append('\x3cdiv id\x3d"here"\x3e\x3cdiv class\x3d"left"\x3e\x3cdiv class\x3d"icon-pool-hotel"\x3e\x3ca href\x3d"/new-hope/pool.php"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"fb_icon"\x3e\x3ca href\x3d"https://www.facebook.com/BowmansHillInn" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"tw_icon"\x3e\x3ca href\x3d"https://twitter.com/BowmansHillInn" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3cdiv class\x3d"yt_icon"\x3e\x3ca href\x3d"https://www.youtube.com/user/theinnatbowmanshill" target\x3d"_blank"\x3ehere\x3c/a\x3e\x3c/div\x3e\x3c/div\x3e\x3cdiv class\x3d"right"\x3e\x3cdiv class\x3d"reservations"\x3eRESERVATIONS \x26gt;\x3c/div\x3e\x3c/div\x3e\x3c/div\x3e');
    $("#greystrip .reservations").click(function () {
        _gaq.push(["_link", "https://www.superinn.com/copy1/res_avail.asp?crypt\x3d%BF%7Fp%5B%98%BB%B4%B2%A6%98fynP%C1%A8%A6%9A%C1%7DX%B2%9A%B9%C7%AF%AA%7C%7C%B2%A8%95%87%91%5F%B6%B7%AE%A4%CA%B6%7DJ%B6%BE%9A%C1%BE%A3%B1%CBb%5F%B9%94%97%92"])
    });
    if (typeof greyBarLink === "object")$("div#greystrip div.left").prepend(greyBarLink);
    if (Modernizr.touch) {
        $(".tooltip div").append('\x3cdiv class\x3d"close" /\x3e');
        $(".tooltip div.close").click(function (e) {
            e.stopPropagation();
            $(this).closest(".tooltip").prev().data("tooltip").getTip().hide()
        })
    }
    $("#overlay").css("display", "none");
    $("a.modal").overlay({mask: "#333", oneInstance: false, target: "#overlay"})
});
function loadUrl$$module$decoration(url) {
    loadSizedUrl$$module$decoration(url, 620, 470)
}
function loadSizedUrl$$module$decoration(url, width, height) {
    loadSizedUrlMusic$$module$decoration(url, width, height, false)
}
function loadSizedUrlSilence$$module$decoration(url, width, height) {
    loadSizedUrlMusic$$module$decoration(url, width, height, true)
}
function loadSizedUrlMusic$$module$decoration(url, width, height, silenceMusic) {
    if (silenceMusic) {
        musicPausedForModal$$module$decoration = $("#music a.off").hasClass("inactive");
        if (musicPausedForModal$$module$decoration)$("#music a.off").click()
    }
    if ($("#urlOverlay").length <= 0)$("body").append($('\x3cdiv id\x3d"urlOverlay" class\x3d"overlay"\x3e\x3cdiv class\x3d"content_wrap"\x3e\x3c/div\x3e\x3c/div\x3e'));
    $("#urlOverlay").overlay({
        mask: "#333", load: false, target: "#urlOverlay", onBeforeLoad: function () {
            $("#urlOverlay .content_wrap").empty().append($('\x3ciframe src\x3d"' +
            url + '" style\x3d"height:' + height + "px; width: " + width + 'px; border:none;" frameborder\x3d"0" scrolling\x3d"auto"\x3e\x3c/iframe\x3e'))
        }, onClose: function () {
            $("#urlOverlay").remove();
            $("body").css("overflow", "scroll");
            if (musicPausedForModal$$module$decoration) {
                $("#music a.on").click();
                musicPausedForModal$$module$decoration = false
            }
        }
    });
    $("#urlOverlay").data("overlay").load()
};
var module$persistentAudio = {};
module$jquery;
module$jquery_cookie;
module$jplayer;
function initializePersistentAudio$$module$persistentAudio() {
    $("body").append('\x3cdiv id\x3d"jplayer" /\x3e');
    $("#jplayer").jPlayer({
        ready: function (e) {
            var initSeconds = $.cookie("jplayer") == null ? 0 : parseFloat($.cookie("jplayer"));
            $(this).jPlayer("setMedia", {mp3: "/mp3/spring.mp3", ogg: "/mp3/spring.ogg"});
            if (initSeconds == 0) {
                var cycles = 0;
                $(function () {
                    var volumeFadeIn = setInterval(function () {
                        if (cycles >= 16)clearInterval(volumeFadeIn); else {
                            $("#jplayer").jPlayer("volume", cycles * 0.05);
                            cycles += 1
                        }
                    }, 500)
                })
            } else $("#jplayer").jPlayer("volume",
                0.8);
            if ($.cookie("jplayer_on") == null || $.cookie("jplayer_on") != "false")$(this).jPlayer("play", initSeconds);
            $("#header").append('\x3cdiv id\x3d"music" /\x3e');
            $("#music").append('\x3ca class\x3d"on"\x3e\x3c/a\x3e\x3ca class\x3d"off"\x3e\x3c/a\x3e');
            $("#music a.off").addClass("inactive");
            $("#music a.on").click(function () {
                $("#music a.on").removeClass("inactive");
                $("#music a.off").addClass("inactive");
                var initSeconds = $.cookie("jplayer") == null ? 0 : parseFloat($.cookie("jplayer"));
                $("#jplayer").jPlayer("play",
                    initSeconds);
                $.cookie("jplayer_on", "true", {path: "/"})
            });
            $("#music a.off").click(function () {
                $("#music a.off").removeClass("inactive");
                $("#music a.on").addClass("inactive");
                $.cookie("jplayer", $("#jplayer").data("jPlayer").status.currentTime, {path: "/"});
                $.cookie("jplayer_on", "false", {path: "/"});
                $("#jplayer").jPlayer("pause")
            });
            if (navigator.userAgent.match(/iPad|iPhone|iPod/i) != null || $.cookie("jplayer_on") != null && $.cookie("jplayer_on") == "false")$("#music a.off").click()
        }, swfPath: "/swf/jplayer.swf", solution: "html, flash",
        volume: 0, muted: false, loop: true
    })
}
$(document).ready(function () {
    if ($.cookie("jplayer") != null)initializePersistentAudio$$module$persistentAudio()
});
$(window).load(function () {
    if ($.cookie("jplayer") == null)initializePersistentAudio$$module$persistentAudio()
});
$(window).unload(function () {
    $.cookie("jplayer", $("#jplayer").data("jPlayer").status.currentTime, {path: "/"})
});
var module$phoenix_effect = {};
module$jquery;
module$jquery_easing;
$(window).load(function () {
    try {
        $("#header").prepend('\x3cdiv id\x3d"phoenix"\x3e\x3c/div\x3e');
        var phoenix = {
            text: null, selection: null, counter: 0, rise: function () {
                this.selection = this.text[this.counter];
                this.contructDom(this.selection);
                if (this.counter >= this.text.length - 1)this.counter = 0; else this.counter++
            }, contructDom: function (selection) {
                if (typeof selection === "undefined")return;
                if (selection.type == "phoenix") {
                    $("#phoenix").append('\x3cspan class\x3d"headline text-glow" /\x3e\x3cspan class\x3d"subtext text-glow" /\x3e');
                    $("#phoenix .headline").text(selection.headline);
                    $("#phoenix .subtext").text(selection.subtext);
                    $("#phoenix").css({top: "120px", opacity: "1"});
                    if (selection.headlineColor != null)$("#phoenix .headline").css("color", selection.headlineColor);
                    if (selection.subtextColor != null)$("#phoenix .subtext").css("color", selection.subtextColor);
                    $("#phoenix").animate({top: "25px"}, {
                        duration: 5E3, easing: "easeOutCubic", complete: function () {
                            phoenix.addClickAction();
                            setTimeout(function () {
                                phoenix.readMore()
                            }, 1E3)
                        }
                    })
                }
                if (selection.type == "newsflash") {
                    $("#phoenix").append('\x3cspan class\x3d"headline newsflash text-glow" /\x3e\x3cspan class\x3d"subtext newsflash text-glow" /\x3e');
                    $("#phoenix .headline").text(selection.headline);
                    $("#phoenix .subtext").text(selection.subtext);
                    if (selection.headlineColor != null)$("#phoenix .headline").css("color", selection.headlineColor);
                    if (selection.subtextColor != null)$("#phoenix .subtext").css("color", selection.subtextColor);
                    $("#phoenix").css({top: "120px", opacity: "1"});
                    $("#phoenix").animate({top: "25px"}, {
                        duration: 1E3, easing: "easeInCubic", complete: function () {
                            phoenix.addClickAction();
                            setTimeout(function () {
                                phoenix.readMore()
                            }, 1E3)
                        }
                    })
                }
                if (selection.type ==
                    "quote") {
                    $("#phoenix").append('\x3cspan class\x3d"quotation" /\x3e\x3cspan class\x3d"author" /\x3e').css({
                        "top": "25px",
                        "opacity": "0"
                    });
                    $("#phoenix .quotation").html(selection.quote);
                    $("#phoenix .author").text("~" + selection.author);
                    if (selection.quotationColor != null)$("#phoenix .quotation, #phoenix .author").css("color", selection.quotationColor);
                    $("#phoenix").animate({opacity: "1"}, {
                        duration: 5E3, easing: "easeOutCubic", complete: function () {
                            phoenix.addClickAction();
                            setTimeout(function () {
                                    phoenix.fadeOut()
                                },
                                5E3)
                        }
                    })
                }
            }, readMore: function () {
                if (this.selection.href != null && $.trim(this.selection.href) != "") {
                    $("#phoenix").append('\x3cspan class\x3d"readmore"\x3eRead More \x26gt;\x3c/span\x3e');
                    if (this.selection.subtextColor != null)$("#phoenix .readmore").css("color", this.selection.subtextColor);
                    $("#phoenix .readmore").css({
                        top: $("#phoenix .subtext").position().top + 2 + "px",
                        left: $("#phoenix .subtext").position().left + $("#phoenix .subtext").width() + 10 + "px"
                    });
                    $("#phoenix .readmore").fadeOut(0);
                    $("#phoenix .readmore").fadeIn(500)
                }
                setTimeout(function () {
                        phoenix.fadeOut()
                    },
                    5E3)
            }, fadeOut: function () {
                $("#phoenix").animate({opacity: "0"}, {
                    duration: 500, easing: "easeOutCubic", complete: function () {
                        setTimeout(function () {
                            $("#phoenix").empty().unbind("click").css({"cursor": "auto"});
                            $("#phoenixClick").remove();
                            phoenix.rise()
                        }, 3E3)
                    }
                })
            }, addClickAction: function () {
                if (this.selection.href != null && $.trim(this.selection.href) != "") {
                    $("#header").append('\x3cdiv id\x3d"phoenixClick"\x3e\x3c/div\x3e');
                    $("#phoenixClick").css({
                        "height": $("#phoenix").height() + "px",
                        "width": $("#phoenix").width() +
                        "px",
                        "position": "absolute",
                        "z-index": "3",
                        "top": $("#phoenix").position().top + "px",
                        "left": $("#phoenix").position().left + "px",
                        "cursor": "pointer"
                    }).click(function () {
                        window.location = phoenix.selection.href
                    })
                }
            }, shuffle: function (o) {
                var j;
                var x;
                for (var i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
                return o
            }, sort: function (text) {
                this.shuffle(text);
                var total = text.length;
                var p = [];
                var n = [];
                var q = [];
                for (i = 0; i < total; i++)if (text[i].type == "phoenix")p.push(text[i]); else if (text[i].type == "newsflash")n.push(text[i]);
                else if (text[i].type == "quote")q.push(text[i]);
                text = [];
                for (var type = "phoenix"; p.length > 0 || n.length > 0 || q.length > 0;)if (type == "phoenix") {
                    if (p.length > 0)text.push(p.pop());
                    type = "newsflash"
                } else if (type == "newsflash") {
                    if (n.length > 0)text.push(n.pop());
                    type = "quote"
                } else if (type == "quote") {
                    if (q.length > 0)text.push(q.pop());
                    type = "phoenix"
                }
                return text
            }
        };
        $.getJSON("/phoenix-text?callback\x3d?", function (data) {
            phoenix.text = phoenix.sort(data);
            phoenix.rise()
        })
    } catch (ex) {
    }
});
var module$slideshow = {};
module$jquery;
module$jquery_easing;
module$jquery_cycle;
module$jquery_mobile_touch;
var sliderSuspended$$module$slideshow = false;
var slidesAdded$$module$slideshow = false;
var pauseTimer$$module$slideshow;
function getTopSlideCount$$module$slideshow() {
    var count = 1;
    for (var k in slideShowConfig)if (slideShowConfig.hasOwnProperty(k))++count;
    return count
}
function getMiniSlideCount$$module$slideshow(miniSlideConfig) {
    var count = 0;
    for (var k in miniSlideConfig)if (miniSlideConfig.hasOwnProperty(k))++count;
    return count
}
function onBefore$$module$slideshow(curr, next, opts) {
    $("#goto a").removeClass("current");
    $("#goto" + (opts.nextSlide + 1)).addClass("current");
    var isOddSlide = !(opts.currSlide % 2 === 0);
    if (!sliderSuspended$$module$slideshow && isOddSlide) {
        thumbnailScroll$$module$slideshow(1, 4);
        thumbnailScroll$$module$slideshow(2, 4)
    }
    if (!opts.addSlide || slidesAdded$$module$slideshow)return;
    addSlides$$module$slideshow(opts)
}
function addSlides$$module$slideshow(opts) {
    slidesAdded$$module$slideshow = true;
    $("#slides .prev").fadeIn(500);
    var slideCount = getTopSlideCount$$module$slideshow();
    for (i = 1; i <= slideCount; i++)$("div#goto").append('\x3ca class\x3d"goto" id\x3d"goto' + i + '" /\x3e');
    $("#goto2").addClass("current");
    $("div#goto").width(slideCount * 20).show();
    for (i = 1; i <= slideCount; i++)$("#goto" + i).click(function () {
        var count = $(this).attr("id").substring(4);
        $("div.slides_container").cycle(count - 1)
    });
    if (slideCount > 2)for (i = 3; i <= slideCount; i++) {
        opts.addSlide('\x3cdiv class\x3d"slide slide' +
        i + '" /\x3e');
        $(".slide" + i).append('\x3cdiv class\x3d"caption ' + slideShowConfig["slide" + i].location + '"\x3e\x3cspan\x3e\x3c/span\x3e\x3ch1\x3e\x3c/h1\x3e\x3c/div\x3e');
        $(".slide" + i + " .caption span").text(slideShowConfig["slide" + i].title);
        $(".slide" + i + " .caption h1").text(slideShowConfig["slide" + i].subtext)
    }
}
function goToSlide$$module$slideshow(slideIndex) {
    if (!slidesAdded$$module$slideshow)addSlides$$module$slideshow($("div.slides_container").data("cycle.opts"));
    $("div.slides_container").cycle(slideIndex)
}
function onAfter$$module$slideshow(curr, next, opts) {
}
function showOnCommandSlide$$module$slideshow(cssClass) {
    $("#slide_container").hide();
    var onCommandSlide = $("#onCommandSlide");
    onCommandSlide.removeClass();
    onCommandSlide.addClass(cssClass);
    $("#onCommandSlide_container").show()
}
function temporaryAutoPause$$module$slideshow() {
    sliderSuspended$$module$slideshow = true;
    window.clearTimeout(pauseTimer$$module$slideshow);
    $("div.slides_container").cycle("pause");
    pauseTimer$$module$slideshow = window.setTimeout(resumeAfterPause$$module$slideshow, 2E4)
}
function resumeAfterPause$$module$slideshow() {
    sliderSuspended$$module$slideshow = false;
    $("div.slides_container").cycle("resume")
}
function thumbnailScrollNext$$module$slideshow(event) {
    thumbnailScroll$$module$slideshow(event.data.value, 4);
    temporaryAutoPause$$module$slideshow()
}
function thumbnailScrollPrev$$module$slideshow(event) {
    thumbnailScroll$$module$slideshow(event.data.value, -4);
    temporaryAutoPause$$module$slideshow()
}
function thumbnailScroll$$module$slideshow(number, delta) {
    var pos = $("div#thumbnails-" + number).scrollLeft();
    var index = Math.round(pos / 244);
    var pixelAdj = 0;
    var targetIndex = index + delta;
    var newPos = 244 * targetIndex - pixelAdj;
    $("div#thumbnails-" + number).animate({scrollLeft: newPos}, 2500, "easeOutCubic");
    thumbnailsCheckPosition$$module$slideshow(number)
}
function thumbnailsCheckPosition$$module$slideshow(number) {
    var targetConfig = window["thumbnailConfig_" + number];
    var miniSlideCount = getMiniSlideCount$$module$slideshow(targetConfig);
    var pos = $("div#thumbnails-" + number).scrollLeft();
    var index = Math.round(pos / 244);
    $("div#thumbnail-" + number + "-outer-wrapper .prev, div#thumbnail-" + number + "-outer-wrapper .next").hide();
    if (index > 0)$("div#thumbnail-" + number + "-outer-wrapper .prev").show();
    if (index < miniSlideCount - 4)$("div#thumbnail-" + number + "-outer-wrapper .next").show()
}
function loadMiniSlider$$module$slideshow(number) {
    var targetConfig = window["thumbnailConfig_" + number];
    var thumbnailGroupsConfig = window["thumbnailGroupsConfig_" + number];
    if (typeof targetConfig !== "undefined") {
        $("div#thumbnails-" + number).append('\x3cdiv id\x3d"thumbnail-' + number + '-wrapper"/\x3e');
        $("#thumbnails-" + number + " .prev").fadeOut(0);
        var bottomSliderStarted = false;
        $("div#thumbnails-" + number).on("vmousedown", function (event) {
            temporaryAutoPause$$module$slideshow()
        });
        $("div#thumbnails-" + number).on("scrollstop",
            {value: number}, function (event) {
                thumbnailsCheckPosition$$module$slideshow(event.data.value)
            });
        var miniSlideCount = getMiniSlideCount$$module$slideshow(targetConfig);
        var thumbnailInstanceWrapper = $("#thumbnail-" + number + "-wrapper");
        for (i = 1; i <= miniSlideCount; i++)thumbnailInstanceWrapper.append('\x3cdiv class\x3d"thumbnailWrapper"\x3e\x3ca class\x3d"thumbnail' + (i == miniSlideCount ? " last" : "") + '" id\x3d"thumbnail-' + number + "-" + i + '" href\x3d"' + targetConfig["thumb" + i] + '"\x3e\x3cdiv /\x3e\x3c/a\x3e\x3c/div\x3e');
        if (thumbnailGroupsConfig != null)for (i = 1; i <= miniSlideCount; i++)if (thumbnailGroupsConfig != null)for (j = 0; j < thumbnailGroupsConfig.length; j++) {
            var thumbnailGroupConfig = thumbnailGroupsConfig[j];
            var lowEnd = thumbnailGroupConfig[0];
            var highEnd = thumbnailGroupConfig[1];
            if (i == lowEnd)setThumbBorder$$module$slideshow(thumbnailInstanceWrapper, number, i, lowEnd, highEnd)
        }
        $("div#thumbnail-" + number + "-outer-wrapper").append('\x3ca class\x3d"navigation prev" title\x3d"Previous Slide"\x3e\x3c/a\x3e\x3ca class\x3d"navigation next" title\x3d"Next Slide"\x3e\x3c/a\x3e');
        $("div#thumbnail-" + number + "-outer-wrapper .prev").on("click", {value: number}, thumbnailScrollPrev$$module$slideshow);
        $("div#thumbnail-" + number + "-outer-wrapper .next").on("click", {value: number}, thumbnailScrollNext$$module$slideshow);
        thumbnailInstanceWrapper.width(miniSlideCount * 244 + 5);
        $("#thumbnail-" + number + "-outer-wrapper").show();
        $("div#thumbnails-" + number + " a.thumbnail div").on("mouseenter", function () {
            $(this).stop().animate({opacity: 0}, 700)
        }).on("mouseleave", function () {
            if ($(this).parent().attr("href") !==
                window.location.pathname)$(this).stop().animate({opacity: 1}, 700)
        });
        $("div#thumbnails-" + number + ' a.thumbnail[href\x3d"' + window.location.pathname + '"] div').css("opacity", "0")
    }
}
function setThumbBorder$$module$slideshow(thumbnailInstanceWrapper, configNumber, slideNumber, lowEnd, highEnd) {
    var targetSlide = $("#thumbnail-" + configNumber + "-" + slideNumber);
    var left = (lowEnd - 1) * 244;
    var width = (highEnd - lowEnd + 1) * 244 - 16;
    var height = targetSlide.height() - 1;
    thumbnailInstanceWrapper.append("\x3cdiv class\x3d'thumbHighlight top' style\x3d'top:0px;left:" + left + "px;width:" + width + "px;height:1px'\x3e\x3c/div\x3e" + "\x3cdiv class\x3d'thumbHighlight bottom' style\x3d'top:" + height + "px;left:" + left + "px;width:" +
    (width + 1) + "px;height:1px'\x3e\x3c/div\x3e" + "\x3cdiv class\x3d'thumbHighlight left' style\x3d'left:" + (left - 1) + "px;top:0px;width:1px;height:" + height + "px'\x3e\x3c/div\x3e" + "\x3cdiv class\x3d'thumbHighlight right' style\x3d'left:" + (left + width - 1) + "px;top:0px;width:1px;height:" + height + "px'\x3e\x3c/div\x3e")
}
$(window).load(function () {
    if (getTopSlideCount$$module$slideshow() > 1) {
        $("div#slides").append('\x3ca class\x3d"navigation prev" title\x3d"Previous Slide"\x3e\x3c/a\x3e\x3ca class\x3d"navigation next" title\x3d"Next Slide"\x3e\x3c/a\x3e');
        $("div.slides_container").append('\x3cdiv class\x3d"slide slide2" /\x3e').cycle({
            fx: "scrollHorz",
            speed: 2500,
            pause: 1,
            timeout: 7E3,
            next: "#slides .next",
            prev: "#slides .prev",
            before: onBefore$$module$slideshow,
            after: onAfter$$module$slideshow,
            easing: "easeOutCubic"
        });
        $(".slide2").append('\x3cdiv class\x3d"caption ' +
        slideShowConfig.slide2.location + '"\x3e\x3cspan\x3e\x3c/span\x3e\x3ch1\x3e\x3c/h1\x3e\x3c/div\x3e');
        $(".slide2 .caption span").text(slideShowConfig.slide2.title);
        $(".slide2 .caption h1").text(slideShowConfig.slide2.subtext);
        $("#slides .prev").fadeOut(0);
        $("div#slides").on("swiperight", function () {
            $("div.slides_container").cycle("prev");
            temporaryAutoPause$$module$slideshow()
        }).on("swipeleft", function () {
            $("div.slides_container").cycle("next");
            temporaryAutoPause$$module$slideshow()
        })
    }
    loadMiniSlider$$module$slideshow(1);
    loadMiniSlider$$module$slideshow(2);
    $(".navigation, .goto").on("click", temporaryAutoPause$$module$slideshow);
    thumbnailsCheckPosition$$module$slideshow(1);
    thumbnailsCheckPosition$$module$slideshow(2)
});
var module$socialMedia = {};
module$jquery;
$(window).load(function () {
    if (!navigator.userAgent.match(/msie 6/i) && !navigator.userAgent.match(/msie 7/i)) {
        $("div.organizer").append('\x3cdiv class\x3d"social"\x3e\x3c/div\x3e');
        $("body").prepend('\x3cdiv id\x3d"fb-root"\x3e\x3c/div\x3e');
        $("div.social").append('\x3cdiv class\x3d"fb-like" data-href\x3d"' + window.location + '" data-send\x3d"false" data-layout\x3d"button_count" data-width\x3d"70" data-show-faces\x3d"false" data-colorscheme\x3d"dark"\x3e\x3c/div\x3e');
        (function (d, s, id) {
            var js;
            var fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id))return;
            js = d.createElement(s);
            js.id = id;
            js.src = "//connect.facebook.net/en_US/all.js#xfbml\x3d1";
            fjs.parentNode.insertBefore(js, fjs)
        })(document, "script", "facebook-jssdk");
        $("div.social").append('\x3cdiv id\x3d"pinterestWrapper"\x3e\x3ca href\x3d"//pinterest.com/pin/create/button/?url\x3dhttp%3A%2F%2Ftheinnatbowmanshill.com\x26media\x3dhttp%3A%2F%2Fd1jcy68tgito8q.cloudfront.net%2Fassets%2F0.0.87%2Fimages%2Fdusk.jpg\x26description\x3dThe%20Inn%20at%20Bowman%26%23x27%3Bs%20Hill" data-pin-do\x3d"buttonPin" data-pin-config\x3d"none"\x3e\x3cimg src\x3d"//assets.pinterest.com/images/pidgets/pin_it_button.png" /\x3e\x3c/a\x3e\x3c/div\x3e');
        var pinterestScript = document.createElement("script");
        pinterestScript.src = "//assets.pinterest.com/js/pinit.js";
        document.body.appendChild(pinterestScript);
        $("#pinterestWrapper").css({
            "width": "50px",
            "margin-left": "10px",
            "display": "inline-block",
            "zoom": "1",
            "*display": "inline"
        })
    }
});
var module$topnav = {};
module$modernizr;
module$jquery;
module$jquery_hoverintent;
$(document).ready(function () {
    if (Modernizr.touch) {
        $("div#nav div.top li.drop \x3e a").on("click", function (e) {
            e.preventDefault();
            $("div#nav div.top li.drop").removeClass("highlight");
            $(this).parent().addClass("highlight")
        });
        $("div#slides").on("click", function () {
            $("div#nav div.top li.drop").removeClass("highlight")
        });
        $("div#nav div.top li.drop \x3e a").each(function () {
            $("ul", $(this).parent()).prepend('\x3cli\x3e\x3ca href\x3d"' + $(this).attr("href") + '"\x3e' + $(this).text() + "\x3c/a\x3e\x3c/li\x3e")
        })
    } else $("div#nav div.top li.drop").hoverIntent({
        over: function () {
            $(this).addClass("highlight")
        },
        out: function () {
            $(this).removeClass("highlight")
        }, timeout: 400
    });
    $('div#nav a[href\x3d"' + window.location.pathname + '"]').closest("div#nav \x3e div.top \x3e div \x3e ul \x3e li").addClass("current")
});
var module$rates = {};
module$jquery;
module$jquery_easing;
module$topnav;
module$phoenix_effect;
slideShowConfig = {};
thumbnailConfig_1 = {
    thumb1: "/new-hope/rates/orchard-retreat.php",
    thumb2: "/new-hope/rates/hidden-pines.php",
    thumb3: "/new-hope/rates/fountain-view.php",
    thumb4: "/new-hope/rates/pond-vista.php"
};
thumbnailConfig_2 = {
    thumb1: "/new-hope/rates/the-penthouse.php",
    thumb2: "/new-hope/rates/general-washington.php",
    thumb3: "/new-hope/rates/manor-suite.php",
    thumb4: "/new-hope/rates/tower-suite.php"
};
module$slideshow;
module$persistentAudio;
module$decoration;
module$flickrImport;
module$socialMedia;